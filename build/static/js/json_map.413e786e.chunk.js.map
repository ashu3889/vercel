{"version":3,"file":"static/js/json_map.413e786e.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/ZoomTools.ts","../node_modules/src/.internal/core/render/ZoomableContainer.ts","../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/src/.internal/charts/map/MapChartDefaultTheme.ts","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/charts/map/MapChart.ts","../node_modules/d3-geo/src/path/index.js","../node_modules/src/.internal/charts/map/MapPointSeries.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/src/.internal/charts/map/ClusteredPointSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/lcg.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/pack/index.js"],"sourcesContent":["import { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer, IDisposer } from \"../../core/util/Disposer\";\r\nimport { ZoomableContainer } from \"./ZoomableContainer\";\r\n\r\nexport interface IZoomable {\r\n\tzoomIn(): void;\r\n\tzoomOut(): void;\r\n\tgoHome(): void;\r\n}\r\n\r\nexport interface IZoomToolsSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * A target element that zoom tools will control, e.g. [[ZoomableContainer]].\r\n\t */\r\n\ttarget?: IZoomable;\r\n\r\n}\r\n\r\nexport interface IZoomToolsPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomToolsEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n\r\n\tpublic static className: string = \"ZoomTools\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomTools.className]);\r\n\tdeclare public _events: IContainerEvents;\r\n\r\n\t/**\r\n\t * A [[Button]] for home.\r\n\t */\r\n\tpublic readonly homeButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom in.\r\n\t */\r\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom out.\r\n\t */\r\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }));\r\n\r\n\tdeclare public _settings: IZoomToolsSettings;\r\n\tdeclare public _privateSettings: IZoomToolsPrivate;\r\n\r\n\tprotected _disposer: MultiDisposer | undefined;\r\n\tprotected _targetDisposer: IDisposer | undefined;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.set(\"position\", \"absolute\");\r\n\r\n\t\tthis.set(\"layout\", this._root.verticalLayout);\r\n\t\tthis.addTag(\"zoomtools\");\r\n\r\n\t\tthis.plusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.minusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.homeButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\r\n\t\t\tconst previous = this._prevSettings.target;\r\n\t\t\tif (target) {\r\n\t\t\t\tif (target instanceof ZoomableContainer) {\r\n\t\t\t\t\tthis._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale) => {\r\n\t\t\t\t\t\tif (scale == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (scale == target.get(\"maxZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\tif (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposer = new MultiDisposer([\r\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomIn()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomOut()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.homeButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.goHome()\r\n\t\t\t\t\t})])\r\n\t\t\t}\r\n\r\n\t\t\tif (previous) {\r\n\t\t\t\tif (this._disposer) {\r\n\t\t\t\t\tthis._disposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tif (this._targetDisposer) {\r\n\t\t\t\t\tthis._targetDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import type { Time } from \"../../core/util/Animation\";\r\nimport type { Animation } from \"../../core/util/Entity\";\r\nimport type { IDisposer } from \"../../core/util/Disposer\";\r\nimport type { IPoint } from \"../../core/util/IPoint\";\r\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\r\n\r\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { color } from \"../../core/util/Color\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $type from \"../../core/util/Type\";\r\n\r\nexport interface IZoomableContainerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Maximum zoom-in level.\r\n\t * \r\n\t * @default 32\r\n\t */\r\n\tmaxZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Maximum zoom-out level.\r\n\t * \r\n\t * @default 1\r\n\t */\r\n\tminZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Zoom level increase/decrease factor with each zoom action.\r\n\t * \r\n\t * @defult 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Pinch-zooming is enabled on touch devices.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpinchZoom?: boolean;\r\n\r\n\t/**\r\n\t * Animation duration (ms) for zoom animations.\r\n\t *\r\n\t * @default 600\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * Easing function to use for zoom animations.\r\n\t * \r\n\t * @default am5.ease.out(am5.ease.cubic)\r\n\t */\r\n\tanimationEasing?: (t: Time) => Time;\r\n\r\n\t/**\r\n\t * How much of a content can go outside the viewport.\r\n\t *\r\n\t * @default 0.4\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n}\r\n\r\nexport interface IZoomableContainerPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomableContainerEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomableContainer extends Container {\r\n\tpublic static className: string = \"ZoomableContainer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomableContainer.className]);\r\n\r\n\tdeclare public _settings: IZoomableContainerSettings;\r\n\tdeclare public _privateSettings: IZoomableContainerPrivate;\r\n\tdeclare public _events: IZoomableContainerEvents;\r\n\r\n\tprotected _za?: Animation<this[\"_settings\"][\"scale\"]>;\r\n\tprotected _txa?: Animation<this[\"_settings\"][\"x\"]>;\r\n\tprotected _tya?: Animation<this[\"_settings\"][\"y\"]>;\r\n\r\n\r\n\tprotected _movePoints: { [index: number]: IPoint } = {};\r\n\tprotected _downScale: number = 1;\r\n\tprotected _downX: number = 0;\r\n\tprotected _downY: number = 0;\r\n\r\n\tprotected _pinchDP?: IDisposer;\r\n\r\n\t/**\r\n\t * All elements must be added to `contents.children` instead of `children` of\r\n\t * [[ZoomableContainer]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n\t */\r\n\tpublic contents = this.children.push(Container.new(this._root, {\r\n\t\twidth: p100,\r\n\t\theight: p100,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdraggable: true,\r\n\t\tbackground: Rectangle.new(this._root, {\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\t}))\r\n\r\n\tprotected _wheelDp: IDisposer | undefined;\r\n\r\n\tprotected _afterNew(): void {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst events = this.contents.events;\r\n\r\n\t\tthis._disposers.push(events.on(\"pointerdown\", (event) => {\r\n\t\t\tthis._handleThisDown(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointerup\", (event) => {\r\n\t\t\tthis._handleThisUp(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointermove\", (event) => {\r\n\t\t\tthis._handleThisMove(event);\r\n\t\t}));\r\n\r\n\t\tconst bg = this.contents.get(\"background\");\r\n\t\tif (bg) {\r\n\t\t\tbg.adapters.add(\"width\", (width) => {\r\n\t\t\t\treturn Number(width) * 5;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"height\", (height) => {\r\n\t\t\t\treturn Number(height) * 5;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"x\", (x) => {\r\n\t\t\t\treturn Number(x) - bg.width() / 5 * 2;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"y\", (y) => {\r\n\t\t\t\treturn Number(y) - bg.height() / 5 * 2;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tcontents.adapters.add(\"x\", (x) => {\r\n\t\t\tif($type.isNumber(x)){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet w = contents.width();\r\n\r\n\t\t\t\tx = Math.min(w * maxPanOut, x);\r\n\t\t\t\tx = Math.max(this.width() - w * contents.get(\"scale\", 1) * (1 + maxPanOut), x);\r\n\t\t\t}\r\n\t\t\treturn x;\r\n\t\t})\r\n\r\n\t\tcontents.adapters.add(\"y\", (y) => {\r\n\t\t\tif($type.isNumber(y)){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet h = contents.height();\r\n\r\n\t\t\t\ty = Math.min(h * maxPanOut, y);\r\n\t\t\t\ty = Math.max(this.height() - h * contents.get(\"scale\", 1) * (1 + maxPanOut), y);\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\t\tif (this.isDirty(\"wheelable\")) {\r\n\t\t\tthis._handleSetWheel();\r\n\t\t}\r\n\r\n\t\tthis.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\r\n\t}\r\n\r\n\r\n\tprotected _handleSetWheel() {\r\n\t\tif (this.get(\"wheelable\")) {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis._wheelDp = this.events.on(\"wheel\", (event) => {\r\n\t\t\t\tconst wheelEvent = event.originalEvent;\r\n\r\n\t\t\t\t// Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\r\n\t\t\t\t// some page element is over the ZoomableContainer.\r\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\r\n\t\t\t\t\twheelEvent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst point = this.toLocal(event.point);\r\n\r\n\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\r\n\t\t\t});\r\n\r\n\t\t\tthis._disposers.push(this._wheelDp);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\r\n\t\tlet step = this.get(\"zoomStep\", 2);\r\n\t\tlet zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet newZoomLevel = zoomLevel;\r\n\t\tif (delta > 0) {\r\n\t\t\tnewZoomLevel = zoomLevel / step;\r\n\t\t}\r\n\t\telse if (delta < 0) {\r\n\t\t\tnewZoomLevel = zoomLevel * step;\r\n\t\t}\r\n\r\n\t\tif (newZoomLevel != zoomLevel) {\r\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to specific X/Y point.\r\n\t * \r\n\t * @param   point  Center point\r\n\t * @param   level  Zoom level\r\n\t * @return         Zoom Animation object\r\n\t */\r\n\tpublic zoomToPoint(point: IPoint, level: number): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\tif (level) {\r\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n\t\t}\r\n\r\n\t\tconst zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\r\n\t\tlet cx = x;\r\n\t\tlet cy = y;\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tlet tx = contents.x();\r\n\t\tlet ty = contents.y();\r\n\r\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\r\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\r\n\r\n\t\tthis._animateTo(xx, yy, level);\r\n\r\n\t\treturn this._za;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents in by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents out by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Fully zooms out the container contents.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic goHome() {\r\n\t\treturn this._animateTo(0, 0, 1);\r\n\t}\r\n\r\n\tprotected _animateTo(x: number, y: number, scale: number) {\r\n\t\tconst duration = this.get(\"animationDuration\", 0);\r\n\t\tconst easing = this.get(\"animationEasing\");\r\n\r\n\t\tconst contents = this.contents;\r\n\t\tthis._txa = contents.animate({ key: \"x\", to: x, duration: duration, easing: easing });\r\n\t\tthis._tya = contents.animate({ key: \"y\", to: y, duration: duration, easing: easing });\r\n\t\tthis._za = contents.animate({ key: \"scale\", to: scale, duration: duration, easing: easing });\r\n\t}\r\n\r\n\r\n\tprotected _handleThisUp(_event: ISpritePointerEvent) {\r\n\t\tthis._downPoints = {}\r\n\t}\r\n\r\n\tprotected _handleThisDown(event: ISpritePointerEvent) {\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tthis._downScale = contents.get(\"scale\", 1);\r\n\t\tconst downPoints = contents._downPoints;\r\n\r\n\t\tlet count = $object.keys(downPoints).length;\r\n\r\n\t\tif (count == 1) {\r\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n\t\t\tlet downPoint = downPoints[1];\r\n\t\t\tif (!downPoint) {\r\n\t\t\t\tdownPoint = downPoints[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (count > 0) {\r\n\t\t\tthis._downX = contents.x();\r\n\t\t\tthis._downY = contents.y();\r\n\r\n\t\t\tconst downId = contents._getDownPointId();\r\n\t\t\tif (downId) {\r\n\t\t\t\tlet movePoint = this._movePoints[downId];\r\n\t\t\t\tif (movePoint) {\r\n\t\t\t\t\tcontents._downPoints[downId] = movePoint;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handleThisMove(event: ISpritePointerEvent) {\r\n\t\tconst originalEvent = event.originalEvent as any;\r\n\r\n\t\tconst pointerId = originalEvent.pointerId;\r\n\r\n\t\tif (this.get(\"pinchZoom\")) {\r\n\t\t\tif (pointerId) {\r\n\t\t\t\tthis._movePoints[pointerId] = event.point;\r\n\r\n\t\t\t\tif ($object.keys(this.contents._downPoints).length > 1) {\r\n\t\t\t\t\tthis._handlePinch();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePinch() {\r\n\t\tlet i = 0;\r\n\t\tlet downPoints: Array<IPoint> = [];\r\n\t\tlet movePoints: Array<IPoint> = [];\r\n\r\n\t\t$object.each(this.contents._downPoints, (k, point) => {\r\n\t\t\tdownPoints[i] = point;\r\n\t\t\tlet movePoint = this._movePoints[k];\r\n\t\t\tif (movePoint) {\r\n\t\t\t\tmovePoints[i] = movePoint;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t});\r\n\r\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\r\n\r\n\t\t\tthis.contents._isDragging = false;\r\n\r\n\t\t\tlet downPoint0 = downPoints[0];\r\n\t\t\tlet downPoint1 = downPoints[1];\r\n\r\n\t\t\tlet movePoint0 = movePoints[0];\r\n\t\t\tlet movePoint1 = movePoints[1];\r\n\r\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n\t\t\t\tdownPoint0 = this.toLocal(downPoint0);\r\n\t\t\t\tdownPoint1 = this.toLocal(downPoint1);\r\n\r\n\t\t\t\tmovePoint0 = this.toLocal(movePoint0);\r\n\t\t\t\tmovePoint1 = this.toLocal(movePoint1);\r\n\r\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n\r\n\t\t\t\tlet level = currentDistance / initialDistance * this._downScale;\r\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n\r\n\t\t\t\tlet tx = this._downX || 0;\r\n\t\t\t\tlet ty = this._downY || 0;\r\n\r\n\t\t\t\tlet zoomLevel = this._downScale;\r\n\r\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\r\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\r\n\r\n\t\t\t\tthis.contents.setAll({\r\n\t\t\t\t\tx: xx,\r\n\t\t\t\t\ty: yy,\r\n\t\t\t\t\tscale: level\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * All map series will determine the actual bounds shown in the [[MapChart]].\n\t *\n\t * If we need a series to be ignored while calculating the bounds, we can set\n\t * this to `false`.\n\t *\n\t * Especially useful for background series.\n\t *\n\t * @default true\n\t * @since 5.2.36\n\t */\n\taffectsBounds?: boolean;\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _excluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\tprotected _notIncluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _handleDirties() {\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\tif (previous && previous != geoJSON) {\n\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\tthis._geoJSONparsed = false;\n\t\t}\n\n\t\tif (!this._geoJSONparsed) {\n\t\t\tthis._parseGeoJSON();\n\t\t\tthis._geoJSONparsed = true;\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._handleDirties();\n\t\t}\n\n\t\tif (this.get(\"geoJSON\") && (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\"))) {\n\n\t\t\tthis._handleDirties();\n\n\t\t\tconst chart = this.chart;\n\n\t\t\tconst exclude = this.get(\"exclude\");\n\n\t\t\tif (exclude) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(exclude, (id) => {\n\t\t\t\t\tconst dataItem = this.getDataItemById(id);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tthis._excludeDataItem(dataItem)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!exclude || exclude.length == 0) {\n\t\t\t\t$array.each(this._excluded, (dataItem) => {\n\t\t\t\t\tthis._unexcludeDataItem(dataItem)\n\t\t\t\t})\n\t\t\t\tthis._excluded = [];\n\t\t\t}\n\n\t\t\tconst include = this.get(\"include\");\n\t\t\tif (include) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst id = dataItem.get(\"id\");\n\t\t\t\t\tif (id && include.indexOf(id) == -1) {\n\t\t\t\t\t\tthis._notIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!include) {\n\t\t\t\t$array.each(this._notIncluded, (dataItem) => {\n\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t\tthis._notIncluded = [];\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._excluded, dataItem);\n\t}\n\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._notIncluded, dataItem);\n\t}\n\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tconst idField = this.get(\"idField\", \"id\");\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature[idField];\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\t//if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t\t//}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tdataObject[idField] = id;\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any, series: MapSeries) {\n\t\tif (geometry && series.get(\"affectsBounds\", true)) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tthis._geoJSONparsed = false;\n\t\tthis._markDirtyKey(\"exclude\");\n\t}\t\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate, IGraphicsEvents } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n}\n\nexport interface IMapLineEvents extends IGraphicsEvents {\n\n\t/**\n\t * Invoked when line is redrawn\n\t */\n\tlinechanged: {};\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\tdeclare public _events: IMapLineEvents;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = \"linechanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tconst geoPoint = this.positionToGeoPoint(tooltipX.value)\n\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\tif (series) {\n\t\t\t\tconst chart = series.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst point = chart.convert(geoPoint);\n\t\t\t\t\tx = point.x;\n\t\t\t\t\ty = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { x, y };\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\tclipExtent?: boolean;\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\n\t\tif (this.isDirty(\"clipExtent\")) {\n\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.events.on(\"geoboundschanged\", () => {\n\t\t\t\t\t\tthis._generate();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis._generate();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst geoBounds = chart.geoBounds();\n\t\t\t\t\tif (geoBounds) {\n\t\t\t\t\t\tgraticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst step = this.get(\"step\", 10);\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import { Theme } from \"../../core/Theme\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4,\r\n\t\t\tcenterMapOnZoomOut: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPolygonSeries\").setAll({\r\n\t\t\taffectsBounds: true\r\n\t\t})\r\n\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\taffectsBounds: false,\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true,\r\n\t\t\tautoScale: false\r\n\t\t})\r\n\r\n\t\tr(\"ClusteredPointSeries\").setAll({\r\n\t\t\tminDistance: 20,\r\n\t\t\tscatterDistance: 3,\r\n\t\t\tscatterRadius: 8,\r\n\t\t\tstopClusterZoom: 0.95\r\n\t\t})\r\n\r\n\t\tr(\"MapLineSeries\").setAll({\r\n\t\t\taffectsBounds: false\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Button\", [\"zoomtools\", \"home\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\t}\r\n}\r\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds, geoArea } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * Returns geo centroid of a geometry\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * Returns geo area of a geometry\n */\nexport function getGeoArea(geometry: GeoJSON.GeometryObject): number {\n\treturn geoArea(geometry);\n}\n\n/**\n * Returns bounds of a geometry\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { MapPointSeries } from \"./MapPointSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IMapPolygonSeriesDataItem } from \"./MapPolygonSeries\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * current x position of a map\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * current y position of a map\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when horizontal mouse wheel (only some mouses do have such a wheel)\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial/home rotationX.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationX?: number;\n\n\t/**\n\t * Initial/home rotationY.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationY?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n\t/**\n\t * Setting `true` means that the map will automatically center itself (or go\n\t * to `homeGeoPoint` if set) when fully zoomed out.\n\t *\n\t * `false` would mean that zoom out will be centered around the mouse\n\t * cursor (when zooming using wheel), or current map position.\n\t * \n\t * @default true\n\t * @since 5.2.1\n\t */\n\tcenterMapOnZoomOut?: boolean;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is\n\t * initialized.\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tpublic _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted: boolean = false;\n\n\tprotected _centerX: number = 0;\n\tprotected _centerY: number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns a geoPoint of the current zoom position.\n\t * \n\t * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\n\t *\n\t * @since 5.2.19\n\t */\n\tpublic geoPoint() {\n\t\treturn this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t// some page element is over the chart.\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tconst previousGeometries = this._geometryColection.geometries;\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\n\t\t\t\t\t\tthis._centerX = translate[0];\n\t\t\t\t\t\tthis._centerY = translate[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\n\t\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (series.isType<MapPointSeries>(\"MapPointSeries\")) {\n\t\t\t\t\tif (series.get(\"autoScale\")) {\n\t\t\t\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\t\t\t\tconst bullets = dataItem.bullets;\n\t\t\t\t\t\t\tif (bullets) {\n\t\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\t\t\tsprite.set(\"scale\", this.get(\"zoomLevel\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst zoomControl = this.get(\"zoomControl\");\n\t\t\tif (zoomControl) {\n\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\tif (zoomLevel == this.get(\"minZoomLevel\", 1)) {\n\t\t\t\t\tthis.root.events.once(\"frameended\", () =>{\n\t\t\t\t\t\tzoomControl.minusButton.set(\"disabled\", true);\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tzoomControl.minusButton.set(\"disabled\", false);\n\t\t\t\t}\n\n\t\t\t\tif (zoomLevel == this.get(\"maxZoomLevel\", 32)) {\n\t\t\t\t\tzoomControl.plusButton.set(\"disabled\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tzoomControl.plusButton.set(\"disabled\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns geographical coordinates for calculated or manual center of the\n\t * map.\n\t */\n\tpublic homeGeoPoint(): IGeoPoint {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\t\treturn homeGeoPoint;\n\t}\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tthis.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.chartContainer._display.cancelTouch) {\n\t\t\tthis.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\t\telse {\n\t\t\tthis._root._licenseApplied();\n\t\t}\n\n\t\tthis._setUpTouch();\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\t\tconst downPoints = this.chartContainer._downPoints;\n\n\t\tlet count = $object.keys(downPoints).length;\n\t\tif (count == 1) {\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n\t\t\tlet downPoint = downPoints[1];\n\t\t\tif (!downPoint) {\n\t\t\t\tdownPoint = downPoints[0];\n\t\t\t}\n\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @param  rotationX  X rotation of a map if different from current\n\t * @param  rotationY  Y rotation of a map if different from current\n\t * \n\t * @return Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint, rotationX?: number, rotationY?: number): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\t\tlet xy;\n\n\t\tif (!projection.rotate) {\n\t\t\trotationX = undefined;\n\t\t\trotationY = undefined;\n\t\t}\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tif (rotationX == null) {\n\t\t\t\trotationX = 0;\n\t\t\t}\n\t\t\tif (rotationY == null) {\n\t\t\t\trotationY = 0;\n\t\t\t}\n\t\t\tlet rotation = projection.rotate();\n\t\t\tprojection.rotate([rotationX, rotationY, 0]);\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t\tprojection.rotate(rotation);\n\t\t}\n\t\telse {\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\t\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY);\n\t\t}\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tif (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\n\t\t\tpoint = this.convert(this.homeGeoPoint(), this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t\t\tcenter = true;\n\t\t}\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t * \n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\n\t\tlet xy = this.convert(geoPoint, rotationX, rotationY);\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY, duration);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\tpublic rotate(rotationX?: number, rotationY?: number, duration?: number) {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (!projection.rotate) {\n\t\t}\n\t\telse {\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t\t}\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tif (rotationX != null) {\n\t\t\t\tthis.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\n\t\t\t}\n\t\t\tif (rotationY != null) {\n\t\t\t\tthis.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n\n\t/**\n\t * Returns area of a mapPolygon in square pixels.\n\t */\n\tpublic getArea(dataItem: DataItem<IMapPolygonSeriesDataItem>): number {\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (geometry) {\n\t\t\treturn geoPath.area(geometry);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * If set to `true`, the point will be drawn according to its `x` and `y`\n\t * coordinates, not its latitude and longitude.\n\t * \n\t * Fixed points will not move together with map, and can not be used to\n\t * connect points on a `MapLineSeries`.\n\t * \n\t * @default false\n\t * @since 5.2.34\n\t */\n\tfixed?: boolean;\n\n\t/**\n\t * Point (in pixels) of a data item\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * @ignore\n\t */\n\tclipped?: boolean;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _lineChangedDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lineChangedDp) {\n\t\t\t\tthis._lineChangedDp.dispose();\n\t\t\t}\n\n\t\t\tif (line) {\n\t\t\t\tthis._lineChangedDp = line.events.on(\"linechanged\", () => {\n\t\t\t\t\tthis._positionBullets(dataItem);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tconst point = { x: xy[0], y: xy[1] };\n\t\t\t\tsprite.setAll(point);\n\t\t\t\tdataItem.setRaw(\"point\", point);\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\tdataItem.set(\"clipped\", !visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number, rotate?: boolean): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\t\t\tif (rotate) {\n\t\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\n\t\t\t}\n\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * Zooms the map in so that all points in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items of points to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.5.6\n\t */\n\tpublic zoomToDataItems(dataItems: Array<DataItem<IMapPointSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\n\t\tlet left: number | null = null;\n\t\tlet right: number | null = null;\n\t\tlet top: number | null = null;\n\t\tlet bottom: number | null = null;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\n\t\t\tif (left == null || left > longitude) {\n\t\t\t\tleft = longitude;\n\t\t\t}\n\t\t\tif (right == null || right < longitude) {\n\t\t\t\tright = longitude;\n\t\t\t}\n\t\t\tif (top == null || top < latitude) {\n\t\t\t\ttop = latitude;\n\t\t\t}\n\t\t\tif (bottom == null || bottom > latitude) {\n\t\t\t\tbottom = latitude;\n\t\t\t}\n\t\t})\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -(left + (right - left) / 2), -(top + (top - bottom) / 2));\n\t\t\t\t}\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tprotected _afterNew(): void {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (coordinates) {\n\t\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\t\treturn { longitude: center[0], latitude: center[1] };\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\n\n\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true`, the order of coordinates in GeoJSON will be flipped.\n\t *\n\t * Some GeoJSON software produces those in reverse order, so if your custom\n\t * map appears garbled, try this setting.\n\t * \n\t * @default false\n\t * @since 5.2.42\n\t */\n\treverseGeodata?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tlet geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (this.get(\"reverseGeodata\")) {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tfor (let x = 0; x < geometry.coordinates.length; x++) {\n\t\t\t\t\t\tif (geometry.type == \"MultiPolygon\") {\n\t\t\t\t\t\t\tfor (let y = 0; y < geometry.coordinates[x].length; y++) {\n\t\t\t\t\t\t\t\tgeometry.coordinates[x][y].reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgeometry.coordinates[x].reverse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>, rotate?: boolean): Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (geometry && chart) {\n\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst centroid = $mapUtils.getGeoCentroid(geometry);\n\t\t\t\t\tchart.rotate(-centroid.longitude, -centroid.latitude);\n\t\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry),);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in so that all polygons in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.9.0\n\t */\n\tpublic zoomToDataItems(dataItems: Array<DataItem<IMapPolygonSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\t\tlet left!: number;\n\t\tlet right!: number;\n\t\tlet top!: number;\n\t\tlet bottom!: number;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\n\t\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (polygon) {\n\t\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\t\tif (geometry) {\n\t\t\t\t\tlet bounds = $mapUtils.getGeoBounds(geometry);\n\n\t\t\t\t\tif (left == null) {\n\t\t\t\t\t\tleft = bounds.left;\n\t\t\t\t\t}\n\t\t\t\t\tif (right == null) {\n\t\t\t\t\t\tright = bounds.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (top == null) {\n\t\t\t\t\t\ttop = bounds.top;\n\t\t\t\t\t}\n\t\t\t\t\tif (bottom == null) {\n\t\t\t\t\t\tbottom = bounds.bottom;\n\t\t\t\t\t}\n\n\t\t\t\t\tleft = Math.min(bounds.left, left);\n\t\t\t\t\tright = Math.max(bounds.right, right);\n\t\t\t\t\ttop = Math.max(bounds.top, top);\n\t\t\t\t\tbottom = Math.min(bounds.bottom, bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst rx = left + (right - left) / 2;\n\t\t\t\t\tconst ry = bottom + (top - bottom) / 2;\n\n\t\t\t\t\tchart.rotate(-rx, -ry);\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -rx, -ry);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[MapPolygon]] that is under specific X/Y point.\n\t *\n\t * @since 5.9.8\n\t * @param   point  X/Y\n\t * @return         Polygon\n\t */\n\tpublic getPolygonByPoint(point: IPoint): MapPolygon | undefined {\n\t\tlet found: MapPolygon | undefined;\n\t\tconst renderer = this._display._renderer;\n\t\tconst displayObject = (renderer as any).getObjectAtPoint(point);\n\t\tif (displayObject) {\n\t\t\tthis.mapPolygons.each(function(polygon) {\n\t\t\t\tif (polygon._display == displayObject) {\n\t\t\t\t\tfound = polygon;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn found;\n\t\t}\n\t}\n\t\n\tpublic getPolygonByGeoPoint(point: IGeoPoint): MapPolygon | undefined {\n\t\treturn this.getPolygonByPoint(this.chart!.convert(point));\n\t}\n}","import { MapPointSeries, IMapPointSeriesSettings, IMapPointSeriesPrivate, IMapPointSeriesDataItem } from \"./MapPointSeries\";\r\nimport { Component, DataItem, IComponentDataItem } from \"../../core/render/Component\";\r\nimport type { Root } from \"../../core/Root\";\r\nimport type { Bullet } from \"../../core/render/Bullet\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport type { IDisposer } from \"../../core/util/Disposer\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IClusteredDataItem extends IComponentDataItem {\r\n\t/**\r\n\t * All the data items of this cluster\r\n\t */\r\n\tchildren?: Array<DataItem<IMapPointSeriesDataItem>>;\r\n\r\n\t/**\r\n\t * Bullet of clustered data item\r\n\t */\r\n\tbullet?: Bullet;\r\n\r\n\t/**\r\n\t * An ID of a group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Longitude.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n\t/**\r\n\t * Latitude.\r\n\t */\r\n\tlatitude?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesDataItem extends IMapPointSeriesDataItem {\r\n\t/**\r\n\t * An ID of a bullet's group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Clustered data item (if available)\r\n\t * @readonly\r\n\t */\r\n\tcluster?: DataItem<IClusteredDataItem>;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdy?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesPrivate extends IMapPointSeriesPrivate {\r\n\r\n}\r\n\r\nexport interface IClusteredPointSeriesSettings extends IMapPointSeriesSettings {\r\n\t/**\r\n\t * Series data can contain a field with an ID of a virtual group the bullet\r\n\t * belongs to.\r\n\t *\r\n\t * For example, we migth want bullets to group with other bullets from the\r\n\t * same continent.\r\n\t *\r\n\t * `groupIdField` specifies which field in source data holds group IDs.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_segregation} for more info\r\n\t * @default groupID\r\n\t */\r\n\tgroupIdField?: string;\r\n\r\n\t/**\r\n\t * Bullets that are closer than X pixels apart, will be automatically grouped.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Minimal_distance} for more info\r\n\t * @default 20\r\n\t */\r\n\tminDistance?: number;\r\n\r\n\t/**\r\n\t * Set this to a [[Bullet]] instance which will be used to show groups.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_bullet} for more info\r\n\t */\r\n\tclusteredBullet?: (root: Root, series: ClusteredPointSeries, dataItem: DataItem<IClusteredDataItem>) => Bullet | undefined;\r\n\r\n\t/**\r\n\t * If bullets are closer to each other than `scatterDistance`, they will be\r\n\t * scattered so that all are visible.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 5\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterDistance?: number;\r\n\r\n\t/**\r\n\t * Presumed radius of a each bullet when scattering them.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 8\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterRadius?: number;\r\n\r\n\t/**\r\n\t * If a map is zoomed to a maxZoomLevel * stopClusterZoom, clusters will be\r\n\t * disabled.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 0.95\r\n\t * @since 5.5.7\r\n\t */\r\n\tstopClusterZoom?: number\r\n\r\n\r\n\t/**\r\n\t * Delay in milliseconds before clustering is made.\r\n\t * \r\n\t * This is useful if you have many data items and want to avoid re-clustering\r\n\t * on every zoom/position change.\r\n\t * \r\n\t * @default 0\r\n\t * @since 5.9.11\r\n\t */\r\n\tclusterDelay?: number;\r\n}\r\n\r\n/**\r\n * A version of [[MapPointSeries]] which can automatically group closely located\r\n * bullets into groups.\r\n * \r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/} for more info\r\n * @since 5.5.6\r\n * @important\r\n */\r\nexport class ClusteredPointSeries extends MapPointSeries {\r\n\r\n\tpublic static className: string = \"ClusteredPointSeries\";\r\n\tpublic static classNames: Array<string> = MapPointSeries.classNames.concat([ClusteredPointSeries.className]);\r\n\r\n\tdeclare public _settings: IClusteredPointSeriesSettings;\r\n\tdeclare public _privateSettings: IClusteredPointSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IClusteredPointSeriesDataItem;\r\n\r\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\r\n\tprotected _clusterIndex: number = 0;\r\n\tprotected _clusters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\tpublic clusteredDataItems: Array<DataItem<IClusteredDataItem>> = [];\r\n\r\n\tprotected _scatterIndex: number = 0;\r\n\tprotected _scatters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\r\n\tpublic _packLayout = d3hierarchy.pack();\r\n\r\n\tprotected _spiral: Array<{ x: number, y: number }> = [];\r\n\r\n\tprotected _clusterDP?: IDisposer;\r\n\r\n\tprotected _previousZL: number = 0;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis.fields.push(\"groupId\");\r\n\t\tthis._setRawDefault(\"groupIdField\", \"groupId\");\r\n\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"scatterRadius\")) {\r\n\t\t\tthis._spiral = $math.spiralPoints(0, 0, 300, 300, 0, 3, 3, 0, 0)\r\n\t\t}\r\n\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\r\n\t\t\tconst zoomLevel = chart.get(\"zoomLevel\", 1);\r\n\r\n\t\t\tif (zoomLevel != this._previousZL) {\r\n\t\t\t\tconst clusterDelay = this.get(\"clusterDelay\", 0);\r\n\t\t\t\tif (clusterDelay) {\r\n\t\t\t\t\tif (this._clusterDP) {\r\n\t\t\t\t\t\tthis._clusterDP.dispose();\r\n\r\n\t\t\t\t\t\tthis._clusterDP = this.setTimeout(() => {\r\n\t\t\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t\t\t}, clusterDelay)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// first time without delay\r\n\t\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t\t\tthis._clusterDP = this.setTimeout(() => { }, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._previousZL = zoomLevel;\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\r\n\t\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\r\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: [longitude, latitude] }, [longitude, latitude]);\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _doTheCluster() {\r\n\t\tconst groups: { [index: string]: Array<DataItem<IClusteredPointSeriesDataItem>> } = {};\r\n\t\t// distribute to groups\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst groupId = dataItem.get(\"groupId\", \"_default\");\r\n\r\n\t\t\tif (!groups[groupId]) {\r\n\t\t\t\tgroups[groupId] = [];\r\n\t\t\t}\r\n\t\t\tgroups[groupId].push(dataItem);\r\n\t\t})\r\n\r\n\t\tthis._scatterIndex = -1;\r\n\t\tthis._scatters = [];\r\n\t\tthis._clusterIndex = -1;\r\n\t\tthis._clusters = [];\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"children\", undefined);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"cluster\", undefined);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._scatterGroup(group);\r\n\t\t})\r\n\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._clusterGroup(group);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tif (!dataItem.get(\"cluster\")) {\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the area so that all clustered data items of a cluster would be\r\n\t * visible.\r\n\t *\r\n\t * Pass in `true` as a second parameter to rotate that map so that the group\r\n\t * is in the center. This is especially useful in the maps that use\r\n\t * Orthographic (globe) projection.\r\n\t *\r\n\t * @param  dataItem  Group data item\r\n\t * @param  rotate    Rotate the map so that group is in the center?\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Drill_down} for more info\r\n\t */\r\n\tpublic zoomToCluster(dataItem: DataItem<IClusteredDataItem>, rotate?: boolean) {\r\n\t\tthis.zoomToDataItems(dataItem.get(\"children\", []), rotate);\r\n\t}\r\n\r\n\tprotected _clusterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tdataItems.sort((a, b) => {\r\n\t\t\t\tconst pointA = a.get(\"point\");\r\n\t\t\t\tconst pointB = b.get(\"point\");\r\n\t\t\t\tif (pointA && pointB) {\r\n\t\t\t\t\treturn Math.hypot(pointA.x - pointB.x, pointA.y - pointB.y);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t})\r\n\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._clusterIndex++;\r\n\t\t\t\tthis._clusters[this._clusterIndex] = [];\r\n\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tcluster.push(dataItem);\r\n\t\t\t\t$array.removeFirst(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._clusterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tconst bulletMethod = this.get(\"clusteredBullet\");\r\n\t\tif (bulletMethod) {\r\n\t\t\t$array.each(this._clusters, (cluster) => {\r\n\t\t\t\tlet sumX = 0;\r\n\t\t\t\tlet sumY = 0;\r\n\r\n\t\t\t\tlet len = cluster.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\r\n\t\t\t\t\tlet clusteredDataItem = this.clusteredDataItems[i];\r\n\t\t\t\t\tif (!clusteredDataItem) {\r\n\t\t\t\t\t\tclusteredDataItem = new DataItem(this, undefined, {});\r\n\r\n\t\t\t\t\t\tconst bullet = clusteredDataItem.set(\"bullet\" as any, bulletMethod(this._root, this, clusteredDataItem));\r\n\r\n\t\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\r\n\t\t\t\t\t\t\t\tsprite._setDataItem(clusteredDataItem);\r\n\r\n\t\t\t\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child instanceof Component) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.markDirtyValues();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.clusteredDataItems.push(clusteredDataItem)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet groupId;\r\n\r\n\t\t\t\t\t$array.each(cluster, (dataItem) => {\r\n\t\t\t\t\t\tdataItem.setRaw(\"cluster\", clusteredDataItem);\r\n\r\n\t\t\t\t\t\tconst point = dataItem.get(\"point\");\r\n\t\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\t\tsumX += point.x;\r\n\t\t\t\t\t\t\tsumY += point.y;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgroupId = dataItem.get(\"groupId\");\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tlet averageX = sumX / len;\r\n\t\t\t\t\tlet averageY = sumY / len;\r\n\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"children\" as any, cluster);\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"groupId\", groupId);\r\n\r\n\t\t\t\t\tconst prevLen = clusteredDataItem.get(\"value\" as any);\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"value\" as any, len);\r\n\r\n\t\t\t\t\tconst bullet = clusteredDataItem.get(\"bullet\" as any);\r\n\t\t\t\t\tif (bullet) {\r\n\r\n\t\t\t\t\t\tlet geoPoint = this.chart!.invert({ x: averageX, y: averageY });\r\n\t\t\t\t\t\tif (geoPoint) {\r\n\t\t\t\t\t\t\tclusteredDataItem.setAll({\r\n\t\t\t\t\t\t\t\tlongitude: geoPoint.longitude,\r\n\t\t\t\t\t\t\t\tlatitude: geoPoint.latitude,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._positionBullets(clusteredDataItem)\r\n\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t\t//sprite.setAll({ x: averageX, y: averageY });\r\n\r\n\t\t\t\t\t\t\tif (prevLen != len) {\r\n\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\t\t\t\t\t\tchild.text.markDirtyText();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tlet children = dataItem.get(\"children\");\r\n\t\t\tif (!children || children.length == 0) {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _onDataClear() {\r\n\t\tsuper._onDataClear();\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\tif (bullet) {\r\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\tif (sprite) {\r\n\t\t\t\t\tsprite.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.clusteredDataItems = [];\r\n\r\n\t}\r\n\r\n\tprotected _clusterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\tlet minDistance = this.get(\"minDistance\", 20);\r\n\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tconst di = dataItems[i];\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < minDistance) {\r\n\t\t\t\t\t\t\tcluster.push(di);\r\n\t\t\t\t\t\t\t$array.removeFirst(dataItems, di);\r\n\t\t\t\t\t\t\tthis._clusterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._scatterIndex++;\r\n\t\t\t\tthis._scatters[this._scatterIndex] = [];\r\n\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tscatter.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._scatterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this._scatters, (scatter) => {\r\n\t\t\t\tlet len = scatter.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\t\t\t\t\tlet previousCircles: Array<{ x: number, y: number, radius: number }> = [];\r\n\t\t\t\t\tlet s = 0;\r\n\t\t\t\t\tlet radius = this.get(\"scatterRadius\", 8);\r\n\t\t\t\t\t$array.each(scatter, (dataItem) => {\r\n\t\t\t\t\t\tlet spiralPoint = this._spiral[s];\r\n\t\t\t\t\t\tlet intersects = true;\r\n\r\n\t\t\t\t\t\tif (previousCircles.length > 0) {\r\n\t\t\t\t\t\t\twhile (intersects) {\r\n\t\t\t\t\t\t\t\t$array.each(previousCircles, (previousCircle) => {\r\n\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\twhile ($math.circlesOverlap({ x: spiralPoint.x, y: spiralPoint.y, radius: radius }, previousCircle)) {\r\n\t\t\t\t\t\t\t\t\t\ts++;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (this._spiral[s] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\t\t\t\t\t\tspiralPoint = this._spiral[s];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst dx = spiralPoint.x;\r\n\t\t\t\t\t\tconst dy = spiralPoint.y;\r\n\r\n\t\t\t\t\t\tpreviousCircles.push({ x: dx, y: dy, radius: radius });\r\n\r\n\t\t\t\t\t\tdataItem.set(\"dx\", dx);\r\n\t\t\t\t\t\tdataItem.set(\"dy\", dy);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.setAll({ dx: dx, dy: dy });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\tconst scatterDistance = this.get(\"scatterDistance\", 5)\r\n\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < scatterDistance) {\r\n\t\t\t\t\t\t\tscatter.push(di);\r\n\t\t\t\t\t\t\t$array.removeFirst(dataItems, di);\r\n\t\t\t\t\t\t\tthis._scatterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import type { MapChart } from \"./MapChart\";\n\nimport { ZoomTools, IZoomToolsPrivate, IZoomToolsSettings } from \"../../core/render/ZoomTools\";\n\nexport interface IZoomControlSettings extends IZoomToolsSettings {\n}\n\nexport interface IZoomControlPrivate extends IZoomToolsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends ZoomTools {\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = ZoomTools.classNames.concat([ZoomControl.className]);\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.addTag(\"zoomtools\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tthis.set(\"target\", this.getPrivate(\"chart\"));\n\t\t}\n\t}\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n"],"names":["ZoomTools","Container","constructor","Object","defineProperty","this","children","push","Button","new","_root","width","height","themeTags","_afterNew","super","set","verticalLayout","addTag","plusButton","setAll","icon","Graphics","layout","undefined","minusButton","homeButton","_prepareChildren","isDirty","target","get","previous","_prevSettings","ZoomableContainer","_targetDisposer","addDisposer","contents","on","scale","root","events","once","_disposer","MultiDisposer","zoomIn","zoomOut","goHome","dispose","classNames","concat","className","p100","x","y","draggable","background","Rectangle","fill","color","fillOpacity","_disposers","event","_handleThisDown","_handleThisUp","_handleThisMove","bg","adapters","add","Number","$type","maxPanOut","w","Math","min","max","h","_handleSetWheel","_display","cancelTouch","_wheelDp","wheelEvent","originalEvent","$utils","preventDefault","point","toLocal","_handleWheelZoom","deltaY","delta","step","zoomLevel","newZoomLevel","zoomToPoint","level","$math","cx","cy","xx","yy","_animateTo","_za","duration","easing","_txa","animate","key","to","_tya","_event","_downPoints","_downScale","downPoints","count","$object","length","downPoint","_downX","_downY","downId","_getDownPointId","movePoint","_movePoints","pointerId","_handlePinch","i","movePoints","k","_isDragging","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","hypot","moveCenter","downCenter","tx","ty","MapSeries","Series","fields","_setRawDefault","geoJSON","data","clear","_handleDirties","_geoJSONparsed","_parseGeoJSON","_valuesDirty","chart","exclude","_centerLocation","$array","id","dataItem","getDataItemById","_excludeDataItem","_excluded","_unexcludeDataItem","include","dataItems","indexOf","_notIncludeDataItem","_unNotIncludeDataItem","_notIncluded","_removeGeometry","_addGeometry","checkInclude","includes","excludes","features","type","geometry","console","log","geodataNames","idField","len","feature","properties","name","_types","dataObject","value","dataContext","geometryType","processDataItem","madeFromGeoData","isEnabled","dispatch","_placeBulletsContainer","_chart","moveValue","bulletsContainer","_removeBulletsContainer","projection","geoPath","getPrivate","series","_geometries","markDirtyGeometries","_dispose","removeValue","_onDataClear","_markDirtyKey","Adder","_partials","Float64Array","_n","p","j","hi","lo","abs","valueOf","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","ceil","exp","floor","sin","pow","sign","sqrt","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","lengthSum","lambda0","sinPhi0","cosPhi0","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","cosDelta","z","a","b","MapLine","_beforeChanged","_projectionDirty","clipAngle","precision","_clear","segments","display","s","segment","gp0","p0","convert","longitude","latitude","lineTo","gp","pn","context","markDirtyProjection","markDirty","_clearDirty","_getTooltipPoint","tooltipX","tooltipY","Percent","geoPoint","positionToGeoPoint","position","lineType","distanceAB","pointA","pointB","totalDistance","geoLength","currentDistance","positionA","positionB","geoDistance","location","positionAB","p1","invert","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","interpolate","t","B","A","distance","geoInterpolate","MapLineSeries","ListTemplate","Template","_new","mapLines","template","makeMapLine","mapLine","make","_setDataItem","_handlePointsToConnect","setPrivate","pointsToConnect","markDirtyValues","coords","setRaw","disposeDataItem","range","start","stop","arguments","Array","graticuleX","dy","map","graticuleY","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","makeDataItem","_dataItem","_generate","_updateChildren","geoGraticule","geoBounds","left","bottom","right","top","compose","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","m","rejoin","pop","shift","result","Intersection","points","other","entry","o","e","v","compareIntersection","startInside","subject","clip","forEach","pointEqual","sort","link","current","isSubject","array","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","merge","arrays","from","flatten","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","acos","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","r","ax","ay","transformer","methods","TransformStream","prototype","Infinity","boundsStream","bounds","fit","fitBounds","clipExtent","translate","geoStream","fitExtent","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","center","apply","reset","transformRotate","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","reflectX","reflectY","fitSize","size","fitWidth","fitHeight","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","MapChartDefaultTheme","Theme","setupDefaultRules","ic","interfaceColors","rule","bind","geoMercator","panX","panY","pinchZoom","zoomStep","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","$ease","wheelEasing","wheelDuration","wheelSensitivity","centerMapOnZoomOut","role","setColor","affectsBounds","clipFront","clipBack","autoScale","minDistance","scatterDistance","scatterRadius","stopClusterZoom","isMeasured","strokeWidth","strokeOpacity","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","deltaSum","ranges","areaRing","dLambda","sdLambda","adLambda","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","getGeoCentroid","geoCentroid","getGeoBounds","merged","deltaMax","MapChart","SerialChart","_makeGeoPath","path","projectionStream","contextStream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","setPrivateRaw","seriesContainer","toGlobal","_geoCentroid","_geoBounds","chartContainer","_handleWheelRotateY","_handleWheelRotateX","deltaX","innerWidth","innerHeight","previousGeometries","_geometryColection","_fitMap","prev","hw","hh","centerLocation","xy","_dirtyGeometries","each","_pw","_ph","newScale","_centerX","_centerY","_mapBounds","zoomControl","_disposeProperty","isType","bullets","bullet","sprite","_setUpTouch","$mapUtils","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","homeGeoPoint","zoomToGeoPoint","_afterChanged","_defaultThemes","_settings","Color","fromHex","_handleChartDown","_handleChartUp","_handleChartMove","license","registry","licenses","match","_licenseApplied","_showBranding","_downZoomLevel","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","enableType","_rxa","_rya","l0","l1","_pLon","_pLat","ll","_getDownPoint","downPointId","local","disableType","ww","downLocation","zoomToGeoBounds","mapBounds","zl","readerAlert","_t","locale","getArea","MapPointSeries","_positionBullets","_makeBullets","bulletFunction","_setBulletParent","_makeBullet","parent","_positionBullet","lineDataItem","fixed","lineId","lineDI","_lineChangedDp","polygonDataItem","polygonId","polygonDI","positionOnLine","visualCentroid","geoPoint0","geoPoint1","_positionBulletReal","index","_index","zoomToDataItem","zoomToDataItems","di","MapPolygon","isHover","showTooltip","biggestArea","geoArea","$polylabel","MapPolygonSeries","mapPolygons","makeMapPolygon","mapPolygon","rx","ry","getPolygonByPoint","found","displayObject","_renderer","getObjectAtPoint","getPolygonByGeoPoint","ClusteredPointSeries","d3hierarchy","_spiral","_previousZL","clusterDelay","_clusterDP","setTimeout","_doTheCluster","clusteredDataItems","groups","groupId","_scatterIndex","_scatters","_clusterIndex","_clusters","_key","group","_scatterGroup","_clusterGroup","zoomToCluster","cluster","_clusterDataItem","bulletMethod","sumX","sumY","clusteredDataItem","DataItem","walkChildren","child","Component","averageX","averageY","prevLen","Label","text","markDirtyText","diPoint","scatter","_scatterDataItem","previousCircles","spiralPoint","intersects","previousCircle","ZoomControl","isPrivateDirty","Queue","require","polylabel","debug","minX","minY","maxX","maxY","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","f","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","inside","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports","TinyQueue","compare","defaultCompare","_down","item","_up","peek","pos","halfLength","best","optional","required","Error","constantZero","packEncloseRandom","circles","random","shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","b2","b3","c3","d1","d3","ab","xa","xb","ya","yb","C","place","score","node","next","Node","circle","packSiblingsRandom","aa","sj","sk","pack","defaultRadius","padding","lcg","eachBefore","radiusLeaf","eachAfter","packChildrenRandom","translateChild","constant"],"sourceRoot":""}