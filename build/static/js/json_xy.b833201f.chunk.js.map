{"version":3,"file":"static/js/json_xy.b833201f.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/axes/AxisLabelRadial.ts","../node_modules/src/.internal/core/render/MonotoneXTension.ts","../node_modules/src/.internal/core/render/MonotoneYTension.ts","../node_modules/src/.internal/core/render/RadialLabel.ts","../node_modules/src/.internal/core/render/RadialText.ts","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","../node_modules/src/.internal/charts/xy/axes/CategoryDateAxis.ts","../node_modules/src/.internal/charts/xy/axes/DurationAxis.ts","../node_modules/src/.internal/charts/xy/series/OHLC.ts","../node_modules/src/.internal/charts/xy/series/OHLCSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedYLineSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedXLineSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","../node_modules/d3-shape/src/curve/step.js","../node_modules/src/.internal/charts/xy/series/StepLineSeries.ts","../node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}","// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label, ILabelPrivate, ILabelSettings } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\n\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface IRadialLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Pixel value to adjust radius with.\n\t *\n\t * Will add to (or subtract from if negative) whatever value `baseRadius` evaluates\n\t * to.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Radius of the label's position.\n\t *\n\t * Can be either set in absolute pixel value, or percent.\n\t *\n\t * Relative value, depending on the situation, will most often mean its\n\t * position within certain circular object, like a slice: 0% meaning inner\n\t * edge, and 100% - the outer edge.\n\t *\n\t * @default 100%\n\t */\n\tbaseRadius?: number | Percent;\n\n\t/**\n\t * Label anngle in degrees.\n\t *\n\t * In most cases it will be set by the chart/series and does not need to\n\t * be set manually.\n\t */\n\tlabelAngle?: number;\n\n\t/**\n\t * Should the text \"face\" inward or outward from the arc the text is\n\t * following.\n\t *\n\t * `\"auto\"` means that facing will be chosen automatically based on the angle\n\t * to enhance readbility.\n\t *\n\t * Only applies if `type = \"circluar\"`.\n\t * \n\t * @default \"auto\"\n\t */\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\n\t/**\n\t * Should label be drawn inside (`true`) or outside (`false`) the arc.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n\t/**\n\t * Label type.\n\t *\n\t * * `\"regular\"` (default) - normal horizontal label.\n\t * * `\"circular\"` - arched label.\n\t * * `\"radial\"` - label radiating from the center of the arc.\n\t * * `\"aligned\"` - horizontal label aligned with other labels horizontally.\n\t * * `\"adjusted\"` - horizontal label adjusted in postion.\n\t *\n\t * **IMPORTANT!** If the label is used in a [[PieSeries]], its `alignLabels` setting\n\t * (default: `true`) takes precedence over `textType`. If you need to set this\n\t * to anything else than `regular`, make sure you also set `alignLabels: falese` on\n\t * `PieSeries`.\n\t *\n\t * @default \"regular\"\n\t */\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\n\t/**\n\t * Extra spacing between characters, in pixels.\n\t *\n\t * @default 0\n\t */\n\tkerning?: number;\n\n}\n\nexport interface IRadialLabelPrivate extends ILabelPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tleft?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tradius?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius?: number;\n\n}\n\nexport class RadialLabel extends Label {\n\n\tdeclare public _settings: IRadialLabelSettings;\n\tdeclare public _privateSettings: IRadialLabelPrivate;\n\n\tdeclare protected _text: RadialText;\n\n\tpublic static className: string = \"RadialLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([RadialLabel.className]);\n\n\tprotected _flipped: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis._textKeys.push(\"textType\", \"kerning\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(RadialText.new(this._root, {}));\n\t}\n\n\t/**\n\t * Returns base radius in pixels.\n\t * \n\t * @return Base radius\n\t */\n\tpublic baseRadius(): number {\n\t\tconst radiusPrivate = this.getPrivate(\"radius\", 0);\n\t\tconst innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n\t\tconst baseRadius = this.get(\"baseRadius\", 0);\n\t\treturn innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n\t}\n\n\t/**\n\t * Returns radius adjustment in pixels.\n\t * \n\t * @return Radius\n\t */\n\tpublic radius(): number {\n\t\tconst inside = this.get(\"inside\", false);\n\t\treturn this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n\n\t\t\tconst textType = this.get(\"textType\", \"adjusted\");\n\n\t\t\tconst inside = this.get(\"inside\", false);\n\n\t\t\tconst orientation = this.get(\"orientation\");\n\t\t\tlet labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n\n\t\t\tthis._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n\t\t\tthis._text.set(\"inside\", inside);\n\n\t\t\tconst sin = $math.sin(labelAngle);\n\t\t\tconst cos = $math.cos(labelAngle);\n\n\t\t\tlet baseRadius = this.baseRadius();\n\t\t\tlet radius = this.radius();\n\n\t\t\tthis._display.angle = 0;\n\n\t\t\tif (textType == \"circular\") {\n\n\t\t\t\tthis.setAll({\n\t\t\t\t\tpaddingTop: 0,\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingRight: 0\n\t\t\t\t});\n\n\t\t\t\tthis.setRaw(\"x\", undefined);\n\t\t\t\tthis.setRaw(\"y\", undefined);\t\t\t\t\n\n\t\t\t\t// Circular labels are handled and positioned differently\n\n\t\t\t\tthis._text.set(\"orientation\", orientation);\n\t\t\t\tthis._text.set(\"radius\", radius);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (baseRadius == 0) {\n\t\t\t\t\tlabelAngle = 0;\n\t\t\t\t\tradius = 0;\n\t\t\t\t}\n\n\t\t\t\t// Positioning of radial/regular labels are teh same\n\t\t\t\tlet x = radius * cos;\n\t\t\t\tlet y = radius * sin;\n\n\t\t\t\tif (textType == \"radial\") {\n\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\n\t\t\t\t\tif ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\n\t\t\t\t\t\tthis._display.angle = labelAngle;// + 90;\n\t\t\t\t\t\tthis._flipped = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._display.angle = labelAngle + 180;\n\t\t\t\t\t\tthis._flipped = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._dirty.rotation = false;\n\t\t\t\t}\n\t\t\t\telse if (textType == \"adjusted\") {\n\t\t\t\t\tthis.setRaw(\"centerX\", p50);\n\t\t\t\t\tthis.setRaw(\"centerY\", p50);\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t\telse if (textType == \"regular\") {\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n\n\tpublic _updatePosition() {\n\n\t\tconst textType = this.get(\"textType\", \"regular\");\n\t\tconst inside = this.get(\"inside\", false);\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\t\tlet labelAngle = this.get(\"labelAngle\", 0);\n\t\tlet bounds = this.localBounds();\n\t\tlet w = bounds.right - bounds.left;\n\t\tlet h = bounds.bottom - bounds.top;\n\n\t\tif (textType == \"radial\") {\n\t\t\tif (this._flipped) {\n\t\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\t\tif (centerX instanceof Percent) {\n\t\t\t\t\tw = w * (1 - centerX.value * 2);\n\t\t\t\t}\n\n\t\t\t\tdx = w * $math.cos(labelAngle);\n\t\t\t\tdy = w * $math.sin(labelAngle);\n\t\t\t}\n\t\t}\n\t\telse if (!inside && textType == \"adjusted\") {\n\t\t\tdx = w / 2 * $math.cos(labelAngle);\n\t\t\tdy = h / 2 * $math.sin(labelAngle);\n\t\t}\n\n\n\t\tthis.setRaw(\"dx\", dx);\n\t\tthis.setRaw(\"dy\", dy);\n\n\t\tsuper._updatePosition();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get text(): RadialText {\n\t\treturn this._text;\n\t}\n\n}\n","import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["AxisLabelRadial","RadialLabel","constructor","Object","defineProperty","classNames","concat","className","MonotoneXTension","context","tension","this","_context","_tension","areaStart","_line","areaEnd","NaN","lineStart","_x0","_x1","_y0","_y1","_t0","_point","lineEnd","lineTo","point","slope2","closePath","x","y","t1","moveTo","slope3","curveMonotoneXTension","sign","that","x2","y2","h0","h1","s0","s1","p","Math","min","abs","t","h","t0","x0","y0","x1","y1","dx","bezierCurveTo","MonotoneYTension","curveMonotoneYTension","monotoneYTension","Label","_afterNew","_textKeys","push","super","_makeText","_text","children","RadialText","new","_root","baseRadius","radiusPrivate","getPrivate","innerRadiusPrivate","get","$utils","radius","inside","_updateChildren","isDirty","isPrivateDirty","textType","orientation","labelAngle","$math","set","sin","cos","_display","angle","setAll","paddingTop","paddingBottom","paddingLeft","paddingRight","setRaw","undefined","_flipped","_dirty","rotation","p50","markDirtyPosition","markDirtyBounds","_updatePosition","dy","bounds","localBounds","w","right","left","bottom","top","centerX","Percent","value","text","Text","_renderer","makeRadialText","textStyle","_beforeChanged","clear","startAngle","kerning","CategoryAxis","Axis","_settings","themeTags","fields","setPrivateRaw","addTag","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","dataItem","max","round","_sizeDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","_markDirtyAxes","key","openKey","otherAxis","ValueAxis","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","renderer","minorLabelsEnabled","minorGridEnabled","maxCount","axisLength","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","count","_prepareDataItem","_a","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","position","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","baseValue","basePosition","getX","axisDataItem","positionToCoordinate","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","location","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","tooltip","_setDataItem","markDirtyText","getSeriesItem","fieldName","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","nextPosition","toGlobalPosition","CategoryDateAxis","Number","MAX_SAFE_INTEGER","startTime","endTime","realDuration","baseDuration","gridInterval","$time","nextGridUnit","timeUnit","baseInterval","assign","formats","format","previousValue","Infinity","previousIndex","previousUnitValue","selectedItems","changed","skip","date","Date","unitValue","added","utc","pop","shouldAdd","item","dateFormatter","DurationAxis","_adjustMinMax","gridCount","strictMode","minMaxStep","durationFormatter","getDurationFormatter","baseUnit","difference","step","divisors","realDivisor","divisor","exponent","log","LOG10E","power","pow","reducedCount","getFormat","_formatText","formatter","extraDecimals","decimals","positionToValue","OHLC","Candlestick","_draw","display","width","height","lY","hY","lX","hX","OHLCSeries","CandlestickSeries","ListTemplate","Template","_new","columns","template","makeColumn","listTemplate","column","mainContainer","make","_processAxisRange","axisRange","SmoothedYLineSeries","LineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","curveCardinal","Step","_t","stepAfter","prototype","_x","_y","StepLineSeries","curveStepAfter","_getPoints","o","points","p100","itemLocationX0","locationX","itemLocationY0","locationY","itemLocationX1","itemLocationY1","xPos0","xField","vcx","yPos0","yField","vcy","xPos1","yPos1","_shouldInclude","iPoint0","getPoint","point0","iPoint1","point1","fillVisible","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","basePosY","basePosX","getOpen","valueX","xOpenField","valueY","yOpenField","openLocationX","openLocationY","stacked","stackToItemX","stackToItemY","component","closeIPoint0","closeIPoint1","segments","_k","_x2","_y2","Cardinal","custom","cardinal"],"sourceRoot":""}