{"version":3,"file":"static/js/json_plugins_exporting.51a05b21.chunk.js","mappings":"sJA0FM,MAAOA,UAAgBC,EAAAA,EAA7BC,WAAAA,G,oBAKCC,OAAAC,eAAA,iB,gDAA4BC,KAAKC,MAAMC,UAAUC,iBAAYC,IA4G9D,CAtGQC,QAAAA,GAGN,GAFAC,MAAMD,WAEFL,KAAKO,QAAQ,SAAU,CAC1B,MAAMC,EAAQR,KAAKS,IAAI,SACvBT,KAAKU,SAASF,MAAQG,EAAAA,GAAeH,GAASA,OAAQJ,C,CAGvD,GAAIJ,KAAKO,QAAQ,UAAW,CAC3B,MAAMK,EAASZ,KAAKS,IAAI,UACxBT,KAAKU,SAASE,OAASD,EAAAA,GAAeC,GAAUA,OAASR,C,CAG1D,GAAIJ,KAAKO,QAAQ,eAAgB,CAChCP,KAAKU,SAASG,QACd,MAAMC,EAAcd,KAAKS,IAAI,eAC7BT,KAAKU,SAASI,YAA6B,MAAfA,OAAsBV,EAAYU,C,CAG3Dd,KAAKO,QAAQ,gBAChBP,KAAKU,SAASG,QACdb,KAAKU,SAASK,WAAaf,KAAKS,IAAI,eAGjCT,KAAKO,QAAQ,mBAChBP,KAAKU,SAASG,QACdb,KAAKU,SAASM,cAAgBhB,KAAKS,IAAI,kBAGpCT,KAAKO,QAAQ,mBAChBP,KAAKU,SAASG,QACdb,KAAKU,SAASO,cAAgBjB,KAAKS,IAAI,kBAGpCT,KAAKO,QAAQ,mBAChBP,KAAKU,SAASG,QACdb,KAAKU,SAASQ,cAAgBlB,KAAKS,IAAI,mBAGpCT,KAAKO,QAAQ,QAAUP,KAAKO,QAAQ,WACvCP,KAAKU,SAASG,QACdb,KAAKmB,QAEP,CAEUA,KAAAA,GACT,MAAMC,EAAMpB,KAAKS,IAAI,OACrB,GAAIW,EAAK,CACR,MAAMC,EAAQ,IAAIC,MAClBD,EAAME,YAAcvB,KAAKS,IAAI,OAAQ,aACrCY,EAAMD,IAAMA,EACZ,MAAMI,EAASxB,KAAKwB,OAEpBH,EAAMI,SAASC,MAAK,KACnB1B,KAAKU,SAASW,MAAQA,EACtBrB,KAAK2B,eACAH,EAAOI,cAAgBJ,EAAOK,UAAU,WAC5CL,EAAOM,SAAS,SAAU,CAAEC,KAAM,SAAUC,OAAQhC,M,IAEnDiC,OAAOC,KACJV,EAAOI,cAAgBJ,EAAOK,UAAU,cAC5CL,EAAOM,SAAS,YAAa,CAAEC,KAAM,YAAaC,OAAQhC,M,IAK9D,CAEO2B,WAAAA,GACNrB,MAAMqB,cAEN,MAAMN,EAAQrB,KAAKU,SAASW,MAC5B,GAAIA,EAAO,CACV,IAAIc,EAAInC,KAAKoC,WAAW,QAASpC,KAAKS,IAAI,UACtC4B,EAAIrC,KAAKoC,WAAW,SAAUpC,KAAKS,IAAI,WAC3C,MAAM6B,EAAIjB,EAAMb,OAASa,EAAMT,OAASS,EAAMb,MAAQa,EAAMT,OAAS,EAEjED,EAAAA,GAAewB,IAAMxB,EAAAA,GAAe0B,IACvCrC,KAAKU,SAASF,MAAQ2B,EACtBnC,KAAKU,SAASE,OAASyB,GAEf1B,EAAAA,GAAewB,IAAMG,EAC7BD,EAAIF,EAAIG,EAEA3B,EAAAA,GAAe0B,IAAMC,EAC7BH,EAAIE,EAAIC,GAGRH,EAAId,EAAMb,MACV6B,EAAIhB,EAAMT,QAGPD,EAAAA,GAAewB,KAClBnC,KAAKU,SAASF,MAAQ2B,GAEnBxB,EAAAA,GAAe0B,KAClBrC,KAAKU,SAASE,OAASyB,GAExBrC,KAAKuC,kBACLvC,KAAKwC,W,CAEP,EAzGA1C,OAAAC,eAAAJ,EAAA,a,gDAAkC,YAClCG,OAAAC,eAAAJ,EAAA,c,gDAA0CC,EAAAA,EAAO6C,WAAWC,OAAO,CAAC/C,EAAQgD,a,iKCnE7E,IAAIC,EAkmBE,MAAOC,UAAkBC,EAAAA,GAWpBC,SAAAA,GACTzC,MAAMyC,YACN/C,KAAKgD,eAAe,aAAc,SAClChD,KAAKgD,eAAe,UAAW,SAC/BhD,KAAKgD,eAAe,gBAAiB,IACrChD,KAAKgD,eAAe,aAAc,IAClChD,KAAKgD,eAAe,iBAAkB,IACtChD,KAAKgD,eAAe,cAAe,IACnChD,KAAKgD,eAAe,aAAc,CAAEC,QAAS,EAAGC,oBAAoB,IACpElD,KAAKgD,eAAe,aAAc,CAAEC,QAAS,GAAKC,oBAAoB,IACtElD,KAAKgD,eAAe,eAAgB,CAAEC,QAAS,EAAGC,oBAAoB,EAAOC,MAAO,IAAKC,YAAa,SAAUC,YAAa,QAC7HrD,KAAKgD,eAAe,cAAe,CAAEM,OAAQ,EAAGC,cAAc,IAC9DvD,KAAKgD,eAAe,aAAc,CAAEQ,UAAW,IAAKC,gBAAgB,EAAMC,QAAS,GAAIC,QAAQ,IAC/F3D,KAAKgD,eAAe,cAAe,CAAEU,QAAS,IAAKD,gBAAgB,IACnEzD,KAAKgD,eAAe,cAAe,CAAEU,QAAS,GAAID,gBAAgB,IAClEzD,KAAKgD,eAAe,aAAc,CAAEY,SAAU,GAAIP,YAAa,MAAOQ,MAAO,OAAQC,QAAQ,IAC7F9D,KAAKgD,eAAe,iBAAkB,CAAEU,QAAS,GAAID,gBAAgB,IAErEzD,KAAKC,MAAM8D,YAAY/D,KACxB,CAEOgE,cAAAA,GAGN,GAFA1D,MAAM0D,iBAEFhE,KAAKO,QAAQ,QAAS,CACzB,MAAM0D,EAAOjE,KAAKS,IAAI,QAClBwD,IACHA,EAAKC,IAAI,YAAalE,MACtBA,KAAKmE,WAAWC,KAAKH,G,CAGxB,CAEUI,iBAAAA,CAAkBC,EAA0BC,GACrD,MAAMC,EAAkBC,EAAAA,EAAmBzE,KAAMS,IAAI6D,EAAS,UAAW,CAAC,IAM1E,OALIC,GACHE,EAAAA,GAAaF,GAAS,CAACG,EAAKC,KAC3BH,EAAWE,GAAOC,CAAK,IAGlBH,CACR,CAQaI,QAAAA,CAASN,EAA0BO,G,+CAC/C,MAAMC,EAAgB,WAAVR,EAAsB,MAAQA,EACpCS,EAAW/E,KAAKS,IAAI,aAAc,SAAW,IAAMqE,EACnDP,EAAUvE,KAAKqE,kBAAkBC,EAAQO,GAC/C7E,KAAKwB,OAAOM,SAAS,kBAAmB,CACvCC,KAAM,kBACNuC,OAAQA,EACRC,QAASA,EACTQ,SAAUA,EACV/C,OAAQhC,OAET,MAAMgF,QAAYhF,KAAKiF,OAAOX,EAAQC,GACtCvE,KAAKkF,WAAWF,EAAKD,EAAWR,GAAkCA,EAASZ,OAC5E,G,CAOawB,KAAAA,CAAMN,G,+CAClB,MAAMN,EAAkCvE,KAAKqE,kBAAkB,QAASQ,GACxE7E,KAAKwB,OAAOM,SAAS,eAAgB,CACpCC,KAAM,eACNuC,OAAQ,QACRC,QAASA,EACTvC,OAAQhC,OAET,MAAMgF,QAAYhF,KAAKiF,OAAOV,EAAQlB,aAAe,MAAOkB,GAC5DvE,KAAKoF,cAAcJ,EAAKT,EAASvE,KAAKS,IAAI,SAC3C,G,CASawE,OAAOX,EAA0BO,G,+CAC7C,MAAMN,EAAUvE,KAAKqE,kBAAkBC,EAAQO,GAC/C7E,KAAKwB,OAAOM,SAAS,gBAAiB,CACrCC,KAAM,gBACNuC,OAAQA,EACRC,QAASA,EACTvC,OAAQhC,OAGT,IAAIqF,EAAoC,GACxC,OAAQf,GACP,IAAK,MACL,IAAK,MACJtE,KAAKC,MAAMqF,gBACXD,EAAUrF,KAAKuF,YAAYjB,EAAQC,GACnC,MACD,IAAK,OACJc,EAAUrF,KAAKwF,WAAWjB,GAC1B,MACD,IAAK,MACJc,EAAUrF,KAAKyF,UAAUlB,GACzB,MACD,IAAK,OACJc,EAAUrF,KAAK0F,WAAWnB,GAC1B,MACD,IAAK,OACJc,EAAUrF,KAAK2F,WAAWpB,GAC1B,MACD,IAAK,MACJvE,KAAKC,MAAMqF,gBACXD,EAAUrF,KAAK4F,UAAUrB,GACzB,MACD,IAAK,UACJc,EAAUrF,KAAK6F,cAActB,GAS/B,OANAvE,KAAKwB,OAAOM,SAAS,iBAAkB,CACtCC,KAAM,iBACNuC,OAAQA,EACRC,QAASA,EACTvC,OAAQhC,OAEFqF,CACR,G,CAeaE,WAAAA,CAAYjB,EAA+BO,G,+CACvD,MAAMN,EAAevE,KAAKqE,kBAAkBC,EAAQO,GAC9CiB,QAAe9F,KAAK+F,UAAUxB,GAC9ByB,EAAOF,EAAOG,UAAUjG,KAAKkG,eAAe5B,GAASC,EAAQtB,SAAW,GAE9E,OADAjD,KAAKmG,cAAcL,GACZE,CACR,G,CAQaI,YAAAA,CAAavB,G,+CACzB,MAAMN,EAAevE,KAAKqE,kBAAkB,SAAUQ,GAChDiB,QAAe9F,KAAK+F,UAAUxB,GAC9ByB,EAAOF,EAAOG,UAAUjG,KAAKkG,eAAe,UAAW3B,EAAQtB,SAAW,GAEhF,OADAjD,KAAKmG,cAAcL,GACZE,CACR,G,CAQaD,SAAAA,CAAUxB,G,+CACtB,MAAM8B,EAAarG,KAAKC,MAAMC,UAAU6F,UAAU/F,KAAKC,MAAMqG,eAAe5F,SAAU6D,GAChFgC,EAAcvG,KAAKS,IAAI,cAAe,IAG5C,IAAI+F,EAAa,EACbC,EAAY,EACZC,EAAcL,EAAW7F,MACzBmG,EAAeN,EAAWzF,OAC1BgG,EAAa,EACbC,EAAc,EAElB,MAAMC,EAAgB,GAEtBC,EAAAA,GAAYR,GAAcS,IAGzB,IAAIC,EAGHA,EADGD,aAAqBE,EAAAA,EAChB,CACPC,OAAQH,EACRI,SAAU,UAIoBJ,EAIhCC,EAAMG,SAAWH,EAAMG,UAAY,SACnCH,EAAMI,UAAYJ,EAAMI,WAAa,EACrCJ,EAAMK,YAAcL,EAAMK,aAAe,EACzCL,EAAMM,aAAeN,EAAMM,cAAgB,EAC3CN,EAAMO,WAAaP,EAAMO,YAAc,EAEvC,MAAMC,EAAcR,EAAME,OAAOjH,UAAU6F,UAAUkB,EAAME,OAAOb,eAAe5F,SAAU6D,GAErFmD,EAAaD,EAAYjH,MAAQyG,EAAMO,WAAaP,EAAMK,YAC1DK,EAAcF,EAAY7G,OAASqG,EAAMI,UAAYJ,EAAMM,aAE3C,OAAlBN,EAAMG,UACTV,EAAcO,EAAMW,KAAOjB,EAAekB,KAAKC,IAAIpB,EAAagB,GAChEjB,GAAakB,GAEe,SAAlBV,EAAMG,UAChBT,EAAeM,EAAMW,KAAOjB,EAAekB,KAAKC,IAAInB,EAAcgB,GAClEf,GAAcc,GAEc,QAAlBT,EAAMG,UAChBT,EAAeM,EAAMW,KAAOjB,EAAekB,KAAKC,IAAInB,EAAcgB,GAClEnB,GAAckB,GAEe,WAAnBT,EAAMG,WAChBV,EAAcO,EAAMW,KAAOjB,EAAekB,KAAKC,IAAIpB,EAAagB,GAChEb,GAAec,GAGhBb,EAAO1C,KAAK,CACX0B,OAAQ2B,EACRL,SAAUH,EAAMG,SAChBW,KAAMd,EAAMO,WACZQ,IAAKf,EAAMI,UACX7G,MAAOkH,EACP9G,OAAQ+G,GACP,IAIH,MAAMM,EAAYjI,KAAKkI,sBAEvBD,EAAUzH,MAAQgG,EAAaE,EAAcE,EAC7CqB,EAAUrH,OAAS6F,EAAYE,EAAeE,EAE9C,MAAMsB,EAAMF,EAAUG,WAAW,MAG3BC,EAAarI,KAAKS,IAAI,kBAAmBT,KAAKsI,oBAAoBtI,KAAKC,MAAMsI,MAC7EC,EAAoBxI,KAAKS,IAAI,oBAAqB,GAEpD4H,IACHF,EAAIM,UAAYJ,EAAWK,MAAMF,GACjCL,EAAIQ,SAAS,EAAG,EAAGV,EAAUzH,MAAOyH,EAAUrH,SAG/C,IAAImH,EAAOvB,EACPwB,EAAMvB,EACNmC,EAAQb,EAAOrB,EACfmC,EAASb,EAAMrB,EA0BnB,OAvBAI,EAAAA,GAAYD,GAASG,IACE,OAAlBA,EAAMG,UACTY,GAAOf,EAAMrG,OACbuH,EAAIW,UAAU7B,EAAMnB,OAAQU,EAAaS,EAAMc,KAAMC,EAAMf,EAAMe,MAErC,SAAlBf,EAAMG,UAChBe,EAAIW,UAAU7B,EAAMnB,OAAQ8C,EAAQ3B,EAAMc,KAAMtB,EAAYQ,EAAMe,KAClEY,GAAS3B,EAAMzG,OAEa,QAAlByG,EAAMG,UAChBW,GAAQd,EAAMzG,MACd2H,EAAIW,UAAU7B,EAAMnB,OAAQiC,EAAOd,EAAMc,KAAMtB,EAAYQ,EAAMe,MAEpC,WAAnBf,EAAMG,WAChBe,EAAIW,UAAU7B,EAAMnB,OAAQU,EAAaS,EAAMc,KAAMc,EAAS5B,EAAMe,KACpEa,GAAU5B,EAAMrG,O,IAMlBuH,EAAIW,UAAUzC,EAAYG,EAAYC,GAE/BwB,CACR,G,CAcazC,UAAAA,CAAWX,G,+CACvB,MAAO,QAAU7E,KAAKkG,eAAe,QAAU,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKgJ,QAAQnE,GACjI,G,CAQamE,OAAAA,CAAQnE,G,+CACpB,MAAMN,EAAevE,KAAKqE,kBAAkB,OAAQQ,GACpD,OAAOoE,KAAKC,UAAUlJ,KAAKmJ,QAAQ,OAAQtE,EAAeN,EAAQhB,eAAe,CAAC6F,EAAMzE,KACnFhE,EAAAA,GAAegE,IAClBF,EAAAA,GAAaE,GAAO,CAAC0E,EAAOC,KAC3B3E,EAAM0E,GAASrJ,KAAKuJ,uBAAuBF,EAAOC,EAAM/E,EAAQ,IAG3DI,IACLJ,EAAQjB,OACZ,G,CAcamC,SAAAA,CAAUZ,G,+CACtB,MAAO,QAAU7E,KAAKkG,eAAe,OAAS,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKwJ,OAAO3E,GAC/H,G,CAQa2E,MAAAA,CAAO3E,G,+CACnB,MAAMN,EAAevE,KAAKqE,kBAAkB,MAAOQ,GAGnD,IAAI4E,EAAM,GAGNC,EAAK,GACT,MAAM1D,EAAOhG,KAAKmJ,QAAQ,MAAO5E,GAG3BoF,EAAa3J,KAAK4J,cAAc5D,GAGtC,GAAIzB,EAAQsF,MAAO,CAGlB,MAAMC,EAA4B9J,KAAKS,IAAI,kBAAmB,IAE9DgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKqF,KACrC,IAAIC,EAAU,GACVzF,EAAQd,gBACXuG,EAAQ5F,KAAK2F,GAEd,IAAK,IAAIE,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAChD,IAAIC,EAAYpE,EAAKmE,GAAGzF,GACxBsF,EAAQ5F,KAAKpE,KAAKuJ,uBAAuB7E,EAAK0F,EAAW7F,GAAS,G,CAEnEkF,GAAOC,EAAK1J,KAAKqK,UAAUL,EAASzF,OAASnE,GAAW,GACxDsJ,EAAK,IAAI,IACP,CAACY,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,GACA,EAEAF,EAAKE,EACN,EAED,CAAC,G,KAKL,CACJ,IAAK,IAAIT,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAChD,IAAIQ,EAAM3K,KAAKqK,UAAUrE,EAAKmE,GAAI5F,EAASoF,GACvCpF,EAAQqG,QACXnB,EAAMkB,EAAMjB,EAAKD,EAGjBA,GAAOC,EAAKiB,EAEbjB,EAAK,I,CAIFnF,EAAQd,iBACXgG,EAAMzJ,KAAKqK,UAAUV,EAAYpF,OAASnE,GAAW,GAAQsJ,EAAKD,E,CAIpE,OAAOA,CAER,G,CAKOY,SAAAA,CAAUM,EAAUpG,EAA+BoF,GAAsC,IAArBkB,EAAAC,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAGtEtH,EAAYe,EAAQf,WAAa,IACjCuH,EAAe,GAGdpB,IACJA,EAAa,CAAC,EACdlF,EAAAA,GAAakG,GAAK,CAACjG,EAAKC,KACvBgF,EAAWjF,GAAOC,CAAK,KAKzB,MAAMmF,EAA4B9J,KAAKS,IAAI,kBAAmB,IAwC9D,OArCAgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKsG,KAGrC,IAAIrG,EAAQ3E,KAAKiL,kBAAkBvG,EAAKiG,EAAIjG,GAAMH,GAS9C+E,EAAOuB,EAAOlG,EAAQ3E,KAAKuJ,uBAAuB7E,EAAKC,EAAOJ,GAGlE+E,EAAO,GAAKA,EACZA,EAAOA,EAAK4B,QAAQ,KAAM,OAGtB3G,EAAQ4G,aAAgB7B,EAAK8B,OAAO,IAAIC,OAAO,QAAW7H,EAAW,OAAS,KACjF8F,EAAO,IAAOA,EAAO,KAItByB,EAAM3G,KAAKkF,EAAK,IACd,CAACgB,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,IAGFK,EAAMO,KAAK9H,EACnB,CAcakC,UAAAA,CAAWb,G,+CACvB,MAAO,QAAU7E,KAAKkG,eAAe,QAAU,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKuL,QAAQ1G,GACjI,G,CAQa0G,OAAAA,CAAQ1G,G,+CACpB,MAAMN,EAAevE,KAAKqE,kBAAkB,OAAQQ,GAGpD,IAAI2G,EAAO,UACPjH,EAAQkH,aACXD,EAAO,iBAAoBjH,EAAQkH,WAAa,MAIjD,MAAMzF,EAAOhG,KAAKmJ,QAAQ,OAAQ5E,GAC5BoF,EAAa3J,KAAK4J,cAAc5D,GAGtC,GAAIzB,EAAQsF,MAAO,CAGlB,MAAMC,EAA4B9J,KAAKS,IAAI,kBAAmB,IAE9D+K,GAAQ,YAER/G,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKqF,KACrC,IAAIC,EAAU,GACVzF,EAAQd,gBACXuG,EAAQ5F,KAAK2F,GAEd,IAAK,IAAIE,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAChD,IAAIC,EAAYpE,EAAKmE,GAAGzF,GACxBsF,EAAQ5F,KAAKpE,KAAKuJ,uBAAuB7E,EAAK0F,EAAW7F,GAAS,G,CAEnEiH,GAAQ,KAAOxL,KAAK0L,WAAW1B,EAASzF,OAASnE,GAAW,EAAK,IAC/D,CAACkK,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,GACA,EAEAF,EAAKE,EACN,EAED,CAAC,IAGTc,GAAQ,Y,KAIJ,CAEAjH,EAAQd,iBACX+H,GAAQ,cAAgBxL,KAAK0L,WAAW/B,EAAYpF,OAASnE,GAAW,GAAM,GAAQ,cAGvFoL,GAAQ,YAER,IAAK,IAAIvB,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAC3CqB,GAAQ,KAAOxL,KAAK0L,WAAW1F,EAAKmE,GAAI5F,EAASoF,GAGlD6B,GAAQ,Y,CAKT,OAFAA,GAAQ,aAEDA,CAER,G,CAKOE,UAAAA,CAAWf,EAAUpG,EAAgCoF,GAAkE,IAAjDkB,EAAAC,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAAuBa,EAAAb,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAG/FU,EAAO,SACPjH,EAAQqH,WACXJ,EAAO,gBAAmBjH,EAAQqH,SAAW,MAIzCjC,IACJA,EAAagB,GAId,MAAMb,EAA4B9J,KAAKS,IAAI,kBAAmB,IAGxDoL,EAAMF,EAAY,KAAO,KAG/B,IAAIG,GAAQ,EA4CZ,OA3CArH,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKsG,KAGrC,IAAIrG,EAAQ3E,KAAKiL,kBAAkBvG,EAAKiG,EAAIjG,GAAMH,GAG9C+E,EAAOuB,EAAOlG,EAAQ3E,KAAKuJ,uBAAuB7E,EAAKC,EAAOJ,GAGlE+E,EAAO,GAAKA,EACZA,EAAOA,EAAK4B,QAAQ,0BAA0B,SAASf,GACtD,MAAO,KAAOA,EAAE4B,WAAW,GAAK,GACjC,IAGA,IAAIC,EAASH,EACTtH,EAAQsF,OAASiC,IACpBE,EAAS,MAINzH,EAAQ0H,UACXT,GAAQ,UAAYQ,EAAS,WAAczH,EAAQ0H,UAAY,KAAQ3C,EAAO,KAAO0C,EAAS,IAG9FR,GAAQ,UAAYQ,EAAS,IAAM1C,EAAO,KAAO0C,EAAS,IAG3DF,GAAQ,CAAK,IACX,CAACxB,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,IAGTc,GAAQ,YAEDA,CACR,CAca7F,UAAAA,CAAWd,G,+CACvB,MAAO,QAAU7E,KAAKkG,eAAe,QAAU,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKkM,QAAQrH,GACjI,G,CAQaqH,OAAAA,CAAQrH,G,+CAEpB,MAAMN,EAAevE,KAAKqE,kBAAkB,OAAQQ,GAGpD,IAAIsH,QAAanM,KAAKoM,aAGlBC,EAAY,CACfC,SAAU,OACVC,SAAS,EACTxK,KAAM,UAKHyK,EAAYxM,KAAKyM,yBAAyBzM,KAAKS,IAAI,QAAST,KAAK0M,GAAG,UAGpEC,EAAK,CACRC,WAAiB,CAACJ,GAClBK,OAAa,CAAC,GAIXC,EAAqB,GAGzB,MAAM9G,EAAOhG,KAAKmJ,QAAQ,OAAQ5E,GAC5BoF,EAAa3J,KAAK4J,cAAc5D,GAGtC,GAAIzB,EAAQsF,MAAO,CAGlB,MAAMC,EAA4B9J,KAAKS,IAAI,kBAAmB,IAE9DgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKqF,KACrC,IAAIC,EAAU,GACVzF,EAAQd,gBACXuG,EAAQ5F,KAAK2F,GAEd,IAAK,IAAIE,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAChD,IAAIC,EAAYpE,EAAKmE,GAAGzF,GACxBsF,EAAQ5F,KAAKpE,KAAKuJ,uBAAuB7E,EAAK0F,EAAW7F,GAAS,G,CAEnEuI,EAAO1I,KAAKpE,KAAK+M,WAAW/C,EAASzF,OAASnE,GAAW,GAAM,IAC7D,CAACkK,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,G,KAKL,CAEAnG,EAAQd,gBACXqJ,EAAO1I,KAAKpE,KAAK+M,WAAWpD,EAAYpF,OAASnE,GAAW,IAI7D,IAAK,IAAI6J,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAC3C2C,EAAO1I,KAAKpE,KAAK+M,WAAW/G,EAAKmE,GAAI5F,EAASoF,G,CAiBhD,OAZAgD,EAAGE,OAAOL,GAAaL,EAAKa,MAAMC,aAAaH,GAE/C9M,KAAKwB,OAAOM,SAAS,gBAAiB,CACrCC,KAAM,gBACNuC,OAAQ,OACRC,QAASA,EACT2I,SAAUP,EACVQ,gBAAiBd,EACjBe,KAAMjB,EACNnK,OAAQhC,OAGFmM,EAAKkB,MAAMV,EAAIN,EACvB,G,CAEQI,wBAAAA,CAAyBa,GAEhC,OADAA,EAAOA,EAAKpC,QAAQ,oBAAqB,MAC7BhB,OAAS,GAAKoD,EAAKC,OAAO,EAAG,IAAM,MAAQD,CACxD,CAKOP,UAAAA,CAAWpC,EAAUpG,EAAgCoF,GAAsC,IAArBkB,EAAAC,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAGxEC,EAAe,GAGdpB,IACJA,EAAagB,GAId,MAAMb,EAA4B9J,KAAKS,IAAI,kBAAmB,IAwB9D,OArBAgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKsG,KAGrC,IAAIrG,EAAQ3E,KAAKiL,kBAAkBvG,EAAKiG,EAAIjG,GAAMH,GAG9C+E,EAAOuB,EAAOlG,EAAQ3E,KAAKuJ,uBAAuB7E,EAAKC,EAAOJ,GAAS,GAE3EwG,EAAM3G,KAAKkF,EAAK,IACd,CAACgB,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,IAGFK,CACR,CAMcyC,KAAAA,G,+CACb,aAAa,6BACd,G,CAKOpB,UAAAA,GACN,OAAOpM,KAAKwN,OACb,CAca5H,SAAAA,CAAUf,G,+CACtB,MAAO,QAAU7E,KAAKkG,eAAe,OAAS,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKyN,OAAO5I,GAAe,GAC9I,G,CAQagB,aAAAA,CAAchB,G,+CAC1B,MAAO,QAAU7E,KAAKkG,eAAe,OAAS,IAAMlG,KAAKS,IAAI,UAAW,SAAW,IAAMsI,yBAAyB/I,KAAKyN,OAAO5I,GAAe,GAAO,GACrJ,G,CASa4I,MAAAA,CAAO5I,GAAgG,IAA1D6I,IAAA5C,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,KAAAA,UAAA,GAA8B6C,EAAA7C,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,G,+CAEvF,MAAMvG,EAAevE,KAAKqE,kBAAkB,MAAOQ,GAC7C+I,EAAmB5N,KAAKqE,kBAAkB,UAAWQ,GACrDgJ,EAAwCtJ,EAAQuJ,iBAAmB,WAGzE,IAAIzM,EAEJ,MAAM0M,EAAY,CACjBvN,MAAO,EACPI,OAAQ,GAGT,GAAI8M,EAAc,CACjB,MAAMrK,EAAckB,EAAQlB,aAAe,MACrC2K,EAAoBhO,KAAKqE,kBAAkBhB,EAAakB,GACxDuB,QAAe9F,KAAK+F,UAAUiI,GACpCD,EAAUvN,MAAQsF,EAAOmI,YACzBF,EAAUnN,OAASkF,EAAOoI,aAC1B7M,EAAQyE,EAAOG,UAAUjG,KAAKkG,eAAe7C,GAAckB,EAAQtB,SAAW,GAC9EjD,KAAKmG,cAAcL,E,CAIpB,MAAMqI,QAAgBnO,KAAKoO,aAM3B,IAAIC,EAAM,CACTC,SAAU/J,EAAQ+J,UAAY,KAC9BR,gBAAiBD,EACjBU,YAAahK,EAAQgK,aANC,CAAC,GAAI,GAAI,GAAI,IAOnCC,aAAc,CACbC,KAAMlK,EAAQkK,KAAOlK,EAAQkK,KAAKnB,UAAOlN,GAG1CsO,QAAc,IAIf,MAAMC,EAAQ3O,KAAKS,IAAI,SAEvB,IAAImO,EAAc,EA2BlB,GAzBID,IACHN,EAAIK,QAAQtK,KAAK,CAChByK,KAAMF,EACN/K,SAAUW,EAAQX,UAAY,GAC9BkL,MAAM,EACNC,OAAQ,CAAC,EAAG,EAAG,EAAG,MAInBH,GAAe,IAIZrK,EAAQT,SACXuK,EAAIK,QAAQtK,KAAK,CAChByK,KAAM7O,KAAK0M,GAAG,cAAgB,KAAOsC,SAASC,SAASC,KACvDtL,SAAUW,EAAQX,SAClBmL,OAAQ,CAAC,EAAG,EAAG,EAAG,MAInBH,GAAe,IAIZlB,GAAgBrM,EAAQ,CAC3B,MAAM8N,EAAUnP,KAAKoP,eAAef,EAAIC,SAAUD,EAAIE,YAAaK,EAAaf,GAC3EE,EAAUvN,MAAQ2O,EAAQ,IAAQpB,EAAUnN,OAASuO,EAAQ,GACjEd,EAAIK,QAAQtK,KAAK,CAChB/C,MAAOA,EACPgO,UAAW9K,EAAQV,OAAS,OAC5ByL,IAAKH,IAINd,EAAIK,QAAQtK,KAAK,CAChB/C,MAAOA,EACPgO,UAAW9K,EAAQV,OAAS,Q,EAM1B8J,GAAepJ,EAAQoJ,cAAgB3N,KAAKuP,WAChDlB,EAAIK,QAAQtK,KAAK,CAChBoL,YAAaxP,KAAKyP,WAAW7B,GAC7BhK,SAAUW,EAAQX,UAAY,KAIhC,IAAI8L,EAAgE,KAChEC,EAAyC,KAE7C,SAASC,EAAQnB,GAChB,MAAMoB,EAAoC,CAAC,EAE3CA,EAAMC,OAASrB,EAAKqB,OAAOC,KAC3BJ,EAAKlB,EAAKqB,OAAOC,MAAQtB,EAAKqB,OAAOE,MAEjCvB,EAAKK,MACRe,EAAMf,KAAOL,EAAKK,KAAKiB,KACvBJ,EAAKlB,EAAKK,KAAKiB,MAAQtB,EAAKK,KAAKkB,OAGjCH,EAAMf,KAAOL,EAAKqB,OAAOC,KAGtBtB,EAAKwB,SACRJ,EAAMI,QAAUxB,EAAKwB,QAAQF,KAC7BJ,EAAKlB,EAAKwB,QAAQF,MAAQtB,EAAKwB,QAAQD,OAGvCH,EAAMI,QAAUxB,EAAKqB,OAAOC,KAGzBtB,EAAKyB,aACRL,EAAMK,YAAczB,EAAKyB,YAAYH,KACrCJ,EAAKlB,EAAKyB,YAAYH,MAAQtB,EAAKyB,YAAYF,OAG/CH,EAAMK,YAAczB,EAAKqB,OAAOC,KAGjCL,EAAOjB,EAAKnB,MAAQuC,CACrB,CAqBA,OAnBItL,EAAQkK,OACXiB,EAAQ,CAAC,EACTC,EAAM,CAAC,EACPC,EAAQrL,EAAQkK,MAEZlK,EAAQ4L,YACXpJ,EAAAA,GAAYxC,EAAQ4L,WAAYP,IAIlC5P,KAAKwB,OAAOM,SAAS,cAAe,CACnCC,KAAM,cACNuC,OAAQ,MACRC,QAASA,EACT8J,IAAKA,EACLrM,OAAQhC,OAIF,IAAIoQ,SAAgB,CAACC,EAASnO,KACpCiM,EAAQmC,UAAUjC,EAAK,KAAMqB,EAAOC,GAAKY,WAAWvL,IACnDqL,EAAQrL,EAAI,GACX,GAEJ,G,CAKayK,UAAAA,CAAW5K,G,+CAEvB,MAAMN,EAAevE,KAAKqE,kBAAkB,UAAWQ,GAGvD,IAAI6J,EAAe,CAClB,KAAa,IAId,MAAM1I,EAAOhG,KAAKmJ,QAAQ,OAAQ5E,GAC5BoF,EAAa3J,KAAK4J,cAAc5D,GAGtC,GAAIzB,EAAQsF,MAAO,CAGlB,MAAMC,EAA4B9J,KAAKS,IAAI,kBAAmB,IAE9DgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKqF,KACrC,IAAIC,EAAU,GACVzF,EAAQd,gBACXuG,EAAQ5F,KAAK2F,GAEd,IAAK,IAAIE,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAChD,IAAIC,EAAYpE,EAAKmE,GAAGzF,GACxBsF,EAAQ5F,KAAKpE,KAAKuJ,uBAAuB7E,EAAK0F,EAAW7F,GAAS,G,CAEnEmK,EAAQ8B,KAAKpM,KAAKpE,KAAKyQ,cAAczG,EAASzF,OAASnE,GAAW,GAAM,IACtE,CAACkK,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,G,KAKL,CAGAnG,EAAQd,iBACXiL,EAAQ8B,KAAKpM,KAAKpE,KAAKyQ,cAAc9G,EAAYpF,OAASnE,GAAW,IACrEsO,EAAQgC,WAAa,GAGtB,IAAK,IAAIzG,EAAMjE,EAAKkE,OAAQC,EAAI,EAAGA,EAAIF,EAAKE,IAC3CuE,EAAQ8B,KAAKpM,KAAKpE,KAAKyQ,cAAczK,EAAKmE,GAAI5F,EAASoF,G,CAKzD,OAAO+E,CAER,G,CAKO+B,aAAAA,CAAc9F,EAAUpG,EAAgCoF,GAAuC,IAArBkB,EAAAC,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAG5EC,EAAe,GAGdpB,IACJA,EAAagB,GAId,MAAMb,EAA4B9J,KAAKS,IAAI,kBAAmB,IA0B9D,OAvBAgE,EAAAA,GAAoBkF,GAAY,CAACjF,EAAKsG,KAGrC,IAAIrG,EAAQ3E,KAAKiL,kBAAkBvG,EAAKiG,EAAIjG,GAAMH,GAG9C+E,EAAOuB,EAAOlG,EAAQ3E,KAAKuJ,uBAAuB7E,EAAKC,EAAOJ,GAClE+E,EAAO,GAAKA,EAGZyB,EAAM3G,KAAKkF,EAAK,IACd,CAACgB,EAAGC,KACN,IAAIC,EAAKV,EAAgBW,QAAQH,GAC7BI,EAAKZ,EAAgBW,QAAQF,GACjC,OAAIC,EAAKE,EACD,EAECF,EAAKE,GACL,EAEF,CAAC,IAGFK,CACR,CAQOqD,UAAAA,GAKN,YAJuBhO,IAAnBwC,IACHA,EA5rDH,W,+CACC,IAAI0H,QAAU8F,QAAQO,IAAI,CACzB,mCACA,gCAGGxC,EAAU7D,EAAE,GAAGsG,QACfC,EAAYvG,EAAE,GAAGsG,QACrB,MAAME,EAAcC,OAIpB,OAHAD,EAAOE,QAAUF,EAAOE,SAAW,CAAC,EACpCF,EAAOE,QAAQrB,IAAMkB,EACrB1C,EAAQwB,IAAMkB,EACP1C,CACR,G,CA+qDoB8C,IAGXrO,CACR,CAKOwM,cAAAA,CAAed,EAAqB4C,GAAuG,IAA3EtC,EAAA9D,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,GAAAA,UAAA,GAAsB,EAAG+C,EAAA/C,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,GAAAA,UAAA,GAAwC,WAGnIqG,EAAa,CAAC,EAAG,EAAG,EAAG,GACvBxQ,EAAAA,GAAeuQ,GAClBC,EAAa,CAACD,EAASA,EAASA,EAASA,GAEf,GAAlBA,EAAQhH,OAChBiH,EAAa,CAACD,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAEhC,GAAlBA,EAAQhH,SAChBiH,EAAaD,GAId,IAsDI/B,EAtDQ,CACX,MAAO,CAAC,QAAS,SACjB,MAAO,CAAC,QAAS,SACjBiC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,OAAQ,SACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,MAAQ,QACbC,GAAI,CAAC,OAAQ,OACbC,IAAK,CAAC,KAAO,QACbC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,OAAQ,SACbC,GAAI,CAAC,MAAQ,QACbC,GAAI,CAAC,OAAQ,OACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,IAAK,CAAC,MAAO,QACbC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,QAAS,SACdC,GAAI,CAAC,OAAQ,SACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,OAAQ,QACbC,IAAK,CAAC,MAAO,QACbC,IAAK,CAAC,OAAS,SACfC,IAAK,CAAC,QAAS,QACfC,IAAK,CAAC,OAAS,SACfC,IAAK,CAAC,OAAQ,QACdC,IAAK,CAAC,OAAQ,QACdC,KAAM,CAAC,QAAS,SAChBC,KAAM,CAAC,QAAS,SAChBC,KAAM,CAAC,QAAS,SAChBC,KAAM,CAAC,OAAQ,SACfC,KAAM,CAAC,MAAQ,QACfC,UAAW,CAAC,OAAQ,KACpBC,MAAO,CAAC,IAAQ,KAChBC,MAAO,CAAC,IAAQ,MAChBC,OAAQ,CAAC,IAAQ,KACjBC,QAAS,CAAC,IAAQ,OAIC7F,GAMpB,MALmB,aAAfT,GACHsB,EAAQvE,UAETuE,EAAQ,IAAMgC,EAAW,GAAKA,EAAW,GACzChC,EAAQ,IAAMgC,EAAW,GAAKA,EAAW,GAAKvC,EACvCO,CACR,CAcOI,OAAAA,GACN,MAAM6E,EAAapU,KAAKS,IAAI,cAC5B,SAAOE,EAAAA,GAAcyT,KAAeA,EAAWlK,OAChD,CAUOf,OAAAA,CAAQ7E,EAA0BO,GAAoE,IAA7BtB,EAAAuH,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAC/E,MAAMvG,EAAevE,KAAKqE,kBAAkBC,EAAQO,GAC9CuP,EAAapU,KAAKS,IAAI,aAAc,IAC1C,IAAIuF,EAAYoO,EAGhB,MAAMzK,EAAa3J,KAAKS,IAAI,cACxBkJ,GAAchJ,EAAAA,GAAcyT,KAC/BpO,EAAO,GACPe,EAAAA,GAAYqN,GAAazJ,IACxB,GAAIhK,EAAAA,GAAegK,GAAM,CACxB,MAAM0J,EAAc,CAAC,EACrB5P,EAAAA,GAAakF,GAAY,CAACN,EAAO1E,KACN,MAAtBgF,EAAYN,KACfgL,EAAO9Q,EAAeoB,EAAQ0E,GAASrJ,KAAKuJ,uBAAuBF,EAAOsB,EAAItB,GAAQ9E,G,IAGxFyB,EAAK5B,KAAKiQ,E,MAKb,MAAMC,EAAa,CAClBvS,KAAM,gBACNuC,OAAQA,EACRC,QAASA,EACTyB,KAAMA,EACNhE,OAAQhC,MAKT,OAFAA,KAAKwB,OAAOM,SAAS,gBAAiBwS,GAE/BA,EAAMtO,IACd,CAKO4D,aAAAA,CAAc5D,GACpB,IAAI2D,EAAa3J,KAAKS,IAAI,cAa1B,OAZKkJ,IACJA,EAAa,CAAC,EACVhJ,EAAAA,GAAcqF,IAASA,EAAKkE,QAC/BnD,EAAAA,GAAYf,GAAO2E,IAClBlG,EAAAA,GAAakG,GAAK,CAACjG,EAAK6P,KACC,MAApB5K,EAAYjF,KACfiF,EAAYjF,GAAOA,E,GAEnB,KAIEiF,CACR,CAKOsB,iBAAAA,CAAkBuJ,EAAgB7P,EAAYJ,GACpD,OAAgB,MAATI,EAAgBA,EAAQJ,EAAQb,OACxC,CAKO6F,sBAAAA,CAAuBF,EAAY1E,EAAYJ,EAAgCkQ,GAGrF,GAAoB,iBAAT9P,EACV,GAAI3E,KAAK0U,YAAYrL,GACpB1E,EAAQ,IAAIgQ,KAAKhQ,OAEb,IAAI3E,KAAK4U,eAAevL,IAAUrJ,KAAKS,IAAI,gBAC/C,OAAOT,KAAKC,MAAM4U,gBAAgBvQ,OAAOK,EAAO3E,KAAKS,IAAI,iBAErD,GAAIT,KAAK8U,gBAAgBzL,GAC7B,OAAOrJ,KAAKC,MAAM8U,kBAAkBzQ,OAAOK,EAAO3E,KAAKS,IAAI,kBAAmBT,KAAKS,IAAI,gB,CAkBzF,OAdIkE,aAAiBgQ,OAChBpQ,EAAQyQ,cACXrQ,EAAQA,EAAMsQ,UAEN1Q,EAAQ2Q,UACXT,IACJ9P,EAAQA,EAAMwQ,kBAIfxQ,EAAQ3E,KAAKC,MAAMmV,cAAc9Q,OAAOK,EAAO3E,KAAKS,IAAI,gBAInDkE,CACR,CAKO+P,WAAAA,CAAYrL,GAClB,OAAmD,IAA5CrJ,KAAKS,IAAI,cAAegK,QAAQpB,EACxC,CAKOuL,cAAAA,CAAevL,GACrB,OAAsD,IAA/CrJ,KAAKS,IAAI,iBAAkBgK,QAAQpB,EAC3C,CAKOyL,eAAAA,CAAgBzL,GACtB,OAAuD,IAAhDrJ,KAAKS,IAAI,kBAAmBgK,QAAQpB,EAC5C,CAKOnD,cAAAA,CAAenE,GACrB,IAAIsT,EAAc,GAClB,OAAQtT,GACP,IAAK,MACJsT,EAAc,SAAWtT,EACzB,MACD,IAAK,MACJsT,EAAc,aACd,MACD,IAAK,MACJA,EAAc,WACd,MACD,IAAK,OACJA,EAAc,mBACd,MACD,IAAK,OACJA,EAAc,YACd,MACD,IAAK,MACL,IAAK,UACJA,EAAc,kBACd,MACD,IAAK,OACJA,EAAc,oEACd,MACD,QACCA,EAAc,2BAGhB,OAAOA,CACR,CAEUnN,mBAAAA,GACT,IAAIpC,EAASkJ,SAASsG,cAAc,UAIpC,OAHAxP,EAAOyP,MAAMnO,SAAW,QACxBtB,EAAOyP,MAAMvN,IAAM,WACnBhI,KAAKC,MAAMsI,IAAIiN,YAAY1P,GACpBA,CACR,CAEUK,aAAAA,CAAcL,GACvB9F,KAAKC,MAAMsI,IAAIkN,YAAY3P,EAC5B,CAMOwC,mBAAAA,CAAoBoN,GAG1B,IAAIC,EAAU,EACVC,EAAeC,iBAAiBH,EAAS,oBAAoBI,iBAAiB,oBAOlF,IAJIF,EAAaG,MAAM,4BAA8C,eAAhBH,KACpDD,EAAU,GAGI,GAAXA,EAAc,CACjB,IAAIK,EAASN,EAAQO,cAGrB,OAAID,EACIhW,KAAKsI,oBAAoB0N,GAGzBE,EAAAA,GAAMC,QAAQ,S,CAItB,OAAOD,EAAAA,GAAME,QAAQR,EAGvB,CAUO1Q,UAAAA,CAAWF,EAAaD,GAAyC,IAAvBpB,EAAAmH,UAAAZ,OAAA,QAAA9J,IAAA0K,UAAA,IAAAA,UAAA,GAEhD,GAAI9K,KAAKqW,sBAAuB,CAM/B,IAAIC,EAAOtH,SAASsG,cAAc,KAClCgB,EAAK1R,SAAWG,EAChBiK,SAASwB,KAAKgF,YAAYc,GAG1B,IAAIC,EAAQvR,EAAIwR,MAAM,KAClBnB,EAAckB,EAAOE,QAASvL,QAAQ,QAAS,IAInD,GAFAlG,EAAM0R,mBAAmBH,EAAMjL,KAAK,KAAKJ,QAAQ,UAAW,MAEgC,GAAxF,CAAC,gBAAiB,mBAAoB,WAAY,aAAaT,QAAQ4K,GAStE,CACA1R,IACHqB,EAAM,SAAWA,GAElB,IAAI2R,EAAO,IAAIC,KAAK,CAAC5R,GAAM,CAAEjD,KAAMsT,IAC/BwB,EAAM9F,OAAO+F,IAAIC,gBAAgBJ,GAQrC,OAPAL,EAAKpH,KAAO2H,EACZP,EAAK1R,SAAWG,EAChBuR,EAAKU,QACLC,YAAW,KACVjI,SAASwB,KAAKiF,YAAYa,GAC1BvF,OAAO+F,IAAII,gBAAgBL,EAAI,GAC7B,MACI,C,CArBP,IAEC7R,EADcmS,KAAKnS,E,CAElB,MAAOoS,GAER,OAAO,C,CAoBT,IAAIC,EAAQ,IAAIC,MAAMtS,EAAIkF,QAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAInF,EAAIkF,SAAUC,EAAG,CACpC,IAAIoN,EAAWvS,EAAI+G,WAAW5B,GAC9BkN,EAAMlN,GAAKoN,C,CAGR5T,IACH0T,EAAQ,CAAC,IAAM,IAAM,KAAM3U,OAAO2U,IAEnC,IAAIV,EAAO,IAAIC,KAAK,CAAC,IAAIY,WAAWH,IAAS,CAAEtV,KAAMsT,IACjDwB,EAAM9F,OAAO+F,IAAIC,gBAAgBJ,GACrCL,EAAKpH,KAAO2H,EACZP,EAAK1R,SAAWG,EAChBiK,SAASwB,KAAKgF,YAAYc,GAC1BA,EAAKU,QACLhI,SAASwB,KAAKiF,YAAYa,GAC1BW,YAAW,KACVlG,OAAO+F,IAAII,gBAAgBL,EAAI,GAC7B,I,MAIC,GAAI7W,KAAKyX,sBAAuB,CAMpC,IAAInB,EAAOtH,SAASsG,cAAc,KAClCgB,EAAK1R,SAAWG,EAChBuR,EAAKpH,KAAOlK,EACZgK,SAASwB,KAAKgF,YAAYc,GAC1BA,EAAKU,QACLhI,SAASwB,KAAKiF,YAAYa,E,MAU1BvF,OAAO9B,SAASC,KAAOlK,EAGxB,OAAO,CAER,CAKO0S,eAAAA,GACN,OAAO1X,KAAKyX,qBACb,CAKOA,mBAAAA,GAGN,MADgC,qBADxBzI,SAASsG,cAAc,KACZ1Q,QAEpB,CAKOyR,mBAAAA,GACN,OAAsB,MAAftF,OAAO6F,IACf,CAiBOxR,aAAAA,CAAcY,EAAcnB,EAAwC8J,GAC1E,MAAMpK,EAAkCvE,KAAKqE,kBAAkB,QAASQ,GAC7C,OAAvBN,EAAQnB,YACXpD,KAAK2X,aAAa3R,EAAMzB,EAASoK,GAGjC3O,KAAK4X,gBAAgB5R,EAAMzB,EAASoK,EAGtC,CAEUgJ,YAAAA,CAAa3R,EAAcnB,EAAwC8J,GAE5E,IAoBIkJ,EApBA1U,EADoCnD,KAAKqE,kBAAkB,QAASQ,GACpD1B,OAAS,IAGzB2U,EAAS9I,SAAS+I,gBAAgBC,WAAahJ,SAASwB,KAAKwH,UAG7DC,EAAO,IAAIC,EAAAA,GAAUC,EAAAA,GAAqBnY,KAAKC,MAAMsI,KAAM,WAAY,CAC1E,QAAW,OACX,SAAY,QACZ,WAAc,SACd,QAAW,IACX,SAAY,6CACVvI,KAAKC,MAAMmY,OAEVC,EAAQ,IAAIH,EAAAA,GAAUC,EAAAA,GAAqBnY,KAAKC,MAAMsI,KAAM,OAAQ,CACvE,QAAW,IACX,OAAU,KACRvI,KAAKC,MAAMmY,OAIVzJ,GAASK,UAAYA,SAASL,QACjCkJ,EAAgB7I,SAASL,MACzBK,SAASL,MAAQA,GAIlB,IAAI2J,EAAM,IAAIhX,MACdgX,EAAIlX,IAAM4E,EACVsS,EAAI/C,MAAMgD,SAAW,OACrBD,EAAI/C,MAAMiD,QAAU,QACpBF,EAAI/C,MAAMnO,SAAW,WACrBkR,EAAI/C,MAAMkD,WAAa,UACvBH,EAAI/C,MAAMI,QAAU,IACpB2C,EAAI/C,MAAMmD,SAAW,OACrB1J,SAASwB,KAAKgF,YAAY8C,GAG1BtY,KAAKiX,YAAW,KACTlG,OAAQ5L,OAAO,GACnB,IAGS,mBAAmBwT,KAAKC,UAAUC,aAAqB9H,OAAQ+H,UAC7D3V,EAAQ,IACrBA,EAAQ,IAEAA,EAAQ,MAChBA,EAAQ,KAITnD,KAAKiX,YAAW,KAGfjI,SAASwB,KAAKiF,YAAY6C,GAG1BL,EAAKc,UACLV,EAAMU,UAGFlB,IACH7I,SAASL,MAAQK,SAASL,OAI3BK,SAAS+I,gBAAgBC,UAAYhJ,SAASwB,KAAKwH,UAAYF,CAAM,GAEnE3U,GAAS,IAEb,CAEUyU,eAAAA,CAAgB5R,EAAcnB,EAAwC8J,GAE/E,IAAIxL,EADoCnD,KAAKqE,kBAAkB,QAASQ,GACpD1B,OAAS,IAG7B,MAAM6V,EAAShK,SAASsG,cAAc,UACtC0D,EAAOzD,MAAMkD,WAAa,SAC1BzJ,SAASwB,KAAKgF,YAAYwD,GAG1BA,EAAOC,cAAejK,SAASkK,OAC/BF,EAAOC,cAAejK,SAASmK,QAG/B,IAAIb,EAAM,IAAIhX,MACdgX,EAAIlX,IAAM4E,EACVsS,EAAI/C,MAAMgD,SAAW,OACrBD,EAAI/C,MAAM3U,OAAS,OACf+N,IACHqK,EAAOC,cAAejK,SAASL,MAAQA,GAExCqK,EAAOC,cAAejK,SAASwB,KAAKgF,YAAY8C,GAE1CU,EAAQI,KAAO,WACpBJ,EAAOC,cAAejK,SAASwB,KAAKgF,YAAY8C,EACjD,EAGAtY,KAAKiX,YAAW,KACf,IACY+B,EAAQC,cAAcjK,SAASqK,YAAY,SAAS,EAAO,OAC/DL,EAAQC,cAAc9T,O,CAE5B,MAAOiS,GACF4B,EAAQC,cAAc9T,O,IAE3BhC,GAAS,IAGA,mBAAmBwV,KAAKC,UAAUC,aAAqB9H,OAAQ+H,UAC7D3V,EAAQ,IACrBA,EAAQ,IAEAA,EAAQ,MAChBA,EAAQ,KAITnD,KAAKiX,YAAW,KAGfjI,SAASwB,KAAKiF,YAAYuD,EAAO,GAE/B7V,EAAQ,IAAM,IAElB,CAOOmW,gBAAAA,GACN,MAAMC,EAA0B,GAC1BhK,EAAUvP,KAAKuP,UACfmI,EAAkB1X,KAAK0X,kBAS7B,OARA3Q,EAAAA,GAAgC,CAAC,MAAO,MAAO,SAAU,MAAO,OAAQ,MAAO,OAAQ,OAAQ,UAAW,UAAWzC,KAE3F,IADTtE,KAAKqE,kBAAkBC,GAC3BkV,YACwD,GAA/D,CAAC,OAAQ,MAAO,OAAQ,OAAQ,WAAW/O,QAAQnG,IAAkBiL,GAAWmI,IACnF6B,EAAInV,KAAuBE,E,IAIvBiV,CACR,CAOOE,oBAAAA,GACN,MAAMF,EAAwB,CAAC,QAAS,SAIxC,OAHIvZ,KAAK0X,mBAAqB1X,KAAKuP,WAClCgK,EAAInV,KAAK,QAEHmV,CACR,EAltDAzZ,OAAAC,eAAA8C,EAAA,a,gDAAkC,cAClC/C,OAAAC,eAAA8C,EAAA,c,gDAA0CC,EAAAA,GAAOL,WAAWC,OAAO,CAACG,EAAUF,c,cC3nB/E,IAAI+W,ECsIE,MAAOC,UAAsB7W,EAAAA,GAAnCjD,WAAAA,G,oBAQCC,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,sB,gDAA0C,KAC1CD,OAAAC,eAAA,uB,gDAA2C,KAE3CD,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,oB,yDAEAD,OAAAC,eAAA,e,iDAAyB,IAEzBD,OAAAC,eAAA,gB,iDAA2B,GAia5B,CA/ZWgD,SAAAA,GACTzC,MAAMyC,YACN/C,KAAKgD,eAAe,YAAahD,KAAKC,MAAM2Z,QAC5C5Z,KAAKgD,eAAe,QAAS,SAC7BhD,KAAKgD,eAAe,SAAU,OAC9BhD,KAAKgD,eAAe,iBAAiB,GACrChD,KAAKgD,eAAe,aAAa,GACjChD,KAAKgD,eAAe,kBAAkB,GACtChD,KAAKgD,eAAe,QAAS,CAAC,CAC7BjB,KAAM,YACN8X,MAAO7Z,KAAK0M,GAAG,WACb,CACF3K,KAAM,SACNuC,OAAQ,MACRwV,WAAY,QACZD,MAAO7Z,KAAK0M,GAAG,OACfqN,SAAU/Z,KAAK0M,GAAG,UAChB,CACF3K,KAAM,SACNuC,OAAQ,MACRwV,WAAY,QACZD,MAAO7Z,KAAK0M,GAAG,OACfqN,SAAU/Z,KAAK0M,GAAG,UAChB,CACF3K,KAAM,SACNuC,OAAQ,MACRwV,WAAY,QACZD,MAAO7Z,KAAK0M,GAAG,OACfqN,SAAU/Z,KAAK0M,GAAG,UAChB,CACF3K,KAAM,YACN+X,WAAY,QAEV,CACF/X,KAAM,SACNuC,OAAQ,OACRwV,WAAY,OACZD,MAAO7Z,KAAK0M,GAAG,QACfqN,SAAU/Z,KAAK0M,GAAG,SAChB,CACF3K,KAAM,SACNuC,OAAQ,MACRwV,WAAY,OACZD,MAAO7Z,KAAK0M,GAAG,OACfqN,SAAU/Z,KAAK0M,GAAG,SAChB,CACF3K,KAAM,SACNuC,OAAQ,OACRwV,WAAY,OACZD,MAAO7Z,KAAK0M,GAAG,QACfqN,SAAU/Z,KAAK0M,GAAG,SAChB,CACF3K,KAAM,SACNuC,OAAQ,UACRwV,WAAY,OACZD,MAAO7Z,KAAK0M,GAAG,OACfqN,SAAU/Z,KAAK0M,GAAG,SAChB,CACF3K,KAAM,SACNuC,OAAQ,OACRwV,WAAY,OACZD,MAAO7Z,KAAK0M,GAAG,QACfqN,SAAU/Z,KAAK0M,GAAG,SAChB,CACF3K,KAAM,aACJ,CACFA,KAAM,SACNuC,OAAQ,QACRwV,WAAY,QACZD,MAAO7Z,KAAK0M,GAAG,YAGhB,MAAMsN,EAAchL,SAASsG,cAAc,OAC3CtV,KAAKia,aAAeD,EACpBha,KAAKka,WAAW,cAAela,KAAKia,cAEpC,MAAME,EAAcnL,SAASsG,cAAc,KAC3CtV,KAAKoa,aAAeD,EAEpBna,KAAKqa,aAAerL,SAASsG,cAAc,MAC3CtV,KAAKqa,aAAaC,aAAa,OAAQ,QACvCta,KAAKka,WAAW,cAAela,KAAKqa,cACpCra,KAAKua,mBAELJ,EAAYK,UAAY,8LACxBL,EAAYG,aAAa,WAAYta,KAAKC,MAAMwa,SAASC,YACzDP,EAAYG,aAAa,aAActa,KAAK0M,GAAG,UAAY,KAAO1M,KAAK0M,GAAG,wBAC1EyN,EAAYG,aAAa,OAAQ,UAE7BnC,EAAAA,GAAgB,mBACnBnY,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwBnJ,SAAU,WAAY2L,IAClE,MAAMC,EAAWzC,EAAAA,EAAmBwC,GACpC,GAAI3L,SAAS6L,eAAiB7a,KAAKoa,cAAgBpa,KAAK8a,OACvD,GAAgB,UAAZF,EAEH5a,KAAKmZ,aAED,GAAgB,SAAZyB,EAEJ5a,KAAK+a,YACR/a,KAAKgb,aAAahb,KAAK+a,aAGvB/a,KAAKib,cAGF,GAAgB,WAAZL,GAAqC,aAAZA,EAAyB,CAC1D,MAAM7P,EAAQ/K,KAAKS,IAAI,QAAS,IAChC,IAAIya,EAAqBnQ,EAAON,QAAQzK,KAAK+a,aACnB,OAAtB/a,KAAKS,IAAI,YAAuC,GAAjBya,IAClCA,EAAenQ,EAAMb,QAEtB,MAAMiR,EAAkB,WAAZP,GAAyB,EAAI,EACzC,IACIQ,EADAC,EAAWH,EAAeC,EAE9B,GACKE,EAAW,EACdA,EAAWtQ,EAAMb,OAAS,EAElBmR,EAAYtQ,EAAMb,OAAS,IACnCmR,EAAW,GAEgB,aAAxBtQ,EAAMsQ,GAAUtZ,KACnBsZ,GAAYF,EAGZC,EAAUrQ,EAAMsQ,UAERD,GAENA,GACHpb,KAAKsb,iBAAiBF,E,MAO3Bpb,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwBgC,EAAa,SAAUQ,IACnEA,EAAGY,2BACHvb,KAAKib,QAAQ,KAGdjB,EAAYxE,YAAYxV,KAAKoa,cAC7BJ,EAAYxE,YAAYxV,KAAKqa,cAE7B,MAAMmB,EAAYxb,KAAKS,IAAI,YAAaT,KAAKC,MAAM2Z,QAEnD4B,EAAUhG,YAAYxV,KAAKia,cAE3Bja,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwB6B,EAAa7B,EAAAA,GAAwB,gBAAiBsD,IAClGzb,KAAK0b,SAAU,EACX1b,KAAKS,IAAI,oBACZT,KAAKC,MAAMC,UAAUyb,qBAAsB,E,KAI7C3b,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwB6B,EAAa7B,EAAAA,GAAwB,eAAgBsD,IAC7Fzb,KAAKS,IAAI,oBAAsBT,KAAK8a,QAAU9a,KAAK0b,WACtD1b,KAAKC,MAAMC,UAAUyb,qBAAsB,GAE5C3b,KAAK0b,SAAU,CAAK,KAGrB1b,KAAKmE,WAAWC,KAAK,IAAIwX,EAAAA,IAAS,KAC7B5b,KAAKia,cACRuB,EAAU/F,YAAYzV,KAAKia,a,KAI7Bja,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwBnJ,SAAU,SAAUyM,IAC5Dzb,KAAK8a,SAAW9a,KAAK0b,SACxB1b,KAAKmZ,O,KAIPnZ,KAAK6b,iBAEL7b,KAAKC,MAAM8D,YAAY/D,MAEvBA,KAAKwB,OAAOM,SAAS,cAAe,CACnCC,KAAM,cACNC,OAAQhC,MAEV,CAEO8b,aAAAA,GAgBN,GAfAxb,MAAMwb,gBAE4B,GAA9B9b,KAAK+b,cAAe7R,QACvBlK,KAAKgc,cAGFhc,KAAKO,QAAQ,mBACZP,KAAKS,IAAI,iBACZT,KAAK6b,iBAEG7b,KAAKic,cACbjc,KAAKic,aAAalD,WAIhB/Y,KAAKO,QAAQ,aAAc,CACZP,KAAKS,IAAI,cAE1BT,KAAKgc,a,CAQP,IAJIhc,KAAKO,QAAQ,UAAYP,KAAKO,QAAQ,YACzCP,KAAKua,mBAGFva,KAAKO,QAAQ,aAAc,CAC9B,MAAMib,EAAYxb,KAAKS,IAAI,aACvB+a,GACHA,EAAUhG,YAAYxV,KAAKia,a,CAG9B,CAEUiC,QAAAA,GACT5b,MAAM4b,WAENnV,EAAAA,GAAY/G,KAAKmc,gBAAiBC,IACjCA,EAAErD,SAAS,GAEb,CAEQwB,gBAAAA,GACP,MAAM1W,EAAQ7D,KAAKS,IAAI,QAAS,SAC1B4b,EAASrc,KAAKS,IAAI,SAAU,OAC5B6b,EAAStc,KAAK8a,OAAS,yBAA2B,2BAExD9a,KAAKia,aAActX,UAAY,qDAAuDkB,EAAQ,wBAA0BwY,EAAS,IAAMC,EACvItc,KAAKoa,aAAczX,UAAY,qDAAuDkB,EAAQ,wBAA0BwY,EACxHrc,KAAKqa,aAAc1X,UAAY,qDAAuDkB,EAAQ,wBAA0BwY,CACzH,CAKOL,WAAAA,GACN,MAAMO,EAAYvc,KAAKS,IAAI,aAC3B,IAAK8b,EACJ,OAEDvc,KAAKqa,aAAcG,UAAY,GAC/Bxa,KAAK+b,cAAgB,GACrB,MAAMhR,EAAQ/K,KAAKS,IAAI,QAAS,IAC1B6Y,EAAmBiD,EAAUjD,mBAC7BG,EAAuB8C,EAAU9C,uBAEvC1S,EAAAA,GAAY/G,KAAKmc,gBAAiBC,IACjCA,EAAErD,SAAS,IAGZ/Y,KAAKmc,eAAejS,OAAS,EAE7BnD,EAAAA,GAAYgE,GAAQzB,IAEnB,GAAIA,EAAKhF,SAAoD,GAA1CgV,EAAiB7O,QAAQnB,EAAKhF,QAChD,OAGD,GAAIgF,EAAKwQ,aAAgE,GAAlDL,EAAqBhP,QAAQnB,EAAKwQ,YACxD,OAGD,MAAM0C,EAAKxN,SAASsG,cAAc,MAClCkH,EAAGlC,aAAa,OAAQ,YAExBkC,EAAG7Z,UAAY,oDAAsD2G,EAAKvH,KACtEuH,EAAKhF,SACRkY,EAAG7Z,WAAa,wBAA0B2G,EAAKhF,QAGhD,MAAMgG,EAAI0E,SAASsG,cAAc,KAEjC,IAAImH,EAAYzc,KAAK0M,GAAG,UACpBpD,EAAKuQ,QACRvP,EAAEkQ,UAAYlR,EAAKuQ,MACnB4C,GAAa,IAAMnT,EAAKuQ,OAGrBvQ,EAAKyQ,WACRzP,EAAEkQ,WAAa,yCAA6ClR,EAAKyQ,SAAW,UAC5E0C,GAAa,KAAOnT,EAAKyQ,SAAW,KAGjCzQ,EAAKoT,UACR1c,KAAKmc,eAAe/X,KAAK+T,EAAAA,GAAwB7N,EAAG,SAAUmR,IAC7DnS,EAAKoT,SAAUC,KAAKrT,EAAKsT,gBAAkB5c,KAAK,KAEjDsK,EAAEgQ,aAAa,WAAYta,KAAKC,MAAMwa,SAASC,aAEvCpR,EAAKhF,QAAUiY,IACvBvc,KAAKmc,eAAe/X,KAAK+T,EAAAA,GAAwB7N,EAAG,SAAUmR,IAC7Dzb,KAAKgb,aAAa1R,EAAK,KAExBtJ,KAAKmc,eAAe/X,KAAK+T,EAAAA,GAAwB7N,EAAG,SAAUmR,IAC7Dzb,KAAKsb,iBAAiBhS,EAAK,KAE5BtJ,KAAKmc,eAAe/X,KAAK+T,EAAAA,GAAwB7N,EAAG,QAASmR,IAC5Dzb,KAAK6c,gBAAgBvT,EAAK,KAE3BgB,EAAEgQ,aAAa,WAAYta,KAAKC,MAAMwa,SAASC,YAC/CpQ,EAAEgQ,aAAa,aAAcmC,IAG9BnT,EAAKoM,QAAUpL,EACfkS,EAAGhH,YAAYlL,GACftK,KAAKqa,aAAc7E,YAAYgH,GAC/Bxc,KAAK+b,cAAe3X,KAAKoY,EAAG,GAE9B,CAEQxB,YAAAA,CAAa1R,GACpB,MAAMiT,EAAYvc,KAAKS,IAAI,aACvBT,KAAKS,IAAI,cACZT,KAAKmZ,QAEa,SAAf7P,EAAKhF,OACRiY,EAAUpX,QAGVoX,EAAU3X,SAAS0E,EAAKhF,OAE1B,CAEQgX,gBAAAA,CAAiBhS,GACpBA,GAAQtJ,KAAK+a,cACZ/a,KAAK+a,cACR/a,KAAK+a,YAAYrF,QAAS/S,UAAY,IAEvC3C,KAAK+a,YAAczR,EACnBA,EAAKoM,QAAS/S,UAAY,2BAC1B2G,EAAKoM,QAASoH,QAEhB,CAEQD,eAAAA,CAAgBvT,GACvBA,EAAKoM,QAAS/S,UAAY,GACtB2G,GAAQtJ,KAAK+a,cAChB/a,KAAK+a,iBAAc3a,GAEpBJ,KAAKiX,YAAW,KACVjI,SAAS6L,eAAkB1C,EAAAA,GAAgBnY,KAAKS,IAAI,aAAeuO,SAAS6L,gBAChF7a,KAAKmZ,O,GAEJ,GAEJ,CAOO0C,cAAAA,GACN,MAAMkB,ED9fM,SAAUrH,EAA4BsH,GAInD,MAAMC,EAAKD,EAAKE,gBAEhB,IAAKxD,EAAO,CACX,MAAMqD,EAAW,IAAII,EAAAA,GAAc,CAElC,IAAIjF,EAAAA,GAAUxC,EAAS,qBAAsB,CAC5C,MAASuH,EAAGxc,IAAI,uBAAwBiI,QACxC,YAAa,SACXsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,uBAAwB,CAC9C,aAAc,aACd,WAAc,yBACZsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,uBAAwB,CAC9C,QAAW,QACX,OAAU,WACRsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,+BAAgC,CACtD,MAASuH,EAAGxc,IAAI,YAAaiI,QAC7B,gBAAiB,aAAeuU,EAAGxc,IAAI,uBAAwBiI,SAC7DsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,0BAA2B,CACjD,MAASuH,EAAGxc,IAAI,YAAaiI,QAC7B,YAAa,SACXsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,oDAAqD,CAC3E,OAAU,WACRsH,EAAK5E,OACR,IAAIF,EAAAA,GAAUxC,EAAS,0DAA2D,CACjF,WAAc,WACZsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,qBAAsB,CAC5C,SAAY,WACZ,UAAW,MACTsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,qBAAsB,CAC5C,MAAS,OACT,OAAU,OACV,SAAY,WACZ,OAAU,MACV,QAAW,UACX,gBAAiB,MACjB,QAAW,MACX,WAAc,6BACd,qBAAsB,KACpBsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,iGAAkG,CACxH,WAAcuH,EAAGxc,IAAI,wBAAyBiI,QAC9C,QAAW,KACTsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,0BAA2B,CACjD,KAAQuH,EAAGxc,IAAI,uBAAwBiI,SACrCsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,qBAAsB,CAC5C,QAAW,OACX,aAAc,OACd,kBAAmB,OACnB,OAAU,MACV,WAAcuH,EAAGxc,IAAI,mBAAoBiI,QACzC,QAAW,QACX,OAAU,aAAeuU,EAAGxc,IAAI,yBAA0BiI,QAC1D,gBAAiB,OACfsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,6CAA8C,CACpE,QAAW,SACTsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,qBAAsB,CAAC,EAC3CsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,uBAAwB,CAC9C,QAAW,YACTsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,4EAA6E,CACnG,WAAcuH,EAAGxc,IAAI,wBAAyBiI,SAC5CsU,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,qIAAsI,CAC5J,KAAQ,KACNsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,wIAAyI,CAC/J,MAAS,KACPsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,oIAAqI,CAC3J,IAAO,KACLsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,6IAA8I,CACpK,OAAU,KACRsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,6CAA8C,CACpE,cAAe,QACbsH,EAAK5E,OAER,IAAIF,EAAAA,GAAUxC,EAAS,8CAA+C,CACrE,eAAgB,QACdsH,EAAK5E,SASTsB,EAAQ,IAAI0D,EAAAA,IAAgB,KAC3B1D,OAAQtZ,EACR2c,EAAShE,SAAS,G,CAIpB,OAAOW,EAAM2D,WACd,CC2XmBC,CAAanF,EAAAA,GAAqBnY,KAAKC,MAAMsI,KAAMvI,KAAKC,OACzED,KAAKmE,WAAWC,KAAK2Y,GACrB/c,KAAKic,aAAec,CAKrB,CAKO7D,IAAAA,GACNlZ,KAAKiX,YAAW,KACfjX,KAAK8a,QAAS,EACV9a,KAAKS,IAAI,oBACZT,KAAKC,MAAMC,UAAUyb,qBAAsB,GAE5C3b,KAAKua,mBACLva,KAAKwB,OAAOM,SAAS,aAAc,CAClCC,KAAM,aACNC,OAAQhC,MACP,GACA,EACJ,CAKOmZ,KAAAA,GACNnZ,KAAK8a,QAAS,EACV9a,KAAKS,IAAI,oBACZT,KAAKC,MAAMC,UAAUyb,qBAAsB,GAE5CxD,EAAAA,KACAnY,KAAKua,mBACLva,KAAKwB,OAAOM,SAAS,aAAc,CAClCC,KAAM,aACNC,OAAQhC,MAEV,CAKOib,MAAAA,GACFjb,KAAK8a,OACR9a,KAAKmZ,QAGLnZ,KAAKkZ,MAEP,EAhbApZ,OAAAC,eAAA4Z,EAAA,a,gDAAkC,kBAClC7Z,OAAAC,eAAA4Z,EAAA,c,gDAA0C7W,EAAAA,GAAOL,WAAWC,OAAO,CAACiX,EAAchX,c,kCCxD7E,MAAO4a,UAAkBza,EAAAA,GAA/BjD,WAAAA,G,oBAQCC,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,iB,yDACAD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,oB,iDAAgC,GA2KjC,CAtKWgD,SAAAA,GACTzC,MAAMyC,YACN/C,KAAKgD,eAAe,QAAS,KAC7BhD,KAAKC,MAAM8D,YAAY/D,KACxB,CAEOgE,cAAAA,GACN1D,MAAM0D,iBAEFhE,KAAKO,QAAQ,gBAChBP,KAAKwd,cAEP,CAMatE,IAAAA,G,+CAGZlZ,KAAKiX,YAAW,KACfjX,KAAKC,MAAMC,UAAUyb,qBAAsB,CAAK,GAC9C,KAEH,MAAM8B,QAAmBzd,KAAK0d,gBAC9BD,EAAWE,OACX3d,KAAK4d,SAAUC,KAAK,GAChB7d,KAAKS,IAAI,gBACZgd,EAAWK,aAAa9d,KAAKS,IAAI,eAEnC,G,CAEa+c,YAAAA,G,+CACZ,MAAMC,QAAmBzd,KAAK0d,gBAC1B1d,KAAKS,IAAI,iBACZT,KAAK+d,aAAc,EACnBN,EAAWO,YAAYhe,KAAKS,IAAI,gBAElC,G,CAKa0Y,KAAAA,G,sDAEanZ,KAAK0d,iBAClBvE,QACZnZ,KAAKie,iBAAc7d,CACpB,G,CAMa8d,MAAAA,G,+CACZle,KAAKC,MAAMC,UAAUyb,qBAAsB,EAC3C,MAAM8B,QAAmBzd,KAAK0d,gBAC9B1d,KAAK4d,SAAUD,KAAK,GACpBF,EAAYtE,QACZnZ,KAAKie,iBAAc7d,CAEpB,G,CAKOS,KAAAA,GACNb,KAAKkE,IAAI,mBAAe9D,GACpBJ,KAAK4d,UACR5d,KAAK4d,SAAS1Z,IAAI,MAAO,GAE3B,CAEa+W,MAAAA,G,sDACajb,KAAK0d,iBACf5C,OACd9a,KAAKmZ,QAGLnZ,KAAKkZ,MAEP,G,CAEOH,OAAAA,GACNzY,MAAMyY,UACF/Y,KAAKie,aAAeje,KAAKie,YAAYnD,QACxC9a,KAAKie,YAAY9E,OAEnB,CAEcgF,UAAAA,G,+CAkBb,GAfKne,KAAKoe,aACTpe,KAAKoe,WAAape,KAAKC,MAAMub,UAAU6C,SAASja,KAAKka,EAAAA,EAAUC,IAAIve,KAAKC,MAAO,CAC9EO,MAAOge,EAAAA,GACP5d,OAAQ4d,EAAAA,GACRC,MAAOze,KAAKS,IAAI,SAChBie,qBAAqB,KAGtB1e,KAAK4d,SAAW5d,KAAKoe,WAAWC,SAASja,KAAKzE,EAAAA,EAAQ4e,IAAIve,KAAKC,MAAO,CACrEO,MAAOge,EAAAA,GACP5d,OAAQ4d,EAAAA,QAKLxe,KAAKie,YAAa,CACtB,MAAMU,QAAkB3e,KAAK4e,eACvB9Y,EAAS9F,KAAKoe,WAAW1d,SAASqF,YAClC0X,EAAa,IAAIkB,EAAUE,WAAW/Y,GAE5C2X,EAAWqB,gBAAgBC,aAAe,QAC1CtB,EAAWqB,gBAAgBE,OAAS,GACpCvB,EAAWwB,WAAanZ,EAAOmQ,cAG/B,MAAMiJ,EAAiBlf,KAAKS,IAAI,iBAAkB,CAAC,GACnDgE,EAAAA,GAAaya,GAAgB,CAACxa,EAAKC,KAClC8Y,EAAW0B,SAASza,GAAOC,CAAK,IAGjC,MAAMya,EAAsBpf,KAAKS,IAAI,sBAAuB,CAAC,GAC7DgE,EAAAA,GAAa2a,GAAqB,CAAC1a,EAAKC,KACvC8Y,EAAWqB,gBAAgBpa,GAAOC,CAAK,IAGxC3E,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwBsF,EAAY,SAAS,KACjEzd,KAAKC,MAAMC,UAAUyb,qBAAsB,EAC3C3b,KAAK4d,SAAUD,KAAK,GACpB3d,KAAKie,iBAAc7d,CAAS,KAG7BJ,KAAKmE,WAAWC,KAAK+T,EAAAA,GAAwBsF,EAAY,UAAWnJ,IACnDtU,KAAK4d,SACb1Z,IAAI,MAAOoQ,EAAM+K,SACpBrf,KAAK+d,aACT/d,KAAKkE,IAAI,cAAeoQ,EAAMgL,OAE/Btf,KAAK+d,aAAc,CAAK,KAGzB/d,KAAKie,YAAcR,C,CAErB,G,CAKcmB,YAAAA,G,+CACb,aAAa,6BACd,G,CAQalB,aAAAA,G,+CAEZ,aADM1d,KAAKme,aACJne,KAAKie,WACb,G,EAnLAne,OAAAC,eAAAwd,EAAA,a,gDAAkC,cAClCzd,OAAAC,eAAAwd,EAAA,c,gDAA0Cza,EAAAA,GAAOL,WAAWC,OAAO,CAAC6a,EAAU5a,a","sources":["../node_modules/src/.internal/core/render/Picture.ts","../node_modules/src/.internal/plugins/exporting/Exporting.ts","../node_modules/src/.internal/plugins/exporting/ExportingCSS.ts","../node_modules/src/.internal/plugins/exporting/ExportingMenu.ts","../node_modules/src/.internal/plugins/exporting/Annotator.ts"],"sourcesContent":["import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteEvents, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\nexport interface IPictureEvents extends ISpriteEvents {\n\n\t/**\n\t * Invoked when picture is loaded.\n\t */\n\tloaded: {};\n\n\t/**\n\t * Invoked when picture load error happens.\n\t */\n\tloaderror: {};\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\tdeclare public _events: IPictureEvents;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\tconst events = this.events;\n\t\t\t\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaded\")) {\n\t\t\t\t\tevents.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaderror\")) {\n\t\t\t\t\tevents.dispatch(\"loaderror\", { type: \"loaderror\", target: this });\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n","import type { ExportingMenu } from \"./ExportingMenu\"\nimport type { TimeUnit } from \"../../core/util/Time\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { Color } from \"../../core/util/Color\";\nimport { Root } from \"../../core/Root\"\nimport { StyleRule } from \"../../core/util/Utils\"\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IFile {\n\tpath: string;\n\tbytes: string;\n}\n\nexport interface IFont {\n\tname: string;\n\tnormal: IFile;\n\tbold?: IFile;\n\titalics?: IFile;\n\tbolditalics?: IFile;\n}\n\n/**\n * This is used to cache the pdfmake loading.\n *\n * @ignore\n */\nlet pdfmakePromise: Promise<any>;\n\n/**\n * Loads pdfmake dynamic module\n *\n * This is an asynchronous function. Check the description of `getImage()`\n * for description and example usage.\n *\n * @ignore\n */\nasync function _pdfmake(): Promise<any> {\n\tlet a = await Promise.all([\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"./pdfmake/vfs_fonts\")\n\t]);\n\n\tlet pdfmake = a[0].default;\n\tlet vfs_fonts = a[1].default;\n\tconst global = <any>window;\n\tglobal.pdfMake = global.pdfMake || {};\n\tglobal.pdfMake.vfs = vfs_fonts;\n\tpdfmake.vfs = vfs_fonts;\n\treturn pdfmake;\n}\n\nexport type ExportingTypes = \"image\" | \"data\" | \"print\";\nexport type ExportingFormats = \"png\" | \"jpg\" | \"canvas\" | \"pdf\" | \"xlsx\" | \"csv\" | \"json\" | \"html\" | \"pdfdata\" | \"print\";\nexport type ExportingImageFormats = \"png\" | \"jpg\";\n\nexport interface IExportingImageSource {\n\n\t/**\n\t * A root object of an extra chart to add in export.\n\t */\n\tsource: Root;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Position to place extra image in releation to the main chart.\n\t *\n\t * @default \"bottom\"\n\t */\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\n\n\t/**\n\t * Crop extra image if it's larger than the main chart.\n\t */\n\tcrop?: boolean;\n\n}\n\nexport interface IExportingSettings extends IEntitySettings {\n\n\t/**\n\t * A reference to [[ExportingMenu]] object.\n\t */\n\tmenu?: ExportingMenu;\n\n\t/**\n\t * Export will try to determine background color based on the DOM styles.\n\t *\n\t * You can use this setting to explicitly specify background color for\n\t * exported images.\n\t */\n\tbackgroundColor?: Color;\n\n\t/**\n\t * Opacity of the exported image background.\n\t *\n\t * * 0 - fully transparent.\n\t * * 1 - fully opaque (default).\n\t *\n\t * NOTE: some image formats like JPEG do not support transparency.\n\t *\n\t * @since 5.2.34\n\t */\n\tbackgroundOpacity?: number;\n\n\t/**\n\t * A string to prefix exported files with.\n\t *\n\t * @default \"chart\"\n\t */\n\tfilePrefix?: string;\n\n\t/**\n\t * Chart title. Used for print, PDF and Excel exports.\n\t */\n\ttitle?: string;\n\n\t/**\n\t * Charset to use for export.\n\t *\n\t * @default \"utf-8\"\n\t */\n\tcharset?: string;\n\n\t/**\n\t * Fields to include in data export.\n\t *\n\t * Key - field in data.\n\t * Value - column name.\n\t */\n\tdataFields?: { [index: string]: string },\n\n\t/**\n\t * Specifies the order of fields to export in data.\n\t */\n\tdataFieldsOrder?: string[],\n\n\t/**\n\t * Fields in data that are numeric.\n\t */\n\tnumericFields?: string[],\n\n\t/**\n\t * Use this number format on numeric values.\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions,\n\n\t/**\n\t * Fields in data that have date/time value.\n\t */\n\tdateFields?: string[],\n\n\t/**\n\t * Use this date format on date values.\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions,\n\n\t/**\n\t * Fields in data that need to be formatted as \"duration\" as per `durationFormat`.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationFields?: string[],\n\n\t/**\n\t * Format to use when formatting values in `durationFields`.\n\t *\n\t * If not set, will use `durationFormat` as set in [[DurationFormatter]] of\n\t * the root element.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationFormat?: string,\n\n\t/**\n\t * Time unit to assume duration values are in.\n\t *\n\t * If not set, will use `baseUnit` as set in [[DurationFormatter]] of\n\t * the root element.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationUnit?: TimeUnit;\n\n\t/**\n\t * Include these images or other charts in image exports.\n\t */\n\textraImages?: Array<Root | IExportingImageSource>;\n\n\t/**\n\t * Data to export.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/#Exporting_data} for more info\n\t */\n\tdataSource?: any;\n\n\t/**\n\t * PNG format options.\n\t */\n\tpngOptions?: IExportingImageOptions;\n\n\t/**\n\t * JPEG format options.\n\t */\n\tjpgOptions?: IExportingImageOptions;\n\n\t/**\n\t * Canvas format options.\n\t */\n\tcanvasOptions?: IExportingImageOptions;\n\n\t/**\n\t * PDF format options.\n\t */\n\tpdfOptions?: IExportingPDFOptions;\n\n\t/**\n\t * PDF with data table format options.\n\t */\n\tpdfdataOptions?: IExportingDataOptions;\n\n\t/**\n\t * XSLX format options.\n\t */\n\txlsxOptions?: IExportingXLSXOptions;\n\n\t/**\n\t * CSV format options.\n\t */\n\tcsvOptions?: IExportingCSVOptions;\n\n\t/**\n\t * JSON format options.\n\t */\n\tjsonOptions?: IExportingJSONOptions;\n\n\t/**\n\t * HTML format options.\n\t */\n\thtmlOptions?: IExportingHTMLOptions;\n\n\t/**\n\t * Print options.\n\t */\n\tprintOptions?: IExportingPrintOptions;\n\n}\n\nexport interface IExportingPrivate extends IEntityPrivate {\n}\n\nexport interface IExportEvent {\n\n\t/**\n\t * Format.\n\t */\n\tformat: ExportingFormats,\n\n\t/**\n\t * Format options.\n\t */\n\toptions: IExportingFormatOptions\n\n}\n\nexport interface IExportingEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when export starts.\n\t */\n\texportstarted: IExportEvent;\n\n\t/**\n\t * Invoked when export finishes.\n\t */\n\texportfinished: IExportEvent;\n\n\t/**\n\t * Invoked when download of the export starts.\n\t */\n\tdownloadstarted: IExportEvent & {\n\t\tfileName: string,\n\t};\n\n\t/**\n\t * Invoked when print starts.\n\t */\n\tprintstarted: IExportEvent;\n\n\t/**\n\t * Invoked when data finishes pre-processing for export.\n\t */\n\tdataprocessed: IExportEvent & {\n\t\tdata: any\n\t}\n\n\t/**\n\t * Invoked when XLSX export finishes preparing a workbook.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tworkbookready: IExportEvent & {\n\t\tworkbook: any,\n\t\tworkbookOptions: any,\n\t\txlsx: any\n\t}\n\n\t/**\n\t * Invoked when PDF export finishes preparing a document.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tpdfdocready: IExportEvent & {\n\t\tdoc: any\n\t}\n\n}\n\nexport interface IExportingFormatOptions {\n\n\t/**\n\t * If set to `true`, this format will not appear in [[ExportMenu]].\n\t */\n\tdisabled?: boolean;\n\n}\n\nexport interface IExportingImageOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Quality of the exported image: 0 to 1.\n\t */\n\tquality?: number;\n\n\t/**\n\t * Export images with hardware resolution (`false`), or the way they appear\n\t * on screen (`true`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Pixel_ratio} for more info\n\t * @default false\n\t */\n\tmaintainPixelRatio?: boolean;\n\n\t/**\n\t * Minimal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminWidth?: number;\n\n\t/**\n\t * Maximal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxWidth?: number;\n\n\t/**\n\t * Minimal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminHeight?: number;\n\n\t/**\n\t * Maximal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxHeight?: number;\n\n}\n\nexport interface IExportingPrintOptions extends IExportingImageOptions {\n\n\t/**\n\t * A delay in milliseconds to wait before initiating print.\n\t *\n\t * This delay is necessary to ensure DOM is prepared and repainted before\n\t * print dialog kicks in.\n\t *\n\t * @default 500\n\t */\n\tdelay?: number;\n\n\t/**\n\t * Method to use for printing.\n\t *\n\t * If one fails for your particular setup, try the other.\n\t *\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\n\t *\n\t * @default \"iframe\"\n\t */\n\tprintMethod?: \"css\" | \"iframe\";\n\n\t/**\n\t * Image format to use for printing.\n\t *\n\t * @default \"png\"\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n}\n\n/**\n * Available PDF page sizes.\n */\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\n\nexport interface IExportingPDFOptions extends IExportingImageOptions {\n\n\t/**\n\t * Include data into PDF\n\t */\n\tincludeData?: boolean;\n\n\t/**\n\t * An image format to use for embedded images in PDF.\n\t *\n\t * See `imageFormats` in [[Export_module]].\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n\t/**\n\t * Font size to use for all texts.\n\t */\n\tfontSize?: number;\n\n\t/**\n\t * Alignment of the chart image in PDF.\n\t *\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\n\t *\n\t * @default left\n\t */\n\talign?: \"left\" | \"center\" | \"middle\";\n\n\t/**\n\t * Whether to add a URL of the web page the chart has been exported from.\n\t *\n\t * @default true\n\t */\n\taddURL?: boolean;\n\n\t/**\n\t * Page size of the exported PDF.\n\t */\n\tpageSize?: pageSizes;\n\n\t/**\n\t * Page orientation.\n\t */\n\tpageOrientation?: \"landscape\" | \"portrait\";\n\n\t/**\n\t * Page margins.\n\t *\n\t * Can be one of the following:\n\t *\n\t * A single number, in which case it will act as margin setting\n\t * for all four edges of the page.\n\t *\n\t * An array of two numbers `[ horizontal, vertical ]`.\n\t *\n\t * An array of four numbers `[ left, top, right, bottom ]`.\n\t */\n\tpageMargins?: number | number[];\n\n\t/**\n\t * Font which should be used for the export.\n\t *\n\t * Default font used for PDF includes only Latin-based and Cyrilic\n\t * characters. If you are exporting text in other languages, you might need\n\t * to use some other export font.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\tfont?: IFont;\n\n\t/**\n\t * Additional optional fonts which can be used on individual elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\textraFonts?: Array<IFont>;\n\n}\n\nexport interface IExportingDataOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Replace empty values with this string.\n\t */\n\temptyAs?: string;\n\n\t/**\n\t * Use timestamps instead of formatted dates.\n\t *\n\t * @default false\n\t */\n\tuseTimestamps?: boolean;\n\n\t/**\n\t * Use client's locale when formatting dates.\n\t *\n\t * @default false\n\t */\n\tuseLocale?: boolean;\n\n\t/**\n\t * If set to `true` will pivot the able so that columns are horizontal.\n\t */\n\tpivot?: boolean;\n\n\t/**\n\t * Will add a line with column names in CSV/HTML/PDF tables.\n\t */\n\taddColumnNames?: boolean;\n\n}\n\nexport interface IExportingJSONOptions extends IExportingDataOptions {\n\n\t/**\n\t * If set to a number, each line will be indented by X spaces, maintaining\n\t * hierarchy.\n\t *\n\t * If set to a string, will use that string to indent.\n\t *\n\t * @default 2\n\t */\n\tindent?: string | number;\n\n\t/**\n\t * If set to `true` and `dataFields` are set to `true`, will rename keys in\n\t * data.\n\t *\n\t * @default true\n\t */\n\trenameFields?: boolean;\n\n}\n\nexport interface IExportingCSVOptions extends IExportingDataOptions {\n\n\t/**\n\t * Column separator.\n\t *\n\t * @default \",\"\n\t */\n\tseparator?: string;\n\n\t/**\n\t * Force all values to be included in quotes, including numeric.\n\t *\n\t * @default false\n\t */\n\tforceQuotes?: boolean;\n\n\t/**\n\t * Reverse order of the records in data.\n\t *\n\t * @default false\n\t */\n\treverse?: boolean;\n\n\t/**\n\t * Add BOM character to output file, so that it can be used with UTF-8\n\t * characters properly in Excel.\n\t *\n\t * @default false\n\t * @since 5.1.0\n\t */\n\taddBOM?: boolean;\n\n}\n\nexport interface IExportingHTMLOptions extends IExportingDataOptions {\n\n\t/**\n\t * A `class` attribute for `<table>` tag.\n\t */\n\ttableClass?: string;\n\n\t/**\n\t * A `class` attribute for `<tr>` tags.\n\t */\n\trowClass?: string;\n\n\t/**\n\t * A `class` attribute for `<th>` tags.\n\t */\n\theaderClass?: string;\n\n\t/**\n\t * A `class` attribute for `<td>` tags.\n\t */\n\tcellClass?: string;\n\n}\n\nexport interface IExportingXLSXOptions extends IExportingDataOptions {\n\t// @todo\n\t//sheets?: string[];\n}\n\n/**\n * A plugin that can be used to export chart snapshots and data.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/} for more info\n */\nexport class Exporting extends Entity {\n\tpublic static className: string = \"Exporting\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Exporting.className]);\n\n\tdeclare public _settings: IExportingSettings;\n\tdeclare public _privateSettings: IExportingPrivate;\n\tdeclare public _events: IExportingEvents;\n\n\t//public extraImages: Array<Root | IExportingImageSource> = [];\n\t//public dataSources: any[] = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"filePrefix\", \"chart\");\n\t\tthis._setRawDefault(\"charset\", \"utf-8\");\n\t\tthis._setRawDefault(\"numericFields\", []);\n\t\tthis._setRawDefault(\"dateFields\", []);\n\t\tthis._setRawDefault(\"durationFields\", []);\n\t\tthis._setRawDefault(\"extraImages\", []);\n\t\tthis._setRawDefault(\"pngOptions\", { quality: 1, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"jpgOptions\", { quality: 0.8, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"printOptions\", { quality: 1, maintainPixelRatio: false, delay: 500, printMethod: \"iframe\", imageFormat: \"png\" });\n\t\tthis._setRawDefault(\"jsonOptions\", { indent: 2, renameFields: true });\n\t\tthis._setRawDefault(\"csvOptions\", { separator: \",\", addColumnNames: true, emptyAs: \"\", addBOM: true });\n\t\tthis._setRawDefault(\"htmlOptions\", { emptyAs: \"-\", addColumnNames: true });\n\t\tthis._setRawDefault(\"xlsxOptions\", { emptyAs: \"\", addColumnNames: true });\n\t\tthis._setRawDefault(\"pdfOptions\", { fontSize: 14, imageFormat: \"png\", align: \"left\", addURL: true });\n\t\tthis._setRawDefault(\"pdfdataOptions\", { emptyAs: \"\", addColumnNames: true });\n\n\t\tthis._root.addDisposer(this);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"menu\")) {\n\t\t\tconst menu = this.get(\"menu\");\n\t\t\tif (menu) {\n\t\t\t\tmenu.set(\"exporting\", this);\n\t\t\t\tthis._disposers.push(menu);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getFormatOptions(format: ExportingFormats, options?: IExportingFormatOptions): IExportingFormatOptions {\n\t\tconst newOptions: any = $object.copy((<any>this).get(format + \"Options\", {}));\n\t\tif (options) {\n\t\t\t$object.each(options, (key, value) => {\n\t\t\t\tnewOptions[key] = value;\n\t\t\t});\n\t\t}\n\t\treturn newOptions;\n\t}\n\n\t/**\n\t * Triggers a download of the chart/data in specific format.\n\t *\n\t * @param  format         Format\n\t * @param  customOptions  Format options\n\t */\n\tpublic async download(format: ExportingFormats, customOptions?: IExportingFormatOptions) {\n\t\tconst ext = format == \"pdfdata\" ? \"pdf\" : format;\n\t\tconst fileName = this.get(\"filePrefix\", \"chart\") + \".\" + ext;\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"downloadstarted\", {\n\t\t\ttype: \"downloadstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tfileName: fileName,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(format, options);\n\t\tthis.streamFile(uri, fileName, (options && (<IExportingCSVOptions>options).addBOM));\n\t}\n\n\t/**\n\t * Triggers print of the chart.\n\t *\n\t * @param  customOptions  Print options\n\t */\n\tpublic async print(customOptions?: IExportingPrintOptions) {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tthis.events.dispatch(\"printstarted\", {\n\t\t\ttype: \"printstarted\",\n\t\t\tformat: \"print\",\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(options.imageFormat || \"png\", options);\n\t\tthis.initiatePrint(uri, options, this.get(\"title\"));\n\t}\n\n\t/**\n\t * Returns data uri of the chart/data in specific format.\n\t *\n\t * @param          format  Format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async export(format: ExportingFormats, customOptions?: IExportingFormatOptions): Promise<string> {\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"exportstarted\", {\n\t\t\ttype: \"exportstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\n\t\tlet promise: Promise<string> | string = \"\";\n\t\tswitch (format) {\n\t\t\tcase \"png\":\n\t\t\tcase \"jpg\":\n\t\t\t\tthis._root._runTickerNow();\n\t\t\t\tpromise = this.exportImage(format, options);\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tpromise = this.exportJSON(options);\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\tpromise = this.exportCSV(options);\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tpromise = this.exportHTML(options);\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\tpromise = this.exportXLSX(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\t\tthis._root._runTickerNow();\n\t\t\t\tpromise = this.exportPDF(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdfdata\":\n\t\t\t\tpromise = this.exportPDFData(options);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.events.dispatch(\"exportfinished\", {\n\t\t\ttype: \"exportfinished\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\treturn promise;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Images\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns chart image as a data:uri.\n\t *\n\t * @param   format         Image format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportImage(format: ExportingImageFormats, customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\tconst canvas = await this.getCanvas(options);\n\t\tconst data = canvas.toDataURL(this.getContentType(format), options.quality || 1);\n\t\tthis.disposeCanvas(canvas);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns canvas data.\n\t *\n\t * @param   customOptions  Image options\n\t * @return                 Promise\n\t */\n\tpublic async exportCanvas(customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"canvas\", customOptions);\n\t\tconst canvas = await this.getCanvas(options);\n\t\tconst data = canvas.toDataURL(this.getContentType(\"canvas\"), options.quality || 1);\n\t\tthis.disposeCanvas(canvas);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns a `<canvas>` element with snapshot of the chart.\n\t *\n\t * @param   options  Image options\n\t * @return           Promise\n\t */\n\tpublic async getCanvas(options: IExportingImageOptions): Promise<HTMLCanvasElement> {\n\t\tconst mainCanvas = this._root._renderer.getCanvas(this._root._rootContainer._display, options);\n\t\tconst extraImages = this.get(\"extraImages\", []);\n\n\t\t// Add other canvases\n\t\tlet middleLeft = 0;\n\t\tlet middleTop = 0;\n\t\tlet middleWidth = mainCanvas.width;\n\t\tlet middleHeight = mainCanvas.height;\n\t\tlet extraRight = 0;\n\t\tlet extraBottom = 0;\n\n\t\tconst extras: any[] = [];\n\n\t\t$array.each(extraImages, (extraRoot) => {\n\n\t\t\t// Get that extra\n\t\t\tlet extra: IExportingImageSource;\n\n\t\t\tif (extraRoot instanceof Root) {\n\t\t\t\textra = {\n\t\t\t\t\tsource: extraRoot,\n\t\t\t\t\tposition: \"bottom\"\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\textra = <IExportingImageSource>extraRoot;\n\t\t\t}\n\n\t\t\t// Set defaults\n\t\t\textra.position = extra.position || \"bottom\";\n\t\t\textra.marginTop = extra.marginTop || 0;\n\t\t\textra.marginRight = extra.marginRight || 0;\n\t\t\textra.marginBottom = extra.marginBottom || 0;\n\t\t\textra.marginLeft = extra.marginLeft || 0;\n\n\t\t\tconst extraCanvas = extra.source._renderer.getCanvas(extra.source._rootContainer._display, options);\n\n\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\tmiddleTop += extraHeight;\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\textraRight += extraWidth;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\tmiddleLeft += extraWidth;\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\textraBottom += extraHeight;\n\t\t\t}\n\n\t\t\textras.push({\n\t\t\t\tcanvas: extraCanvas,\n\t\t\t\tposition: extra.position,\n\t\t\t\tleft: extra.marginLeft,\n\t\t\t\ttop: extra.marginTop,\n\t\t\t\twidth: extraWidth,\n\t\t\t\theight: extraHeight\n\t\t\t});\n\n\t\t});\n\n\t\tconst newCanvas = this.getDisposableCanvas();\n\n\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\n\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\n\n\t\tconst ctx = newCanvas.getContext(\"2d\")!;\n\n\t\t// Get background\n\t\tconst background = this.get(\"backgroundColor\", this.findBackgroundColor(this._root.dom));\n\t\tconst backgroundOpacity = this.get(\"backgroundOpacity\", 1);\n\n\t\tif (background) {\n\t\t\tctx.fillStyle = background.toCSS(backgroundOpacity);\n\t\t\tctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\n\t\t}\n\n\t\tlet left = middleLeft;\n\t\tlet top = middleTop;\n\t\tlet right = left + middleWidth;\n\t\tlet bottom = top + middleHeight;\n\n\t\t// Radiates outwards from center\n\t\t$array.each(extras, (extra) => {\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\ttop -= extra.height;\n\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tctx.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\n\t\t\t\tright += extra.width;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tleft -= extra.width;\n\t\t\t\tctx.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\n\t\t\t\tbottom += extra.height;\n\t\t\t}\n\n\t\t\t//this.disposeCanvas(extra.canvas);\n\t\t});\n\n\t\tctx.drawImage(mainCanvas, middleLeft, middleTop);\n\n\t\treturn newCanvas;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * JSON\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a JSON file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"json\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getJSON(customOptions));\n\t}\n\n\t/**\n\t * Returns data in JSON format.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async getJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"json\", customOptions);\n\t\treturn JSON.stringify(this.getData(\"json\", customOptions, options.renameFields), (_key, value) => {\n\t\t\tif ($type.isObject(value)) {\n\t\t\t\t$object.each(value, (field, item) => {\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat(field, item, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value;\n\t\t}, options.indent);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * CSV\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a CSV file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"csv\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getCSV(customOptions));\n\t}\n\n\t/**\n\t * Returns a CSV with export data.\n\t *\n\t * @param   customOptions  CSV options\n\t * @return                 Promise\n\t */\n\tpublic async getCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"csv\", customOptions);\n\n\t\t// Init output\n\t\tlet csv = \"\";\n\n\t\t// Add rows\n\t\tlet br = \"\";\n\t\tconst data = this.getData(\"csv\", options);\n\n\t\t// Data fields\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\n\t\t\t\tbr = \"\\n\";\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\n\t\t\t\tif (options.reverse) {\n\t\t\t\t\tcsv = row + br + csv;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcsv += br + row;\n\t\t\t\t}\n\t\t\t\tbr = \"\\n\";\n\t\t\t}\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n\t\t\t}\n\t\t}\n\n\t\treturn csv;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getCSVRow(row: any, options: IExportingCSVOptions, dataFields: any, asIs: boolean = false): string {\n\n\t\t// Init\n\t\tlet separator = options.separator || \",\";\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\t$object.each(row, (key, value) => {\n\t\t\t\tdataFields[key] = value;\n\t\t\t});\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Check if we need to skip\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\n\t\t\t/*if (this.dataFields != null && this.dataFields[key] == null) {\n\t\t\t\treturn;\n\t\t\t}*/\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Cast and escape doublequotes\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/\"/g, '\"\"');\n\n\t\t\t// Enclose into double quotes\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\n\t\t\t}\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items.join(separator);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * HTML\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an HTML file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"html\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getHTML(customOptions));\n\t}\n\n\t/**\n\t * Returns an HTML with a table with export data.\n\t *\n\t * @param   customOptions  HTML options\n\t * @return                 Promise\n\t */\n\tpublic async getHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"html\", customOptions);\n\n\t\t// Init output\n\t\tlet html = \"<table>\";\n\t\tif (options.tableClass) {\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n\t\t}\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\thtml += \"\\n</tbody>\";\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n\t\t\t}\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n\t\t\t}\n\n\t\t\thtml += \"\\n</tbody>\";\n\t\t}\n\n\t\thtml += \"\\n</table>\";\n\n\t\treturn html;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getHTMLRow(row: any, options: IExportingHTMLOptions, dataFields: any, asIs: boolean = false, headerRow: boolean = false): string {\n\n\t\t// Init output\n\t\tlet html = \"\\t<tr>\";\n\t\tif (options.rowClass) {\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n\t\t}\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// th or dh?\n\t\tconst tag = headerRow ? \"th\" : \"td\";\n\n\t\t// Process each row item\n\t\tlet first = true;\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Escape HTML entities\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\n\t\t\t});\n\n\t\t\t// Which tag to use\n\t\t\tlet useTag = tag;\n\t\t\tif (options.pivot && first) {\n\t\t\t\tuseTag = \"th\";\n\t\t\t}\n\n\t\t\t// Add cell\n\t\t\tif (options.cellClass) {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\n\t\t\tfirst = false;\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\thtml += \"\\n\\t</tr>\";\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * XLSX\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an XLSX file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"xlsx\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getXLSX(customOptions));\n\t}\n\n\t/**\n\t * Returns a data:uri of XLSX data.\n\t *\n\t * @param  customOptions  Format options\n\t * @return                Promise\n\t */\n\tpublic async getXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"xlsx\", customOptions);\n\n\t\t// Load xlsx\n\t\tlet XLSX = await this.getXLSXLib();\n\n\t\t// Create workbook options\n\t\tlet wbOptions = {\n\t\t\tbookType: \"xlsx\",\n\t\t\tbookSST: false,\n\t\t\ttype: \"base64\",\n\t\t\t//dateNF: 'yyyy-mm-dd'\n\t\t};\n\n\t\t// Get sheet name\n\t\tlet sheetName = this._normalizeExcelSheetName(this.get(\"title\", this._t(\"Data\")));\n\n\t\t// Create a workbook\n\t\tlet wb = {\n\t\t\tSheetNames: <any>[sheetName],\n\t\t\tSheets: <any>{}\n\t\t};\n\n\t\t// Init worksheet data\n\t\tlet wsData: Array<any> = [];\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\twsData.push(this.getXLSXRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\twsData.push(this.getXLSXRow(dataFields, options, undefined, true));\n\t\t\t}\n\n\t\t\t// Add lines\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\twsData.push(this.getXLSXRow(data[i], options, dataFields));\n\t\t\t}\n\t\t}\n\n\t\t// Create sheet and add data\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(wsData);\n\n\t\tthis.events.dispatch(\"workbookready\", {\n\t\t\ttype: \"workbookready\",\n\t\t\tformat: \"xlsx\",\n\t\t\toptions: options,\n\t\t\tworkbook: wb,\n\t\t\tworkbookOptions: wbOptions,\n\t\t\txlsx: XLSX,\n\t\t\ttarget: this\n\t\t});\n\n\t\treturn XLSX.write(wb, wbOptions);\n\t}\n\n\tprivate _normalizeExcelSheetName(name: string): string {\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n\t\treturn name.length > 30 ? name.substr(0, 30) + \"...\" : name;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXRow(row: any, options: IExportingXLSXOptions, dataFields: any, asIs: boolean = false): any[] {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options, true);\n\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprivate async _xlsx(): Promise<any> {\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"../../bundled/xlsx\");\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXLib(): Promise<any> {\n\t\treturn this._xlsx();\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * PDF\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart image.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDF(customOptions?: IExportingPDFOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, true));\n\t}\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDFData(customOptions?: IExportingDataOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, false, true));\n\t}\n\n\t/**\n\t * Returns Base64-encoded binary data for a PDF file.\n\t * @param   customOptions  PDF options\n\t * @param   includeImage   Include chart snapshot\n\t * @param   includeData    Include data\n\t * @return                 Promise\n\t */\n\tpublic async getPDF(customOptions?: IExportingPDFOptions, includeImage: boolean = true, includeData: boolean = false): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdf\", customOptions);\n\t\tconst dataOptions: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\t\tconst orientation: \"landscape\" | \"portrait\" = options.pageOrientation || \"portrait\";\n\n\t\t// Get image\n\t\tlet image: string;\n\n\t\tconst imageSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tif (includeImage) {\n\t\t\tconst imageFormat = options.imageFormat || \"png\";\n\t\t\tconst imageOptions: any = this._getFormatOptions(imageFormat, options);\n\t\t\tconst canvas = await this.getCanvas(imageOptions);\n\t\t\timageSize.width = canvas.clientWidth;\n\t\t\timageSize.height = canvas.clientHeight;\n\t\t\timage = canvas.toDataURL(this.getContentType(imageFormat), options.quality || 1);\n\t\t\tthis.disposeCanvas(canvas);\n\t\t}\n\t\t// Load pdfmake\n\n\t\tconst pdfmake = await this.getPdfmake();\n\n\t\t// Defaults\n\t\tconst defaultMargins = [30, 30, 30, 30];\n\n\t\t// Init content for PDF\n\t\tlet doc = {\n\t\t\tpageSize: options.pageSize || \"A4\",\n\t\t\tpageOrientation: orientation,\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\n\t\t\tdefaultStyle: {\n\t\t\t\tfont: options.font ? options.font.name : undefined\n\t\t\t},\n\t\t\t//header: <any>[],\n\t\t\tcontent: <any>[]\n\t\t};\n\n\t\t// Should we add title?\n\t\tconst title = this.get(\"title\");\n\n\t\tlet extraMargin = 0;\n\n\t\tif (title) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: title,\n\t\t\t\tfontSize: options.fontSize || 14,\n\t\t\t\tbold: true,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for title\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add page URL?\n\t\tif (options.addURL) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: this._t(\"Saved from\") + \": \" + document.location.href,\n\t\t\t\tfontSize: options.fontSize,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for URL\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add image\n\t\tif (includeImage && image!) {\n\t\t\tconst fitSize = this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin, orientation);\n\t\t\tif ((imageSize.width > fitSize[0]) || (imageSize.height > fitSize[1])) {\n\t\t\t\tdoc.content.push({\n\t\t\t\t\timage: image!,\n\t\t\t\t\talignment: options.align || \"left\",\n\t\t\t\t\tfit: fitSize\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdoc.content.push({\n\t\t\t\t\timage: image!,\n\t\t\t\t\talignment: options.align || \"left\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Add data\n\t\tif ((includeData || options.includeData) && this.hasData()) {\n\t\t\tdoc.content.push({\n\t\t\t\ttable: await this.getPDFData(dataOptions),\n\t\t\t\tfontSize: options.fontSize || 14\n\t\t\t});\n\t\t}\n\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\n\t\tlet vfs: { [path: string]: string } | null = null;\n\n\t\tfunction addFont(font: IFont) {\n\t\t\tconst paths: { [path: string]: string } = {};\n\n\t\t\tpaths.normal = font.normal.path;\n\t\t\tvfs![font.normal.path] = font.normal.bytes;\n\n\t\t\tif (font.bold) {\n\t\t\t\tpaths.bold = font.bold.path;\n\t\t\t\tvfs![font.bold.path] = font.bold.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bold = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.italics) {\n\t\t\t\tpaths.italics = font.italics.path;\n\t\t\t\tvfs![font.italics.path] = font.italics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.italics = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.bolditalics) {\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\n\t\t\t\tvfs![font.bolditalics.path] = font.bolditalics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bolditalics = font.normal.path;\n\t\t\t}\n\n\t\t\tfonts![font.name] = paths;\n\t\t}\n\n\t\tif (options.font) {\n\t\t\tfonts = {};\n\t\t\tvfs = {};\n\t\t\taddFont(options.font);\n\n\t\t\tif (options.extraFonts) {\n\t\t\t\t$array.each(options.extraFonts, addFont);\n\t\t\t}\n\t\t}\n\n\t\tthis.events.dispatch(\"pdfdocready\", {\n\t\t\ttype: \"pdfdocready\",\n\t\t\tformat: \"pdf\",\n\t\t\toptions: options,\n\t\t\tdoc: doc,\n\t\t\ttarget: this\n\t\t});\n\n\t\t// Create PDF\n\t\treturn new Promise<string>((success, _error) => {\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getBase64((uri: string) => {\n\t\t\t\tsuccess(uri);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async getPDFData(customOptions?: IExportingDataOptions): Promise<any> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\n\t\t// Init output\n\t\tlet content = <any>{\n\t\t\t\"body\": <any>[]\n\t\t};\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n\t\t\t\tcontent.headerRows = 1;\n\t\t\t}\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\n\t\t\t}\n\n\t\t}\n\n\t\treturn content;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPDFDataRow(row: any, options: IExportingDataOptions, dataFields?: any, asIs: boolean = false): Array<string> {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\t\t\titem = \"\" + item;\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\t/**\n\t * Returns pdfmake instance.\n\t *\n\t * @ignore\n\t * @return Instance of pdfmake\n\t */\n\tpublic getPdfmake(): Promise<any> {\n\t\tif (pdfmakePromise === undefined) {\n\t\t\tpdfmakePromise = _pdfmake();\n\t\t}\n\n\t\treturn pdfmakePromise;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPageSizeFit(pageSize: pageSizes, margins: number | number[], extraMargin: number = 0, orientation: \"landscape\" | \"portrait\" = \"portrait\"): number[] {\n\n\t\t// Check margins\n\t\tlet newMargins = [0, 0, 0, 0];\n\t\tif ($type.isNumber(margins)) {\n\t\t\tnewMargins = [margins, margins, margins, margins];\n\t\t}\n\t\telse if (margins.length == 2) {\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\n\t\t}\n\t\telse if (margins.length == 4) {\n\t\t\tnewMargins = margins;\n\t\t}\n\n\t\t// Define available page sizes\n\t\tlet sizes = {\n\t\t\t\"4A0\": [4767.87, 6740.79],\n\t\t\t\"2A0\": [3370.39, 4767.87],\n\t\t\tA0: [2383.94, 3370.39],\n\t\t\tA1: [1683.78, 2383.94],\n\t\t\tA2: [1190.55, 1683.78],\n\t\t\tA3: [841.89, 1190.55],\n\t\t\tA4: [595.28, 841.89],\n\t\t\tA5: [419.53, 595.28],\n\t\t\tA6: [297.64, 419.53],\n\t\t\tA7: [209.76, 297.64],\n\t\t\tA8: [147.40, 209.76],\n\t\t\tA9: [104.88, 147.40],\n\t\t\tA10: [73.70, 104.88],\n\t\t\tB0: [2834.65, 4008.19],\n\t\t\tB1: [2004.09, 2834.65],\n\t\t\tB2: [1417.32, 2004.09],\n\t\t\tB3: [1000.63, 1417.32],\n\t\t\tB4: [708.66, 1000.63],\n\t\t\tB5: [498.90, 708.66],\n\t\t\tB6: [354.33, 498.90],\n\t\t\tB7: [249.45, 354.33],\n\t\t\tB8: [175.75, 249.45],\n\t\t\tB9: [124.72, 175.75],\n\t\t\tB10: [87.87, 124.72],\n\t\t\tC0: [2599.37, 3676.54],\n\t\t\tC1: [1836.85, 2599.37],\n\t\t\tC2: [1298.27, 1836.85],\n\t\t\tC3: [918.43, 1298.27],\n\t\t\tC4: [649.13, 918.43],\n\t\t\tC5: [459.21, 649.13],\n\t\t\tC6: [323.15, 459.21],\n\t\t\tC7: [229.61, 323.15],\n\t\t\tC8: [161.57, 229.61],\n\t\t\tC9: [113.39, 161.57],\n\t\t\tC10: [79.37, 113.39],\n\t\t\tRA0: [2437.80, 3458.27],\n\t\t\tRA1: [1729.13, 2437.80],\n\t\t\tRA2: [1218.90, 1729.13],\n\t\t\tRA3: [864.57, 1218.90],\n\t\t\tRA4: [609.45, 864.57],\n\t\t\tSRA0: [2551.18, 3628.35],\n\t\t\tSRA1: [1814.17, 2551.18],\n\t\t\tSRA2: [1275.59, 1814.17],\n\t\t\tSRA3: [907.09, 1275.59],\n\t\t\tSRA4: [637.80, 907.09],\n\t\t\tEXECUTIVE: [521.86, 756.00],\n\t\t\tFOLIO: [612.00, 936.00],\n\t\t\tLEGAL: [612.00, 1008.00],\n\t\t\tLETTER: [612.00, 792.00],\n\t\t\tTABLOID: [792.00, 1224.00]\n\t\t};\n\n\t\t// Calculate size\n\t\tlet fitSize = sizes[pageSize];\n\t\tif (orientation == \"landscape\") {\n\t\t\tfitSize.reverse();\n\t\t}\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n\t\treturn fitSize;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Data\n\t * ==========================================================================\n\t */\n\n\t/**\n\t\t* Returns `true` if `dataSource` is set, and the contents are proper\n\t\t* data (array).\n\t\t*\n\t\t* @return Has data?\n\t\t*/\n\tpublic hasData(): boolean {\n\t\tconst dataSource = this.get(\"dataSource\");\n\t\treturn $type.isArray(dataSource) && dataSource.length ? true : false;\n\t}\n\n\t/**\n\t * Returns processed data according to format options.\n\t *\n\t * @param   format         Format\n\t * @param   customOptions  Format options\n\t * @param   renameFields   Should fields be renamed?\n\t * @return                 Processed data\n\t */\n\tpublic getData(format: ExportingFormats, customOptions?: IExportingDataOptions, renameFields: boolean = false): any {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\tconst dataSource = this.get(\"dataSource\", []);\n\t\tlet data: any = dataSource;\n\n\t\t// Re-generate the data based on data fields if set\n\t\tconst dataFields = this.get(\"dataFields\");\n\t\tif (dataFields && $type.isArray(dataSource)) {\n\t\t\tdata = [];\n\t\t\t$array.each(dataSource, (row) => {\n\t\t\t\tif ($type.isObject(row)) {\n\t\t\t\t\tconst newRow: any = {}\n\t\t\t\t\t$object.each(dataFields, (field, value) => {\n\t\t\t\t\t\tif (dataFields![field] != null) {\n\t\t\t\t\t\t\tnewRow[renameFields ? value : field] = this.convertToSpecialFormat(field, row[field], options);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdata.push(newRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst event: any = {\n\t\t\ttype: \"dataprocessed\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tdata: data,\n\t\t\ttarget: this\n\t\t};\n\n\t\tthis.events.dispatch(\"dataprocessed\", event);\n\n\t\treturn event.data;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataFields(data: any): { [index: string]: string } {\n\t\tlet dataFields = this.get(\"dataFields\");\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\tif ($type.isArray(data) && data.length) {\n\t\t\t\t$array.each(data, (row) => {\n\t\t\t\t\t$object.each(row, (key, _value) => {\n\t\t\t\t\t\tif (dataFields![key] == null) {\n\t\t\t\t\t\t\tdataFields![key] = key;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn dataFields!;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertEmptyValue(_field: string, value: any, options: IExportingDataOptions): any {\n\t\treturn value != null ? value : options.emptyAs;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertToSpecialFormat(field: any, value: any, options: IExportingDataOptions, keepOriginal?: boolean): any {\n\n\t\t// Is this a timestamp or duration?\n\t\tif (typeof value == \"number\") {\n\t\t\tif (this.isDateField(field)) {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\telse if (this.isNumericField(field) && this.get(\"numberFormat\")) {\n\t\t\t\treturn this._root.numberFormatter.format(value, this.get(\"numberFormat\"));\n\t\t\t}\n\t\t\telse if (this.isDurationField(field)) {\n\t\t\t\treturn this._root.durationFormatter.format(value, this.get(\"durationFormat\"), this.get(\"durationUnit\"));\n\t\t\t}\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tif (options.useTimestamps) {\n\t\t\t\tvalue = value.getTime();\n\t\t\t}\n\t\t\telse if (options.useLocale) {\n\t\t\t\tif (!keepOriginal) {\n\t\t\t\t\tvalue = value.toLocaleString();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = this._root.dateFormatter.format(value, this.get(\"dateFormat\"));\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDateField(field: string): boolean {\n\t\treturn this.get(\"dateFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isNumericField(field: string): boolean {\n\t\treturn this.get(\"numericFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDurationField(field: string): boolean {\n\t\treturn this.get(\"durationFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getContentType(type: ExportingFormats): string {\n\t\tlet contentType = \"\";\n\t\tswitch (type) {\n\t\t\tcase \"png\":\n\t\t\t\tcontentType = \"image/\" + type;\n\t\t\t\tbreak;\n\t\t\tcase \"jpg\":\n\t\t\t\tcontentType = \"image/jpeg\";\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\tcontentType = \"text/csv\";\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tcontentType = \"application/json\";\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tcontentType = \"text/html\";\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\tcase \"pdfdata\":\n\t\t\t\tcontentType = \"application/pdf\";\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontentType = \"application/octet-stream\";\n\t\t}\n\n\t\treturn contentType;\n\t}\n\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis._root.dom.appendChild(canvas);\n\t\treturn canvas;\n\t}\n\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\n\t\tthis._root.dom.removeChild(canvas);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic findBackgroundColor(element: Element): Color {\n\n\t\t// Check if element has styles set\n\t\tlet opacity = 1;\n\t\tlet currentColor = getComputedStyle(element, \"background-color\").getPropertyValue(\"background-color\");\n\n\t\t// Check opacity\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n\t\t\topacity = 0;\n\t\t}\n\n\t\tif (opacity == 0) {\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\n\n\t\t\t// Completely transparent. Look for a parent\n\t\t\tif (parent) {\n\t\t\t\treturn this.findBackgroundColor(parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Color.fromHex(0xffffff);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromCSS(currentColor);\n\t\t}\n\n\t}\n\n\t/**\n\t * Triggers download of the file.\n\t *\n\t * @param   uri       data:uri with file content\n\t * @param   fileName  File name\n\t * @param   addBOM    Should download include byte order mark?\n\t * @return            Promise\n\t */\n\tpublic streamFile(uri: string, fileName: string, addBOM: boolean = false): boolean {\n\n\t\tif (this.blobDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * Supports Blob object.\n\t\t\t * Use it.\n\t\t\t */\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\n\t\t\t// Extract content type and get pure data without headers\n\t\t\tlet parts = uri.split(\";\");\n\t\t\tlet contentType = parts!.shift()!.replace(/data:/, \"\");\n\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n\t\t\t\ttry {\n\t\t\t\t\tlet decoded = atob(uri);\n\t\t\t\t\turi = decoded;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (addBOM) {\n\t\t\t\t\turi = \"\\ufeff\" + uri;\n\t\t\t\t}\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.download = fileName;\n\t\t\t\tlink.click();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdocument.body.removeChild(link);\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t\t}, 100);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Dissect uri into array\n\t\t\tlet chars = new Array(uri.length);\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\n\t\t\t\tlet charCode = uri.charCodeAt(i);\n\t\t\t\tchars[i] = charCode;\n\t\t\t}\n\n\t\t\tif (addBOM) {\n\t\t\t\tchars = [0xEF, 0xBB, 0xBF].concat(chars);\n\t\t\t}\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\n\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\tlink.href = url;\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t}, 100);\n\n\t\t}\n\n\t\telse if (this.linkDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * For regular browsers, we create a link then simulate a click on it\n\t\t\t */\n\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tlink.href = uri;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\n\t\t}\n\t\telse {\n\n\t\t\t/**\n\t\t\t * Something else - perhaps a mobile.\n\t\t\t * Let's just display it in the same page.\n\t\t\t * (hey we don't like it either)\n\t\t\t */\n\t\t\twindow.location.href = uri;\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic downloadSupport(): boolean {\n\t\treturn this.linkDownloadSupport();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkDownloadSupport(): boolean {\n\t\tlet a = document.createElement(\"a\");\n\t\tlet res = typeof a.download !== \"undefined\";\n\t\treturn res;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic blobDownloadSupport(): boolean {\n\t\treturn window.Blob != null;\n\t}\n\n\n\t/**\n\t * ==========================================================================\n\t * Print\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Initiates print of the chart.\n\t *\n\t * @param   data     data:uri for the image\n\t * @param   options  Options\n\t * @param   title    Optional title to use (uses window's title by default)\n\t * @return           Promise\n\t */\n\tpublic initiatePrint(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tif (options.printMethod == \"css\") {\n\t\t\tthis._printViaCSS(data, options, title);\n\t\t}\n\t\telse {\n\t\t\tthis._printViaIframe(data, options, title);\n\t\t}\n\n\t}\n\n\tprotected _printViaCSS(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t//Save current scroll position\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t// Hide all document nodes by applying custom CSS\n\t\tlet rule = new StyleRule($utils.getShadowRoot(this._root.dom), \"body > *\", {\n\t\t\t\"display\": \"none\",\n\t\t\t\"position\": \"fixed\",\n\t\t\t\"visibility\": \"hidden\",\n\t\t\t\"opacity\": \"0\",\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n\t\t}, this._root.nonce);\n\n\t\tlet rule2 = new StyleRule($utils.getShadowRoot(this._root.dom), \"body\", {\n\t\t\t\"padding\": \"0\",\n\t\t\t\"margin\": \"0\"\n\t\t}, this._root.nonce);\n\n\t\t// Replace title?\n\t\tlet originalTitle: string;\n\t\tif (title && document && document.title) {\n\t\t\toriginalTitle = document.title;\n\t\t\tdocument.title = title;\n\t\t}\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.display = \"block\";\n\t\timg.style.position = \"relative\";\n\t\timg.style.visibility = \"visible\";\n\t\timg.style.opacity = \"1\";\n\t\timg.style.clipPath = \"none\";\n\t\tdocument.body.appendChild(img);\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\t(<any>window).print();\n\t\t}, 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(img);\n\n\t\t\t// Reset back all elements\n\t\t\trule.dispose();\n\t\t\trule2.dispose();\n\n\t\t\t// Restore title\n\t\t\tif (originalTitle) {\n\t\t\t\tdocument.title = document.title;\n\t\t\t}\n\n\t\t\t// Scroll back the document the way it was before\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\n\n\t\t}, delay || 500);\n\n\t}\n\n\tprotected _printViaIframe(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t// Create an iframe\n\t\tconst iframe = document.createElement(\"iframe\");\n\t\tiframe.style.visibility = \"hidden\";\n\t\tdocument.body.appendChild(iframe);\n\n\t\t// This is needed for FireFox\n\t\tiframe.contentWindow!.document.open();\n\t\tiframe.contentWindow!.document.close();\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.height = \"auto\";\n\t\tif (title) {\n\t\t\tiframe.contentWindow!.document.title = title;\n\t\t}\n\t\tiframe.contentWindow!.document.body.appendChild(img);\n\n\t\t(<any>iframe).load = function() {\n\t\t\tiframe.contentWindow!.document.body.appendChild(img);\n\t\t};\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\ttry {\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\n\t\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t}\n\t\t}, delay || 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(iframe);\n\n\t\t}, delay + 50 || 100);\n\n\t}\n\n\t/**\n\t * Returns a list of formats that can be exported in current browser.\n\t *\n\t * @return Formats\n\t */\n\tpublic supportedFormats(): ExportingFormats[] {\n\t\tconst res: ExportingFormats[] = [];\n\t\tconst hasData = this.hasData();\n\t\tconst downloadSupport = this.downloadSupport();\n\t\t$array.each(<ExportingFormats[]>[\"png\", \"jpg\", \"canvas\", \"pdf\", \"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\", \"print\"], (format) => {\n\t\t\tconst options = this._getFormatOptions(format);\n\t\t\tif (options.disabled !== true) {\n\t\t\t\tif ([\"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\"].indexOf(format) == -1 || (hasData && downloadSupport)) {\n\t\t\t\t\tres.push(<ExportingFormats>format);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\t/**\n\t * Returns a list of supported export types: image or print.\n\t *\n\t * @return Supported types\n\t */\n\tpublic supportedExportTypes(): ExportingTypes[] {\n\t\tconst res: ExportingTypes[] = [\"image\", \"print\"];\n\t\tif (this.downloadSupport() && this.hasData()) {\n\t\t\tres.push(\"data\");\n\t\t}\n\t\treturn res;\n\t}\n\n}\n","import type { Root } from \"../../core/Root\"\n\nimport { StyleRule } from \"../../core/util/Utils\"\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../../core/util/Disposer\";\n\n/**\n * @ignore\n */\nlet rules: CounterDisposer | undefined;\n\n/**\n * @ignore\n */\nexport default function(element: ShadowRoot | null, root: Root, _prefix?: string): IDisposer {\n\t//const newPrefix = (prefix ? prefix : \"am5\");\n\n\t//let colorSet = new InterfaceColorSet();\n\tconst ic = root.interfaceColors;\n\n\tif (!rules) {\n\t\tconst disposer = new MultiDisposer([\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu\", {\n\t\t\t\t\"color\": ic.get(\"secondaryButtonText\")!.toCSS(),\n\t\t\t\t\"font-size\": \"0.8em\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu *\", {\n\t\t\t\t\"box-sizing\": \"border-box\",\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu a\", {\n\t\t\t\t\"display\": \"block\",\n\t\t\t\t\"cursor\": \"pointer\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-type-separator\", {\n\t\t\t\t\"color\": ic.get(\"disabled\")!.toCSS(),\n\t\t\t\t\"border-bottom\": \"1px solid \" + ic.get(\"secondaryButtonDown\")!.toCSS(),\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-label-alt\", {\n\t\t\t\t\"color\": ic.get(\"disabled\")!.toCSS(),\n\t\t\t\t\"font-size\": \"0.8em\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu .am5exporting-type-separator a\", {\n\t\t\t\t\"cursor\": \"default\"\n\t\t\t}, root.nonce),\n\t\t\tnew StyleRule(element, \".am5exporting-menu .am5exporting-type-separator a:hover\", {\n\t\t\t\t\"background\": \"initial\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu\", {\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"z-index\": \"10\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-icon\", {\n\t\t\t\t\"width\": \"30px\",\n\t\t\t\t\"height\": \"26px\",\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"margin\": \"5px\",\n\t\t\t\t\"padding\": \"3px 5px\",\n\t\t\t\t\"border-radius\": \"3px\",\n\t\t\t\t\"opacity\": \"0.5\",\n\t\t\t\t\"background\": \"rgba(255, 255, 255, 0.001)\",\n\t\t\t\t\"background-opacity\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-icon:focus, .am5exporting-icon:hover, .am5exporting-menu-open .am5exporting-icon\", {\n\t\t\t\t\"background\": ic.get(\"secondaryButtonHover\")!.toCSS(),\n\t\t\t\t\"opacity\": \"1\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu path\", {\n\t\t\t\t\"fill\": ic.get(\"secondaryButtonText\")!.toCSS()\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list\", {\n\t\t\t\t\"display\": \"none\",\n\t\t\t\t\"list-style\": \"none\",\n\t\t\t\t\"list-style-type\": \"none\",\n\t\t\t\t\"margin\": \"5px\",\n\t\t\t\t\"background\": ic.get(\"secondaryButton\")!.toCSS(),\n\t\t\t\t\"padding\": \"5px 0\",\n\t\t\t\t\"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\")!.toCSS(),\n\t\t\t\t\"border-radius\": \"3px\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu-open .am5exporting-list\", {\n\t\t\t\t\"display\": \"block\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item\", {\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item a\", {\n\t\t\t\t\"padding\": \"3px 15px\",\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item a:hover, .am5exporting-item a.am5exporting-item-active\", {\n\t\t\t\t\"background\": ic.get(\"secondaryButtonHover\")!.toCSS(),\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-align-left, .am5exporting-icon.am5exporting-align-left, .am5exporting-list.am5exporting-align-left\", {\n\t\t\t\t\"left\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-align-right, .am5exporting-icon.am5exporting-align-right, .am5exporting-list.am5exporting-align-right\", {\n\t\t\t\t\"right\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-valign-top, .am5exporting-icon.am5exporting-valign-top, .am5exporting-list.am5exporting-align-top\", {\n\t\t\t\t\"top\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-valign-bottom, .am5exporting-icon.am5exporting-valign-bottom, .am5exporting-list.am5exporting-align-bottom\", {\n\t\t\t\t\"bottom\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list.am5exporting-align-left\", {\n\t\t\t\t\"margin-left\": \"40px\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list.am5exporting-align-right\", {\n\t\t\t\t\"margin-right\": \"40px\"\n\t\t\t}, root.nonce),\n\n\t\t\t// new StyleRule(element, \".${newPrefix}-menu-level-0\", {\n\t\t\t// \t\"position\": \"absolute\",\n\t\t\t// \t\"top\": \"5px\",\n\t\t\t// \t\"right\": \"5px\",\n\t\t\t// })\n\t\t]);\n\n\t\trules = new CounterDisposer(() => {\n\t\t\trules = undefined;\n\t\t\tdisposer.dispose();\n\t\t});\n\t}\n\n\treturn rules.increment();\n}","import type { Exporting, ExportingFormats, ExportingTypes } from \"./Exporting\"\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { IDisposer, Disposer } from \"../../core/util/Disposer\";\nimport exportingCSS from \"./ExportingCSS\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IExportingMenuItem {\n\n\t/**\n\t * Indicates type of the menu item:\n\t * * `\"format\"` - indicates export action\n\t * * `\"separator\"` - will show horizontal divider.\n\t * * `\"custom\"` - will invoke custom function when clicked.\n\t */\n\ttype: \"format\" | \"separator\" | \"custom\";\n\n\t/**\n\t * If `type` is set to `\"format\"`, clicking item will initiate export in\n\t * that format.\n\t */\n\tformat?: ExportingFormats;\n\n\t/**\n\t * Indicates export type: `\"image\"`, `\"data\"`, or `\"print\"`.\n\t */\n\texportType?: ExportingTypes;\n\n\t/**\n\t * Menu label.\n\t */\n\tlabel?: string;\n\n\t/**\n\t * Additional information.\n\t */\n\tsublabel?: string;\n\n\t/**\n\t * If `type` is set to `\"custom\"`, this needs to be set to a function.\n\t */\n\tcallback?: (menuItem?: any) => any;\n\n\t/**\n\t * A target for callback function.\n\t */\n\tcallbackTarget?: any;\n\n\t/**\n\t * A DOM element for the menu item.\n\t *\n\t * @readonly\n\t */\n\telement?: HTMLAnchorElement;\n\n}\n\nexport interface IExportingMenuSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal alignment of the menu.\n\t *\n\t * @default \"right\"\n\t */\n\talign?: \"left\" | \"right\";\n\n\t/**\n\t * Vertical alignment of the menu.\n\t *\n\t * @default \"top\"\n\t */\n\tvalign?: \"top\" | \"bottom\";\n\n\t/**\n\t * A reference to an element in the document to place export menu in.\n\t *\n\t * If not set, will use root element's container.\n\t */\n\tcontainer?: HTMLElement;\n\n\t/**\n\t * A list of menu items.\n\t */\n\titems?: IExportingMenuItem[];\n\n\t/**\n\t * A reference to related [[Exporting]] object.\n\t */\n\texporting?: Exporting;\n\n\t/**\n\t * If set to `false` the legend will not load default CSS.\n\t *\n\t * @default true\n\t */\n\tuseDefaultCSS?: boolean;\n\n\t/**\n\t * If set to `true` the menu will close automatically when export operation\n\t * is initiated.\n\t *\n\t * @default true\n\t */\n\tautoClose?: boolean;\n\n\t/**\n\t * Menu will disable all interactions for the underlying chart when browsing\n\t * the menu.\n\t *\n\t * @default true\n\t */\n\tdeactivateRoot?: boolean;\n\n}\n\nexport interface IExportingMenuPrivate extends IEntityPrivate {\n\n\t/**\n\t * A `<div>` element that acts as a container for other menu elements.\n\t */\n\tmenuElement?: HTMLDivElement;\n\n\t/**\n\t * A top-level `<ul>` element containing menu items.\n\t */\n\tlistElement?: HTMLUListElement;\n\n}\n\nexport interface IExportingMenuEvents extends IEntityEvents {\n\t\"menucreated\": {}\n\t\"menuopened\": {}\n\t\"menuclosed\": {}\n}\n\n/**\n * Displays a menu for [[Exporting]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/} for more info\n */\nexport class ExportingMenu extends Entity {\n\tpublic static className: string = \"ExportingMenu\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([ExportingMenu.className]);\n\n\tdeclare public _settings: IExportingMenuSettings;\n\tdeclare public _privateSettings: IExportingMenuPrivate;\n\tdeclare public _events: IExportingMenuEvents;\n\n\tprivate _menuElement?: HTMLDivElement;\n\tprivate _iconElement?: HTMLElement;\n\tprivate _listElement?: HTMLUListElement;\n\tprivate _itemElements?: HTMLLIElement[] = [];\n\tprivate _itemDisposers: Array<IDisposer> = [];\n\n\tprivate _cssDisposer?: IDisposer;\n\tprivate _activeItem?: IExportingMenuItem;\n\n\tpublic isOpen: boolean = false;\n\n\tprivate _isOver: boolean = false;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"container\", this._root._inner);\n\t\tthis._setRawDefault(\"align\", \"right\");\n\t\tthis._setRawDefault(\"valign\", \"top\");\n\t\tthis._setRawDefault(\"useDefaultCSS\", true);\n\t\tthis._setRawDefault(\"autoClose\", true);\n\t\tthis._setRawDefault(\"deactivateRoot\", true);\n\t\tthis._setRawDefault(\"items\", [{\n\t\t\ttype: \"separator\",\n\t\t\tlabel: this._t(\"Export\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"png\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"PNG\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"jpg\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"JPG\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"pdf\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"PDF\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"separator\",\n\t\t\texportType: \"data\",\n\t\t\t//label: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"json\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"JSON\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"csv\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"CSV\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"xlsx\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"XLSX\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"pdfdata\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"PDF\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"html\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"HTML\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"separator\"\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"print\",\n\t\t\texportType: \"print\",\n\t\t\tlabel: this._t(\"Print\")\n\t\t}]);\n\n\t\tconst menuElement = document.createElement(\"div\");\n\t\tthis._menuElement = menuElement;\n\t\tthis.setPrivate(\"menuElement\", this._menuElement);\n\n\t\tconst iconElement = document.createElement(\"a\");\n\t\tthis._iconElement = iconElement;\n\n\t\tthis._listElement = document.createElement(\"ul\");\n\t\tthis._listElement.setAttribute(\"role\", \"menu\");\n\t\tthis.setPrivate(\"listElement\", this._listElement);\n\t\tthis._applyClassNames();\n\n\t\ticonElement.innerHTML = '<svg fill=\"none\" height=\"20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\"/></svg>';\n\t\ticonElement.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\ticonElement.setAttribute(\"aria-label\", this._t(\"Export\") + \"; \" + this._t(\"Press ENTER to open\"));\n\t\ticonElement.setAttribute(\"role\", \"button\");\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\tif (document.activeElement == this._iconElement || this.isOpen) {\n\t\t\t\t\tif (eventKey == \"Escape\") {\n\t\t\t\t\t\t// ESC\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t\telse if (eventKey == \"Enter\") {\n\t\t\t\t\t\t// ENTER\n\t\t\t\t\t\tif (this._activeItem) {\n\t\t\t\t\t\t\tthis._handleClick(this._activeItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.toggle();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (eventKey == \"ArrowUp\" || eventKey == \"ArrowDown\") {\n\t\t\t\t\t\tconst items = this.get(\"items\", []);\n\t\t\t\t\t\tlet currentIndex = (<any>items).indexOf(this._activeItem);\n\t\t\t\t\t\tif (this.get(\"valign\") == \"top\" && currentIndex == -1) {\n\t\t\t\t\t\t\tcurrentIndex = items.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dir = eventKey == \"ArrowUp\" ? -1 : 1;\n\t\t\t\t\t\tlet newIndex = currentIndex + dir;\n\t\t\t\t\t\tlet newItem;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (newIndex < 0) {\n\t\t\t\t\t\t\t\tnewIndex = items.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (newIndex > (items.length - 1)) {\n\t\t\t\t\t\t\t\tnewIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (items[newIndex].type == \"separator\") {\n\t\t\t\t\t\t\t\tnewIndex += dir;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tnewItem = items[newIndex];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (!newItem);\n\n\t\t\t\t\t\tif (newItem) {\n\t\t\t\t\t\t\tthis._handleItemFocus(newItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push($utils.addEventListener(iconElement, \"click\", (ev: MouseEvent) => {\n\t\t\tev.stopImmediatePropagation();\n\t\t\tthis.toggle();\n\t\t}));\n\n\t\tmenuElement.appendChild(this._iconElement);\n\t\tmenuElement.appendChild(this._listElement);\n\n\t\tconst container = this.get(\"container\", this._root._inner);\n\n\t\tcontainer.appendChild(this._menuElement);\n\n\t\tthis._disposers.push($utils.addEventListener(menuElement, $utils.getRendererEvent(\"pointerover\"), (_ev) => {\n\t\t\tthis._isOver = true;\n\t\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push($utils.addEventListener(menuElement, $utils.getRendererEvent(\"pointerout\"), (_ev) => {\n\t\t\tif (this.get(\"deactivateRoot\") && (this.isOpen || this._isOver)) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t\t}\n\t\t\tthis._isOver = false;\n\t\t}));\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\tif (this._menuElement) {\n\t\t\t\tcontainer.removeChild(this._menuElement);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push($utils.addEventListener(document, \"click\", (_ev) => {\n\t\t\tif (this.isOpen && !this._isOver) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t}));\n\n\t\tthis.loadDefaultCSS();\n\n\t\tthis._root.addDisposer(this);\n\n\t\tthis.events.dispatch(\"menucreated\", {\n\t\t\ttype: \"menucreated\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tif (this._itemElements!.length == 0) {\n\t\t\tthis.createItems();\n\t\t}\n\n\t\tif (this.isDirty(\"useDefaultCSS\")) {\n\t\t\tif (this.get(\"useDefaultCSS\")) {\n\t\t\t\tthis.loadDefaultCSS();\n\t\t\t}\n\t\t\telse if (this._cssDisposer) {\n\t\t\t\tthis._cssDisposer.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"exporting\")) {\n\t\t\tconst exporting = this.get(\"exporting\");\n\t\t\tif (exporting) {\n\t\t\t\tthis.createItems();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"align\") || this.isDirty(\"valign\")) {\n\t\t\tthis._applyClassNames();\n\t\t}\n\n\t\tif (this.isDirty(\"container\")) {\n\t\t\tconst container = this.get(\"container\");\n\t\t\tif (container) {\n\t\t\t\tcontainer.appendChild(this._menuElement!);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\t$array.each(this._itemDisposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n\n\tprivate _applyClassNames(): void {\n\t\tconst align = this.get(\"align\", \"right\");\n\t\tconst valign = this.get(\"valign\", \"top\");\n\t\tconst status = this.isOpen ? \"am5exporting-menu-open\" : \"am5exporting-menu-closed\";\n\n\t\tthis._menuElement!.className = \"am5exporting am5exporting-menu am5exporting-align-\" + align + \" am5exporting-valign-\" + valign + \" \" + status;\n\t\tthis._iconElement!.className = \"am5exporting am5exporting-icon am5exporting-align-\" + align + \" am5exporting-valign-\" + valign;\n\t\tthis._listElement!.className = \"am5exporting am5exporting-list am5exporting-align-\" + align + \" am5exporting-valign-\" + valign;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createItems(): void {\n\t\tconst exporting = this.get(\"exporting\");\n\t\tif (!exporting) {\n\t\t\treturn;\n\t\t}\n\t\tthis._listElement!.innerHTML = \"\";\n\t\tthis._itemElements = [];\n\t\tconst items = this.get(\"items\", []);\n\t\tconst supportedFormats = exporting.supportedFormats();\n\t\tconst supportedExportTypes = exporting.supportedExportTypes();\n\n\t\t$array.each(this._itemDisposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\tthis._itemDisposers.length = 0;\n\n\t\t$array.each(items, (item) => {\n\n\t\t\tif (item.format && supportedFormats.indexOf(item.format) == -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (item.exportType && supportedExportTypes.indexOf(item.exportType) == -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst li = document.createElement(\"li\");\n\t\t\tli.setAttribute(\"role\", \"menuitem\");\n\n\t\t\tli.className = \"am5exporting am5exporting-item am5exporting-type-\" + item.type;\n\t\t\tif (item.format) {\n\t\t\t\tli.className += \" am5exporting-format-\" + item.format;\n\t\t\t}\n\n\t\t\tconst a = document.createElement(\"a\");\n\n\t\t\tlet ariaLabel = this._t(\"Export\");\n\t\t\tif (item.label) {\n\t\t\t\ta.innerHTML = item.label;\n\t\t\t\tariaLabel += \" \" + item.label;\n\t\t\t}\n\n\t\t\tif (item.sublabel) {\n\t\t\t\ta.innerHTML += \" <span class=\\\"am5exporting-label-alt\\\">\" + item.sublabel + \"</span>\";\n\t\t\t\tariaLabel += \" (\" + item.sublabel + \")\";\n\t\t\t}\n\n\t\t\tif (item.callback) {\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"click\", (_ev) => {\n\t\t\t\t\titem.callback!.call(item.callbackTarget || this)\n\t\t\t\t}));\n\t\t\t\ta.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\t\t}\n\t\t\telse if (item.format && exporting) {\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"click\", (_ev) => {\n\t\t\t\t\tthis._handleClick(item);\n\t\t\t\t}));\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"focus\", (_ev) => {\n\t\t\t\t\tthis._handleItemFocus(item);\n\t\t\t\t}));\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"blur\", (_ev) => {\n\t\t\t\t\tthis._handleItemBlur(item);\n\t\t\t\t}));\n\t\t\t\ta.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\t\t\ta.setAttribute(\"aria-label\", ariaLabel);\n\t\t\t}\n\n\t\t\titem.element = a;\n\t\t\tli.appendChild(a);\n\t\t\tthis._listElement!.appendChild(li);\n\t\t\tthis._itemElements!.push(li);\n\t\t});\n\t}\n\n\tprivate _handleClick(item: IExportingMenuItem): void {\n\t\tconst exporting = this.get(\"exporting\")!;\n\t\tif (this.get(\"autoClose\")) {\n\t\t\tthis.close();\n\t\t}\n\t\tif (item.format == \"print\") {\n\t\t\texporting.print();\n\t\t}\n\t\telse {\n\t\t\texporting.download(item.format!);\n\t\t}\n\t}\n\n\tprivate _handleItemFocus(item: IExportingMenuItem): void {\n\t\tif (item != this._activeItem) {\n\t\t\tif (this._activeItem) {\n\t\t\t\tthis._activeItem.element!.className = \"\";\n\t\t\t}\n\t\t\tthis._activeItem = item;\n\t\t\titem.element!.className = \"am5exporting-item-active\";\n\t\t\titem.element!.focus();\n\t\t}\n\t}\n\n\tprivate _handleItemBlur(item: IExportingMenuItem): void {\n\t\titem.element!.className = \"\";\n\t\tif (item == this._activeItem) {\n\t\t\tthis._activeItem = undefined\n\t\t}\n\t\tthis.setTimeout(() => {\n\t\t\tif (!document.activeElement || !$utils.contains(this.get(\"container\")!, document.activeElement!)) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t}, 10);\n\n\t}\n\n\t/**\n\t * Loads the default CSS.\n\t *\n\t * @ignore Exclude from docs\n\t */\n\tpublic loadDefaultCSS(): void {\n\t\tconst disposer = exportingCSS($utils.getShadowRoot(this._root.dom), this._root);\n\t\tthis._disposers.push(disposer);\n\t\tthis._cssDisposer = disposer;\n\n\t\t// if (this._element) {\n\t\t// \tthis._element.style.display = \"\";\n\t\t// }\n\t}\n\n\t/**\n\t * Opens menu.\n\t */\n\tpublic open(): void {\n\t\tthis.setTimeout(() => {\n\t\t\tthis.isOpen = true;\n\t\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t\t}\n\t\t\tthis._applyClassNames();\n\t\t\tthis.events.dispatch(\"menuopened\", {\n\t\t\t\ttype: \"menuopened\",\n\t\t\t\ttarget: this\n\t\t\t});\n\t\t}, 1);\n\t}\n\n\t/**\n\t * Closes menu.\n\t */\n\tpublic close(): void {\n\t\tthis.isOpen = false;\n\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t}\n\t\t$utils.blur();\n\t\tthis._applyClassNames();\n\t\tthis.events.dispatch(\"menuclosed\", {\n\t\t\ttype: \"menuclosed\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\t/**\n\t * Toggles menu open and close.\n\t */\n\tpublic toggle(): void {\n\t\tif (this.isOpen) {\n\t\t\tthis.close();\n\t\t}\n\t\telse {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\n}\n","import { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { Container } from \"../../core/render/Container\";\nimport { Picture } from \"../../core/render/Picture\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IAnnotatorSettings extends IEntitySettings {\n\n\t/**\n\t * Layer number to use for annotations.\n\t *\n\t * @default 1000\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Raw annotation info saved by MarkerJS.\n\t */\n\tmarkerState?: any;\n\n\t/**\n\t * MarkerArea settings in form of an object where keys are setting names and\n\t * value is a setting value. E.g.:\n\t *\n\t * ```TypeScript\n\t * let annotator = am5plugins_exporting.Annotator.new(root, {\n\t *  markerSettings: {\n\t *    defaultColorSet: [\"red\", \"green\", \"blue\"],\n\t *    wrapText: true\n\t *  }\n\t *});\n\t * ```\n\t * ```JavaScript\n\t * var annotator = am5plugins_exporting.Annotator.new(root, {\n\t *  markerSettings: {\n\t *    defaultColorSet: [\"red\", \"green\", \"blue\"],\n\t *    wrapText: true\n\t *  }\n\t *});\n\t * ```\n\t *\n\t * @see {@link https://markerjs.com/reference/classes/settings.html} for a full list of settings\n\t * @since 5.7.4\n\t */\n\tmarkerSettings?: {[index: string]: any};\n\n\t/**\n\t * MarkerArea style settings for user interface elements.E.g.:\n\t *\n\t * ```TypeScript\n\t * let annotator = am5plugins_exporting.Annotator.new(root, {\n\t *  markerStyleSettings: {\n\t *    toolboxColor: \"#F472B6\",\n\t *    toolboxAccentColor: \"#BE185D\"\n\t *  }\n\t *});\n\t * ```\n\t * ```JavaScript\n\t * var annotator = am5plugins_exporting.Annotator.new(root, {\n\t *  markerStyleSettings: {\n\t *    toolboxColor: \"#F472B6\",\n\t *    toolboxAccentColor: \"#BE185D\"\n\t *  }\n\t *});\n\t * ```\n\t *\n\t * @see {@link https://markerjs.com/reference/classes/settings.html} for a full list of settings\n\t * @since 5.7.5\n\t */\n\tmarkerStyleSettings?: {[index: string]: any};\n\n}\n\nexport interface IAnnotatorPrivate extends IEntityPrivate {\n}\n\nexport interface IAnnotatorEvents extends IEntityEvents {\n}\n\n\n\n/**\n * A plugin that can be used to annotate charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/annotator/} for more info\n */\nexport class Annotator extends Entity {\n\tpublic static className: string = \"Annotator\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Annotator.className]);\n\n\tdeclare public _settings: IAnnotatorSettings;\n\tdeclare public _privateSettings: IAnnotatorPrivate;\n\tdeclare public _events: IAnnotatorEvents;\n\n\tprivate _container?: Container;\n\tprivate _picture?: Picture;\n\tprivate _markerArea?: any;\n\tprivate _skipRender?: boolean = false;\n\n\t//public extraImages: Array<Root | IAnnotatorImageSource> = [];\n\t//public dataSources: any[] = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"layer\", 1000);\n\t\tthis._root.addDisposer(this);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"markerState\")) {\n\t\t\tthis._renderState();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers annotation mode on the chart. This will display UI toolbars and\n\t * disable all interactions on the chart itself.\n\t */\n\tpublic async open() {\n\n\t\t// Delay this so that it's not knocked off by closing of the ExportingMenu\n\t\tthis.setTimeout(() => {\n\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t}, 100)\n\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tmarkerArea.show();\n\t\tthis._picture!.hide(0);\n\t\tif (this.get(\"markerState\")) {\n\t\t\tmarkerArea.restoreState(this.get(\"markerState\"));\n\t\t}\n\t}\n\n\tpublic async _renderState() {\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tif (this.get(\"markerState\")) {\n\t\t\tthis._skipRender = true;\n\t\t\tmarkerArea.renderState(this.get(\"markerState\"));\n\t\t}\n\t}\n\n\t/**\n\t * Exists from annotation mode. All annotations remain visible on the chart.\n\t */\n\tpublic async close() {\n\t\t//this._root._renderer.interactionsEnabled = true;\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tmarkerArea!.close();\n\t\tthis._markerArea = undefined;\n\t}\n\n\t/**\n\t * Exits from annotation mode. Any changes made during last session of the\n\t * annotation editing are cancelled.\n\t */\n\tpublic async cancel() {\n\t\tthis._root._renderer.interactionsEnabled = true;\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tthis._picture!.show(0);\n\t\tmarkerArea!.close();\n\t\tthis._markerArea = undefined;\n\t\t//markerArea!.cancel();\n\t}\n\n\t/**\n\t * All annotations are removed.\n\t */\n\tpublic clear() {\n\t\tthis.set(\"markerState\", undefined);\n\t\tif (this._picture) {\n\t\t\tthis._picture.set(\"src\", \"\");\n\t\t}\n\t}\n\n\tpublic async toggle() {\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tif (markerArea.isOpen) {\n\t\t\tthis.close();\n\t\t}\n\t\telse {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._markerArea && this._markerArea.isOpen) {\n\t\t\tthis._markerArea.close();\n\t\t}\n\t}\n\n\tprivate async _maybeInit() {\n\n\t\t// Create layer canvas\n\t\tif (!this._container) {\n\t\t\tthis._container = this._root.container.children.push(Container.new(this._root, {\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100,\n\t\t\t\tlayer: this.get(\"layer\"),\n\t\t\t\tinteractiveChildren: false\n\t\t\t}));\n\n\t\t\tthis._picture = this._container.children.push(Picture.new(this._root, {\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100\n\t\t\t}));\n\t\t}\n\n\t\t// Create MarkerArea\n\t\tif (!this._markerArea) {\n\t\t\tconst markerjs2 = await this._getMarkerJS();\n\t\t\tconst canvas = this._container._display.getCanvas();\n\t\t\tconst markerArea = new markerjs2.MarkerArea(canvas);\n\t\t\t//markerArea.renderTarget = canvas;\n\t\t\tmarkerArea.uiStyleSettings.logoPosition = \"right\";\n\t\t\tmarkerArea.uiStyleSettings.zIndex = 20;\n\t\t\tmarkerArea.targetRoot = canvas.parentElement!;\n\n\t\t\t// Apply custom settings\n\t\t\tconst markerSettings = this.get(\"markerSettings\", {});\n\t\t\t$object.each(markerSettings, (key, value) => {\n\t\t\t\tmarkerArea.settings[key] = value;\n\t\t\t});\n\n\t\t\tconst markerStyleSettings = this.get(\"markerStyleSettings\", {});\n\t\t\t$object.each(markerStyleSettings, (key, value) => {\n\t\t\t\tmarkerArea.uiStyleSettings[key] = value;\n\t\t\t});\n\n\t\t\tthis._disposers.push($utils.addEventListener(markerArea, \"close\", () => {\n\t\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t\t\tthis._picture!.show(0);\n\t\t\t\tthis._markerArea = undefined;\n\t\t\t}));\n\n\t\t\tthis._disposers.push($utils.addEventListener(markerArea, \"render\", (event: any) => {\n\t\t\t\tconst picture = this._picture!;\n\t\t\t\tpicture.set(\"src\", event.dataUrl);\n\t\t\t\tif (!this._skipRender) {\n\t\t\t\t\tthis.set(\"markerState\", event.state);\n\t\t\t\t}\n\t\t\t\tthis._skipRender = false;\n\t\t\t}));\n\n\t\t\tthis._markerArea = markerArea;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate async _getMarkerJS(): Promise<any> {\n\t\treturn await import(/* webpackChunkName: \"markerjs2\" */ \"markerjs2\");\n\t}\n\n\t/**\n\t * An instance of MarkerJS's [[MarkerArea]].\n\t *\n\t * @see {@link https://markerjs.com/docs/getting-started} for more info\n\t * @return MarkerArea\n\t */\n\tpublic async getMarkerArea(): Promise<any> {\n\t\tawait this._maybeInit();\n\t\treturn this._markerArea;\n\t}\n\n}\n"],"names":["Picture","Sprite","constructor","Object","defineProperty","this","_root","_renderer","makePicture","undefined","_changed","super","isDirty","width","get","_display","$type","height","clear","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","_load","src","image","Image","crossOrigin","events","decode","then","_updateSize","isDisposed","isEnabled","dispatch","type","target","catch","_error","w","getPrivate","h","r","markDirtyBounds","markDirty","classNames","concat","className","pdfmakePromise","Exporting","Entity","_afterNew","_setRawDefault","quality","maintainPixelRatio","delay","printMethod","imageFormat","indent","renameFields","separator","addColumnNames","emptyAs","addBOM","fontSize","align","addURL","addDisposer","_beforeChanged","menu","set","_disposers","push","_getFormatOptions","format","options","newOptions","$object","key","value","download","customOptions","ext","fileName","uri","export","streamFile","print","initiatePrint","promise","_runTickerNow","exportImage","exportJSON","exportCSV","exportHTML","exportXLSX","exportPDF","exportPDFData","canvas","getCanvas","data","toDataURL","getContentType","disposeCanvas","exportCanvas","mainCanvas","_rootContainer","extraImages","middleLeft","middleTop","middleWidth","middleHeight","extraRight","extraBottom","extras","$array","extraRoot","extra","Root","source","position","marginTop","marginRight","marginBottom","marginLeft","extraCanvas","extraWidth","extraHeight","crop","Math","max","left","top","newCanvas","getDisposableCanvas","ctx","getContext","background","findBackgroundColor","dom","backgroundOpacity","fillStyle","toCSS","fillRect","right","bottom","drawImage","encodeURIComponent","getJSON","JSON","stringify","getData","_key","field","item","convertToSpecialFormat","getCSV","csv","br","dataFields","getDataFields","pivot","dataFieldsOrder","val","dataRow","len","length","i","dataValue","getCSVRow","a","b","ai","indexOf","bi","row","reverse","asIs","arguments","items","_name","convertEmptyValue","replace","forceQuotes","search","RegExp","join","getHTML","html","tableClass","getHTMLRow","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","getXLSX","XLSX","getXLSXLib","wbOptions","bookType","bookSST","sheetName","_normalizeExcelSheetName","_t","wb","SheetNames","Sheets","wsData","getXLSXRow","utils","aoa_to_sheet","workbook","workbookOptions","xlsx","write","name","substr","_xlsx","getPDF","includeImage","includeData","dataOptions","orientation","pageOrientation","imageSize","imageOptions","clientWidth","clientHeight","pdfmake","getPdfmake","doc","pageSize","pageMargins","defaultStyle","font","content","title","extraMargin","text","bold","margin","document","location","href","fitSize","getPageSizeFit","alignment","fit","hasData","table","getPDFData","fonts","vfs","addFont","paths","normal","path","bytes","italics","bolditalics","extraFonts","Promise","success","createPdf","getBase64","body","getPDFDataRow","headerRows","all","default","vfs_fonts","global","window","pdfMake","_pdfmake","margins","newMargins","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","dataSource","newRow","event","_value","_field","keepOriginal","isDateField","Date","isNumericField","numberFormatter","isDurationField","durationFormatter","useTimestamps","getTime","useLocale","toLocaleString","dateFormatter","contentType","createElement","style","appendChild","removeChild","element","opacity","currentColor","getComputedStyle","getPropertyValue","match","parent","parentElement","Color","fromHex","fromCSS","blobDownloadSupport","link","parts","split","shift","decodeURIComponent","blob","Blob","url","URL","createObjectURL","click","setTimeout","revokeObjectURL","atob","e","chars","Array","charCode","Uint8Array","linkDownloadSupport","downloadSupport","_printViaCSS","_printViaIframe","originalTitle","scroll","documentElement","scrollTop","rule","StyleRule","$utils","nonce","rule2","img","maxWidth","display","visibility","clipPath","test","navigator","userAgent","MSStream","dispose","iframe","contentWindow","open","close","load","execCommand","supportedFormats","res","disabled","supportedExportTypes","rules","ExportingMenu","_inner","label","exportType","sublabel","menuElement","_menuElement","setPrivate","iconElement","_iconElement","_listElement","setAttribute","_applyClassNames","innerHTML","tabindex","toString","ev","eventKey","activeElement","isOpen","_activeItem","_handleClick","toggle","currentIndex","dir","newItem","newIndex","_handleItemFocus","stopImmediatePropagation","container","_ev","_isOver","interactionsEnabled","Disposer","loadDefaultCSS","_afterChanged","_itemElements","createItems","_cssDisposer","_dispose","_itemDisposers","x","valign","status","exporting","li","ariaLabel","callback","call","callbackTarget","_handleItemBlur","focus","disposer","root","ic","interfaceColors","MultiDisposer","CounterDisposer","increment","exportingCSS","Annotator","_renderState","markerArea","getMarkerArea","show","_picture","hide","restoreState","_skipRender","renderState","_markerArea","cancel","_maybeInit","_container","children","Container","new","p100","layer","interactiveChildren","markerjs2","_getMarkerJS","MarkerArea","uiStyleSettings","logoPosition","zIndex","targetRoot","markerSettings","settings","markerStyleSettings","dataUrl","state"],"sourceRoot":""}